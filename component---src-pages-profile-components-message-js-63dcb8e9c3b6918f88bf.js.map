{"version":3,"file":"component---src-pages-profile-components-message-js-63dcb8e9c3b6918f88bf.js","mappings":"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","sources":["webpack://blabzio/./node_modules/@emoji-mart/react/dist/module.js","webpack://blabzio/./src/Accounts/useAuth.js","webpack://blabzio/./src/pages/profileComponents/Message.js","webpack://blabzio/./src/images/proxy.jpeg","webpack://blabzio/./node_modules/nanoid/index.browser.js"],"sourcesContent":["import $dvPge$react, {useRef as $dvPge$useRef, useEffect as $dvPge$useEffect} from \"react\";\nimport {Picker as $dvPge$Picker} from \"emoji-mart\";\n\n\n\nfunction $e5534fc185f7111e$export$2e2bcd8739ae039(props) {\n    const ref = (0, $dvPge$useRef)(null);\n    const instance = (0, $dvPge$useRef)(null);\n    if (instance.current) instance.current.update(props);\n    (0, $dvPge$useEffect)(()=>{\n        instance.current = new (0, $dvPge$Picker)({\n            ...props,\n            ref: ref\n        });\n        return ()=>{\n            instance.current = null;\n        };\n    }, []);\n    return /*#__PURE__*/ (0, $dvPge$react).createElement(\"div\", {\n        ref: ref\n    });\n}\n\n\nexport {$e5534fc185f7111e$export$2e2bcd8739ae039 as default};\n//# sourceMappingURL=module.js.map\n","import { useState, useEffect } from 'react';\nimport 'firebase/auth';\n\nimport 'firebase/database';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/database';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nconst firebaseConfig2 = {\n\n  apiKey: \"AIzaSyAM5p7O6YuAvCxfDCbR48Duz019qkoVp0Y\",\n\n  authDomain: \"itsmynodezena.firebaseapp.com\",\n\n  databaseURL: \"https://itsmynodezena-default-rtdb.firebaseio.com\",\n\n  projectId: \"itsmynodezena\",\n\n  storageBucket: \"itsmynodezena.appspot.com\",\n\n  messagingSenderId: \"299392955521\",\n\n  appId: \"1:299392955521:web:ef5671ad2702d441304980\"\n\n};\n\nexport function useAuth() {\n\n\n  firebase.initializeApp(firebaseConfig2, 'app05');\n  const app05 = firebase.app('app05');\nconst apps = app05;\n\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState();\n\n  useEffect(() => {\n    const unsubscribe = app05.auth().onAuthStateChanged((firebaseUser) => {\n      if (firebaseUser) {\n        setUser(firebaseUser);\n        setLoading(true);\n      } else {\n        setUser(null);\n        setLoading(false);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n\n\n  function signInWithEmailAndPassword(email, password) {\n    return app05.auth().signInWithEmailAndPassword(email, password);\n  }\n\n  function signOut() {\n   setUser(\"\")\n    return app05.auth().signOut();\n    \n  }\n\n  return { apps, user,setUser, app05, loading, signInWithEmailAndPassword, signOut };\n}","import React, { useState, useEffect, useRef } from 'react';\nimport firebase from 'firebase/compat/app';\nimport { useAuth } from '../../Accounts/useAuth';\nimport { nanoid } from 'nanoid';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport im from '../../images/proxy.jpeg';\nimport data from '@emoji-mart/data';\nimport Picker from '@emoji-mart/react';\nimport { Button } from 'primereact/button';\n\nimport{\n  faSun,\n  faG,\n  faSmile,\n  faPaperPlane,\n  faPaperclip,\n  \n  faImages,\n \n} from '@fortawesome/free-solid-svg-icons';\nimport 'firebase/compat/firestore'; // import from compat version\nimport { event } from 'jquery';\nconst firebaseConfig013 = {\n\n  apiKey: \"AIzaSyALrSOduM9yvvHS_fR14WeCcgEhH5D8oCA\",\n\n  authDomain: \"zenaglob.firebaseapp.com\",\n\n  databaseURL: \"https://zenaglob-default-rtdb.firebaseio.com\",\n\n  projectId: \"zenaglob\",\n\n  storageBucket: \"zenaglob.appspot.com\",\n\n  messagingSenderId: \"62411931925\",\n\n  appId: \"1:62411931925:web:6581dc5950a7a2137fa91c\",\n\n  measurementId: \"G-KDMQLLD16X\"\n\n  };\n  \n\n  const Message = ({ userid, useris,email }) => {\n  \n    const [isLoading, setIsLoading] = useState(false); // add loading state\n    const { user, setUser, signOut } = useAuth();\n  \n    firebase.initializeApp(firebaseConfig013, 'app013');\n    const app013 = firebase.app('app013');\n  \n    const [messages, setMessages] = useState([]);\n\n    const [newMessage, setNewMessage] = useState('');\n\n    const chatId1 = user && `${user.uid}-${userid}`;\n   \n    const chatId2 = user && `${userid}-${user.uid}`;\n\n\n    const [previews, setPreviews] = useState('')\n    const contentEditableRef = useRef('');\n\n\n    const [isFocused, setIsFocused] = useState(false);\n    const [content, setContent] = useState(\"\");\n    \n    const handleFocus = () => {\n      setIsFocused(true);\n    };\n    \n    const handleBlur = () => {\n      setIsFocused(false);\n    };\n    \n    \n    const handleChange = (event) => {\n\n\n      const inputValue = event.target.innerHTML;\n      \n      console.log(\"if this is the vals\", inputValue)\n      setNewMessage(inputValue);\n      \n      if(inputValue.length <= 0) {\n      setNewMessage(\"\")\n      }\n      }\n    // Send message to Firebase Realtime Database\n    const sendMessage = (event) => {\n      event.preventDefault();\n      const message = newMessage;\n      const timestamp = new Date().getTime();\n    \n      if (!user) return;\n    \n      const chatRef = app013.database().ref(`chats/${chatId1}`);\n      \n      chatRef.once('value', (snapshot) => {\n        if (snapshot.exists()) {\n          // Chat exists, push the new message\n          chatRef.push({\n            message,\n            sender: user.uid,\n            receiver: userid,\n            timestamp,\n            username: useris,\n            textid: nanoid(),\n            email: email,\n            read: false\n          });\n        } else {\n          // Chat doesn't exist, check if chatId2 exists\n          const chatRef2 = app013.database().ref(`chats/${chatId2}`);\n          \n          chatRef2.once('value', (snapshot) => {\n            if (snapshot.exists()) {\n              // Chat exists, push the new message\n              chatRef2.push({\n                message,\n                sender: user.uid,\n                receiver: userid,\n                timestamp,\n                username: useris,\n                textid: nanoid(),\n                email: email,\n                read: false  \n              });\n            } else {\n              // Chat doesn't exist, create a new chat with chatId1\n              chatRef.push({\n                    message,\n                    sender: user.uid,\n                    receiver: userid,\n                    timestamp,\n                    email: email,\n                    textid: nanoid(),\n                    read: false\n              });\n            }\n          });\n        }\n      });\n    \n      event.target.reset();\n      setNewMessage(\"\");\n      if( newMessage === \"\"){\n      contentEditableRef.current.innerHTML = \"\"\n      }\n      event.target.innerHTML = \" \"\n\n    };\n    \n    /*\n    // Listen for incoming messages from Firebase Realtime Database\n    useEffect(() => {\n      if (!user) return;\n        \n      app013\n        .database()\n        .ref(`chats`)\n        .on('value', (snapshot) => {\n          if (!snapshot) return;\n    \n          const filteredChats = [];\n\nsnapshot.forEach((childSnapshot) => {\n  const chatValues = childSnapshot.val();\n  const chatId = childSnapshot.key;\n  const split = chatId.split(\"-\");\n  const chat = Object.values(chatValues);\n\n  const includesUser = split.includes(user.uid);\n\n  if (includesUser) {\n    for (let i = 0; i < chat.length; i++) {\n      const currentChat = chat[i];\n      if (currentChat.sender === user.uid || currentChat.receiver === user.uid) {\n        filteredChats.push(currentChat);\n      }\n    }\n  }\n});\n\n    setMessages(filteredChats);\n   \n\n    console.log(\"this is   the FilteredChats show \", filteredChats);\n\n        });\n    }, [user]);\n    */\n    \n    /*\n    const handleNewMessageSubmit = async (e) => {\n      e.preventDefault();\n      \n      if (!user) return;\n      \n      const message = {\n        sender: user.uid,\n        recipient: userid,\n        text: newMessage,\n        timestamp: new Date() ,\n      };\n      \n      const conversationsRef = app013.firestore().collection('messages');\n      const query = conversationsRef.where('sender', '==', user.uid).where('recipient', '==', userid);\n      const snapshot = await query.get();\n      \n      if (!snapshot.empty) {\n        // Update the existing conversation\n        const conversationId = snapshot.docs[0].id;\n        const conversationRef = conversationsRef.doc(conversationId);\n        await conversationRef.set({\n          sender: user.uid,\n          recipient: userid,\n          text: newMessage,\n          timestamp: new Date() ,\n        }, { merge: true });\n      } else {\n        // Create a new conversation\n        const newConversation = {\n      \n            sender: user.uid,\n            recipient: userid,\n            text: newMessage,\n            timestamp: new Date(),\n       \n        \n        };\n        await conversationsRef.add(newConversation);\n      }\n      \n      setNewMessage('');\n    };\n    */\n/*\n    if (isLoading) {\n      return <p>Loading...</p>; // render loading state while data is being fetched\n    }\n  */\n\n\n\n    const [pic,setpic] = useState(null);\n    const [named, setnamed] = useState(null);\n    \n    const [mypic, setmypic] = useState(im)\n    const [myuser, setmyuser] = useState(null)\n    const inputRef = useRef(null);\n    const fileInputRef = useRef(null);\n    \n\n    const handleImageUpload = (event) => {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onloadend = () => {\n        const base64String = reader.result;\n        setNewMessage((prev) => prev + \" \" + base64String); // append the base64-encoded image data to the existing message\n        setPreviews(base64String);\n\n        // Set the current text to the new base64-encoded image data\n        inputRef.current =  `<div class=\"card flex justify-content-center\"><Image className=\"sized\" src=\"${base64String}\" zoomSrc=\"${base64String}\" alt=\"Image\" class=\"resizedImages\" width=\"250\" preview /></div>\n`  };\n    };\n      \n      \n\n\n    \n\n    const [showPicker, setShowPicker] = useState(false);\n    const pickerRef = useRef(null);\n  \n    useEffect(() => {\n      const handleClickOutside = (event) => {\n        if (pickerRef.current && !pickerRef.current.contains(event.target)) {\n          setShowPicker(false);\n        }\n      };\n  \n      document.addEventListener(\"mousedown\", handleClickOutside);\n  \n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [pickerRef]);\n  \n    const handleButtonClick = () => {\n      setShowPicker(!showPicker);\n    };\n\n\n\n    const handleImageOrVideos = (url) => {\n      const fileExtension = url.split('.').pop().toLowerCase();\n    \n      if (fileExtension === 'jpg' || fileExtension === 'png' || fileExtension === 'jpeg' || fileExtension === 'gif'  || fileExtension === 'img') {\n        // If the URL is pointing to an image\n        return `<div class=\"card flex w-50 justify-content-center\"><Image class=\"sized\"   src=\"${url}\" zoomSrc=\"${url}\" alt=\"Image\" class=\"resizedImages\" width=\"250\"  preview /></div>`;\n      } else if (fileExtension === 'mp4') {\n        // If the URL is pointing to a video\n        return `<video src=\"${url}\" controls>Your browser does not support the video tag.</video>`;\n      } else if (fileExtension === 'mp3') {\n        // If the URL is pointing to an audio file\n        return `<audio src=\"${url}\" controls>Your browser does not support the audio tag.</audio>`;\n      } else {\n        // If the URL is not pointing to an image, video, or audio file, check if it's a YouTube link\n      //  const youtubeRegex = /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)\\/(watch\\?v=|embed\\/|v\\/)?([\\w-]{11})(\\S+)?$/; \n        const match = url.match();\n        if (match) {\n          // If the URL is a YouTube link, extract the video id\n          const videoId = match[5];\n          return `<div className=\"Fit\" style=\"position: relative; padding-bottom: 56.25%; height: 300px, width: 300px\"><iframe src=\"https://www.youtube.com/embed/${videoId}?controls=0&modestbranding=1\" title=\"YouTube video player\" style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></div>`;\n        } else {\n          // If the URL is not pointing to an image, video, or YouTube link, return the URL\n          return url;\n        }\n      }\n    };\n  \n// const words = newMessage.split(' ');\n\n\nconst generateMarkup = () => {\n\nconst words = newMessage.split(' ');\nconst elements = [];\n\nwords.forEach((word, index) => {\n  if (word.startsWith('http') || word.startsWith('https')) {\n    const element = handleImageOrVideos(word) || (\n      <a href={word} target=\"_blank\" rel=\"noopener noreferrer\">\n        {word}\n      </a>\n    );\n    elements.push( element);\n  } else if (word.startsWith(\"data:image/\")) {\n    // If the word is a base64-encoded image data URL, create an <img> tag\n    elements.push(`<div class=\"card flex justify-content-center\"><Image className=\"sized\" src=\"${word}\" zoomSrc=\"${word}\" alt=\"Image\" class=\"resizedImages\" width=\"250\" preview /></div>`);\n  }\n});\n\nreturn elements.join('');\n};\n\n\n\nconst [BlockedMe, setBlockedMe] = useState('');\n\nconst [inputVal, setInputValue] = useState(\"\");\n\n\n\nconst handlePaste = (evt) => {\nconst pasteData = evt.clipboardData.getData(\"text/plain\");\n//const youtubeRegex = /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)\\/(watch\\?v=|embed\\/|v\\/)?([\\w-]{11})(\\S+)?$/i;\nconst match = pasteData.match();\n\nif (match) {\n  evt.preventDefault(); // prevent default paste behavior\n\n  const videoId = match[5];\n  const iframe = document.createElement('iframe');\n  iframe.style.position = 'absolute';\n  iframe.style.top = 0;\n  iframe.style.left = 0;\n  iframe.style.width = '50%';\n  iframe.style.height = '50%';\n  iframe.src = ``;\n  iframe.title = 'YouTube video player';\n  iframe.allow = 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture';\n  iframe.allowFullscreen = true;\n\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(evt.clipboardData.getData('text/html'), 'text/html');\n  const pastedElement = doc.documentElement;\n\n  const range = window.getSelection().getRangeAt(0);\n  range.deleteContents();\n  range.insertNode(iframe);\n  range.insertNode(pastedElement);\n}\n};\n\nconst handleEmojiSelect = (emo) => {\nconsole.log(emo);\n//  setNewMessage((prevMessage) => prevMessage + emo.unified);\ncontentEditableRef.current.innerHTML = contentEditableRef.current.innerHTML+emo.native\n     \n      \n  \n}\n\n  return (\n    <div className='containerPad'  style={{background:\"darkgrey\", position: \"absolute\", top: \"10%\", left: \"0\", zIndex:\"3\", width: \"fit-content\" }}>\n   \n       \n    {/* <ul>\n     {messages.map((message) => (\n       <li key={message.timestamp}>{message.message}</li>\n     ))}\n     \n   </ul>\n*/} \n    \n \n\n \n\n\n   <form onSubmit={sendMessage}>\n   <div id=\"containered\" className=\"text-muted d-flex justify-content-start align-items-center pe-3 pt-3 mt-2   w-100 \" >\n                 <img\n                   src={mypic}\n                   alt=\"user\"\n                   style={{ width: \"40px\", height: \"100%\" }}\n                 />\n          \n           <div\n   className=\"input-box b-dark h-100 fom-control fom-control-lg mb-2 h-auto messonew\"\nref={contentEditableRef}\ncontentEditable={true}\nonInput={handleChange}\ndangerouslySetInnerHTML={{ __html:  generateMarkup() } }\nspellCheck={true}\nstyle={{\n height: 'fit-content',\n// minHeight: \"50px\",\n marginLeft: 'auto',\nminHeight: \"fit-content\",\n background:\"white\",\n marginRight: 'auto',\n overflow: 'scroll',\n width:  \"40vw\",\n border: \"1px solid grey\",\n padding:\"20px 10px\",\n color: \"black\",\n \n  border: \"1px solid #ccc\", padding: \"5px\"\n}}\nplaceholder={\"Text here ...\"}\nonFocus={handleFocus}\nonBlur={handleBlur} \n/>\n\n\n\n<input\ntype=\"file\"\naccept=\"image/*\"\nonChange={handleImageUpload}\n//onKeyDown = {ha}\nref={fileInputRef}\nstyle={{ display: 'none' }} // hide fas the input element initially\n/>\n\n<label className='positions' htmlFor=\"file-input\" onClick={() => fileInputRef.current.click()}>\n<FontAwesomeIcon\n style={{ fontSize:\"1.3rem\", marginLeft:\"10px\", cursor: \"pointer\",color:\"black\"}}\n icon={faImages}\n/>\n</label>\n\n<div className='smile_icon_small'>\n<Button type=\"button\" className='hideit ms-0 p-1 ml-3 text-mute'\n\nstyle={{ background:\"transparent\", border:\"none\"}} >  \n\n<FontAwesomeIcon  onClick={handleButtonClick} style={{ fontSize:\"1.3rem\",  color:\"#ffcb4d\", cursor:\"pointer\"}}  icon={faSmile} />\n</Button>\n\n{  showPicker && (    \n<div ref={pickerRef}  style={{position:\"absolute\"}}> \n\n<Picker \n  data={data}\n    onEmojiSelect={handleEmojiSelect}\n   style={{position: \"absolute\",bottom: \"100%\",right: \"0\"}} />\n\n</div>)\n}\n\n</div>\n\n\n                 <button   style={{fontSize:\"1.3rem\", cursor:\"pointer\", background:\"none\", border:\"none\", hover: \"green\"}}  className=\"hovered ms-3 text-muted\" >\n                   <FontAwesomeIcon  className='paperplaneS' icon={faPaperPlane} style={{ cursor:\"pointer\", color: \"yellowgreen\"}} type=\"submit\"  />\n                 </button>\n            </div>\n</form>\n              \n              \n              \n\n\n </div>\n  );\n};\n\nexport default Message;\n","export default __webpack_public_path__ + \"static/proxy-d399bc692ed8a689928018ed3b8a9403.jpeg\";","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["$e5534fc185f7111e$export$2e2bcd8739ae039","props","ref","instance","current","update","createElement","firebaseConfig2","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","useAuth","firebase","initializeApp","app05","app","apps","user","setUser","useState","loading","setLoading","useEffect","unsubscribe","auth","onAuthStateChanged","firebaseUser","signInWithEmailAndPassword","email","password","signOut","firebaseConfig013","measurementId","_ref","userid","useris","isLoading","setIsLoading","app013","messages","setMessages","newMessage","setNewMessage","chatId1","uid","chatId2","previews","setPreviews","contentEditableRef","useRef","isFocused","setIsFocused","content","setContent","pic","setpic","named","setnamed","mypic","setmypic","im","myuser","setmyuser","inputRef","fileInputRef","showPicker","setShowPicker","pickerRef","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","BlockedMe","setBlockedMe","inputVal","setInputValue","React","className","style","background","position","top","left","zIndex","width","onSubmit","preventDefault","message","timestamp","Date","getTime","chatRef","database","once","snapshot","exists","push","sender","receiver","username","textid","nanoid","read","chatRef2","reset","innerHTML","id","src","alt","height","contentEditable","onInput","inputValue","console","log","length","dangerouslySetInnerHTML","__html","generateMarkup","words","split","elements","forEach","word","index","startsWith","element","url","fileExtension","pop","toLowerCase","match","handleImageOrVideos","href","rel","join","spellCheck","marginLeft","minHeight","marginRight","overflow","border","padding","color","placeholder","onFocus","handleFocus","onBlur","handleBlur","type","accept","onChange","file","files","reader","FileReader","readAsDataURL","onloadend","base64String","result","prev","display","htmlFor","onClick","click","FontAwesomeIcon","fontSize","cursor","icon","faImages","Button","handleButtonClick","faSmile","Picker","data","onEmojiSelect","emo","native","bottom","right","hover","faPaperPlane","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}