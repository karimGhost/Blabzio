{"version":3,"file":"component---src-pages-news-video-recorder-js-15218bcf8058bd8528e2.js","mappings":"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","sources":["webpack://blabzio/./src/pages/news/VideoRecorder.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nconst VideoRecorder = (props) => {\n    const mimeType = \"video/webm\";\n    \nconst [recordingStatus, setRecordingStatus] = useState(\"inactive\");\nconst [videoChunks, setVideoChunks] = useState([]);\n  \nconst facingMode = props.facingMode;\nconst setFacingMode = props.setFacingMode;\n\nconst stream = props.stream;\nconst  setStream  = props.setStream;\nconst liveVideoFeed = props.liveVideoFeed;\nconst permission  = props.permission;\nconst  setPermission = props.setPermission;\nconst recordedVideo = props.recordedVideo ;\nconst setRecordedVideo = props.setRecordedVideo;\n\nconst mediaRecorder =  props.mediaRecorder ;\n\n\n\n\n\n\n\n\n\n  \n\n\n    useEffect(() => {\n        if (permission && liveVideoFeed.current && stream) {\n            liveVideoFeed.current.srcObject = stream;\n        }\n    }, [permission, stream]);\n    \nconst switchCamera = async () => {\n    if (stream) {\n      stream.getTracks().forEach((track) => track.stop());\n    }\n\n    const newFacingMode = facingMode === \"user\" ? \"environment\" : \"user\";\n    setFacingMode(newFacingMode);\n\n    await getCameraPermission();\n  };\n\nconst startRecording = async () => {\n    setRecordingStatus(\"recording\");\n    const media = new MediaRecorder(stream, { mimeType });\n    mediaRecorder.current = media;\n    mediaRecorder.current.start();\n    let localVideoChunks = [];\n    mediaRecorder.current.ondataavailable = (event) => {\n        if (typeof event.data === \"undefined\") return;\n        if (event.data.size === 0) return;\n        localVideoChunks.push(event.data);\n    };\n    setVideoChunks(localVideoChunks);\n};\n\nconst stopRecording = () => {\n    setPermission(false);\n    setRecordingStatus(\"inactive\");\n    mediaRecorder.current.stop();\n    mediaRecorder.current.onstop = () => {\n        const videoBlob = new Blob(videoChunks, { type: mimeType });\n        const videoUrl = URL.createObjectURL(videoBlob);\n        setRecordedVideo(videoUrl);\n        setVideoChunks([]);\n    };\n};\n    \n    return (\n        <div>\n   \n    <main>\n        <div className=\"video-controls\">\n            { /*!permission ? (\n            <button onClick={getCameraPermission} type=\"button\">\n               open camera\n            </button>\n            ) : null */}\n            \n        </div>\n\n                {permission && liveVideoFeed ? (\n    <div style={{position:'relative' }}  className=\"video-player\">\n        {  recordingStatus === 'recording' &&  <span style={{color:'red'}} > <ul><li style={{color:'red', position:'absolute',zIndex:'20'}} className='recordmode'>{recordingStatus}</li></ul></span>}\n\n    \n    \n    <video  className='live-player w-100 m-50' ref={liveVideoFeed} autoPlay playsInline>\n    \n    \n    </video>\n    {permission && recordingStatus === \"inactive\" ? (\n           <button style={{ zIndex: '20', position: 'absolute', bottom: '40px', left: '50%', transform: 'translateX(-50%)', background: 'transparent', border: '2px solid green', borderRadius: '50%', width: '3rem', height: '3rem' }} onClick={startRecording} type=\"button\">\n           <i style={{ display: 'block', width: '5rem', height: '5rem', padding: '4px', background: 'green', borderRadius: '50%', margin: '1px auto' }}>s</i>\n       </button>\n            ) : null}\n            {recordingStatus === \"recording\" ? (\n           <button style={{ zIndex: '20', position: 'absolute', bottom: '40px', left: '50%', transform: 'translateX(-50%)', background: 'transparent', border: '2px solid red', borderRadius: '50%', width: '3rem', height: '3rem' }} onClick={stopRecording} type=\"button\">\n           <i style={{ display: 'block', width: '5rem', height: '5rem', padding: '4px', background: 'green', borderRadius: '50%', margin: '1px auto' }}>p</i>\n       </button>\n       \n            ) : null}\n{ recordingStatus === \"inactive\"  && <button style={{position:'absolute',zIndex:'20', top:'0', right:'0'}} type='button' onClick={switchCamera}> switchcam </button> }\n    </div>\n) : null}\n                    \n                { !permission && recordedVideo ? (\n        <div className=\"video-player\">\n            <video className='recorded-player' src={recordedVideo} controls autoPlay></video>\n            <a download href={recordedVideo}>\n                Download Recording\n            </a>\n        </div>\n        ) : null}\n    </main>\n</div>\n\n    );\n};\nexport default VideoRecorder;\n"],"names":["props","mimeType","recordingStatus","setRecordingStatus","useState","videoChunks","setVideoChunks","facingMode","setFacingMode","stream","liveVideoFeed","setStream","permission","setPermission","recordedVideo","setRecordedVideo","mediaRecorder","useEffect","current","srcObject","React","className","style","position","color","zIndex","ref","autoPlay","playsInline","bottom","left","transform","background","border","borderRadius","width","height","onClick","async","media","MediaRecorder","start","localVideoChunks","ondataavailable","event","data","size","push","type","display","padding","margin","stopRecording","stop","onstop","videoBlob","Blob","videoUrl","URL","createObjectURL","top","right","getTracks","forEach","track","getCameraPermission","src","controls","download","href"],"sourceRoot":""}