{"version":3,"file":"component---src-pages-pagination-js-6b97166f179a93a0aaec.js","mappings":"6IAkCA,UA9BmBA,IAAoD,IAAnD,WAAEC,EAAU,YAAEC,EAAW,iBAAEC,GAAkBH,EAE/D,MAAMI,EAAcC,MAAMC,KAAKD,MAAMJ,GAAYM,QAAQC,KAAIC,GAAKA,EAAI,IAEtE,OAEEC,EAAAA,cAAA,OAAKC,UAAU,cACZT,EAAc,EACbQ,EAAAA,cAAA,UAAQE,GAAG,MAAOD,UAAU,OAAOE,QAASA,IAAMV,EAAiBD,EAAc,IAAIQ,EAAAA,cAAAA,EAAAA,SAAA,KAAE,YAAW,KAChG,KAEHN,EAAYI,KAAIM,GAEfA,GAAUb,IAERa,IAAWZ,GAAeY,IAAWZ,EAAc,GAAKY,IAAWZ,EAAc,GAAKY,IAAWb,GAC/FS,EAAAA,cAAA,UAASK,MAAO,CAACC,MAAO,SAAWL,UAAWG,IAAaZ,EAAc,WAAa,QAAUe,IAAKH,EAAQD,QAASA,IAAMV,EAAiBW,IAC/H,IAAXA,EAAgBJ,EAAAA,cAAAA,EAAAA,SAAA,KAAE,KAAkB,IAAXI,EAAgBJ,EAAAA,cAAAA,EAAAA,SAAA,KAAE,KAAkB,IAAXI,EAAgBJ,EAAAA,cAAAA,EAAAA,SAAA,KAAE,KAAkB,IAAXI,EAAgBJ,EAAAA,cAAAA,EAAAA,SAAA,KAAE,KACnF,IAAXI,EAAgBJ,EAAAA,cAAAA,EAAAA,SAAA,KAAE,KAAkB,IAAXI,EAAgBJ,EAAAA,cAAAA,EAAAA,SAAA,KAAE,KAAkB,IAAXI,EAAgBJ,EAAAA,cAAAA,EAAAA,SAAA,KAAE,KAAkB,IAAXI,EAAgBJ,EAAAA,cAAAA,EAAAA,SAAA,KAAE,KAAkB,IAAXI,EAAgBJ,EAAAA,cAAAA,EAAAA,SAAA,KAAE,KAAmB,KAAXI,EAAiBJ,EAAAA,cAAAA,EAAAA,SAAA,KAAE,MAAQI,GAG3J,OAELZ,EAAcD,EACbS,EAAAA,cAAA,UAAQE,GAAG,MAAMD,UAAU,OAAQE,QAASA,IAAMV,EAAiBD,EAAc,IAAIQ,EAAAA,cAAAA,EAAAA,SAAA,KAAE,QAAO,KAC5F,KACA,C","sources":["webpack://blabzio/./src/pages/Pagination.js"],"sourcesContent":["import * as React from \"react\"\nimport { uselation , } from 'react-i18next';\nimport Language from \"./Language\";\n//import i18n from \"../components/i18n\";\nconst Pagination = ({ totalPages, currentPage, handlePageChange }) => {\n  // Generate an array of page numbers\n  const pageNumbers = Array.from(Array(totalPages).keys()).map(i => i + 1);\n  \n  return (        \n\n    <div className=\"pagination\">\n      {currentPage > 1 ? (\n        <button id=\"btp\"  className=\"btn1\" onClick={() => handlePageChange(currentPage - 1)}><>Previous</> </button>\n      ) : null}\n\n      {pageNumbers.map(number => (\n        // Only render a button if there are items to display on that page\n        number <= totalPages ? (\n          // Only render the current page button and the buttons for the two pages before and after the current page\n          number === currentPage || number === currentPage - 1 || number === currentPage + 1 || number === totalPages ? (\n            <button  style={{color: 'black'}}  className={number   === currentPage ? \"current \" : \"btnum\"}  key={number} onClick={() => handlePageChange(number)}>\n              {number === 1 ?  <>1</> : number === 2 ?  <>2</> : number === 3 ?  <>3</> : number === 4 ?  <>4</> :\n              number === 5 ?  <>5</> : number === 6 ?  <>6</> : number === 7 ?  <>7</> : number === 8 ?  <>8</> : number === 9 ?  <>9</>  : number === 10 ?  <>10</> : number}\n            </button>\n          ) : null\n        ) : null\n      ))}\n      {currentPage < totalPages ? (\n        <button id=\"btp\" className=\"btn2\"  onClick={() => handlePageChange(currentPage + 1)}><>Next</> </button>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Pagination;\n"],"names":["_ref","totalPages","currentPage","handlePageChange","pageNumbers","Array","from","keys","map","i","React","className","id","onClick","number","style","color","key"],"sourceRoot":""}