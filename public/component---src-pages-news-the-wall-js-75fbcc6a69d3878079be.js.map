{"version":3,"file":"component---src-pages-news-the-wall-js-75fbcc6a69d3878079be.js","mappings":"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","sources":["webpack://blabzio/./src/pages/news/TheWall.js","webpack://blabzio/./node_modules/firebase/app/dist/esm/index.esm.js","webpack://blabzio/./node_modules/nanoid/index.browser.js"],"sourcesContent":["import React from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/database'; \nimport { nanoid } from 'nanoid';\n\n// Initialize Firebase\nconst firebaseConfig121212 = {\n  apiKey: \"AIzaSyChFGTB5YEugUKho-YqcWVZtKJG3PIrtt0\",\n\n  authDomain: \"thewall-10a4a.firebaseapp.com\",\n\n  databaseURL: \"https://thewall-10a4a-default-rtdb.firebaseio.com\",\n\n  projectId: \"thewall-10a4a\",\n\n  storageBucket: \"thewall-10a4a.appspot.com\",\n\n  messagingSenderId: \"221023885061\",\n\n  appId: \"1:221023885061:web:bc550d03edd2fbf60e496c\",\n\n  measurementId: \"G-7V80059NF7\"\n\n};\n\nfirebase.initializeApp(firebaseConfig121212);\nconst database = firebase.database(); \n\nclass VideoUploader extends React.Component {\n  state = {\n    videoFile: null,\n    isRecording: false,\n    recordedVideo: null,\n    videos: [],\n  };\n\n  componentDidMount() {\n    this.loadVideos();\n  }\n\n  loadVideos = () => {\n    const videosRef = database.ref('videos');\n    videosRef.on('value', (snapshot) => {\n      const videos = [];\n      snapshot.forEach((childSnapshot) => {\n        const video = {\n          id: childSnapshot.key,\n          ...childSnapshot.val(),\n        };\n        videos.push(video);\n      });\n      this.setState({ videos });\n    });\n  };\n\n  handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file && file.size < 5000000) { // Maximum allowed file size is 5MB\n      this.setState({ videoFile: file });\n    } else {\n      alert('Please select a short video file (less than 5MB).');\n    }\n  };\n  handleRecordClick = () => {\n    if (!this.state.isRecording) {\n      navigator.mediaDevices.getUserMedia({ video: true })\n        .then((stream) => {\n          const mediaRecorder = new MediaRecorder(stream);\n          const chunks = [];\n  \n          mediaRecorder.addEventListener('dataavailable', (event) => {\n            chunks.push(event.data);\n          });\n  \n          mediaRecorder.addEventListener('stop', () => {\n            const recordedBlob = new Blob(chunks, { type: 'video/webm' });\n            this.setState({ recordedVideo: recordedBlob });\n          });\n  \n          mediaRecorder.start();\n          this.setState({ isRecording: true, mediaRecorder, recordedChunks: chunks });\n        })\n        .catch((error) => {\n          console.error('Error accessing video stream:', error);\n        });\n    } else {\n      this.state.mediaRecorder.stop();\n      this.setState({ isRecording: false });\n    }\n  };\n  \n  handleUploadClick = () => {\n    const { videoFile, recordedVideo } = this.state;\n  \n    if (videoFile || recordedVideo) {\n      const storageRef = firebase.storage().ref();\n      const videoRef = storageRef.child(videoFile ? videoFile.name : 'recorded_video.webm');\n      const uploadTask = videoRef.put(videoFile || recordedVideo);\n  \n      uploadTask.on(\n        'state_changed',\n        (snapshot) => {\n          // Handle progress updates\n          const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log(`Upload progress: ${progress}%`);\n          // Update progress in UI \n        },\n        (error) => {\n          // Handle upload error\n          console.error('Upload error:', error);\n          // Display error message or perform error handling in UI\n        },\n        () => {\n          // Upload complete\n          uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n            // Save the video details in the database\n            const videoId = nanoid(); // Generate a unique ID for the video\n            database.ref('videos/' + videoId).set({\n              url: downloadURL,\n              likes: 0,\n              dislikes: 0,\n              comments: [],\n            });\n          });\n        }\n      );\n    }\n  };\n  \n  handleLike = (videoId) => {\n    database.ref('videos/' + videoId).transaction((video) => {\n      if (video) {\n        video.likes = (video.likes || 0) + 1;\n      }\n      return video;\n    });\n  };\n\n  handleDislike = (videoId) => {\n    database.ref('videos/' + videoId).transaction((video) => {\n      if (video) {\n        video.dislikes = (video.dislikes || 0) + 1;\n      }\n      return video;\n    });\n  };\n\n  handleComment = (videoId, comment) => {\n    const newComment = {\n      id: nanoid(),\n      text: comment,\n    };\n\n    database.ref('videos/' + videoId + '/comments').push(newComment);\n  };\n\n  handleDelete = (videoId) => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this video?');\n    if (confirmDelete) {\n      database.ref('videos/' + videoId).remove();\n    }\n  };\n\n  render() {\n    const { videos } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h1>Video Uploader</h1>\n        <div className=\"form-group\">\n          <input type=\"file\" accept=\"video/*\" onChange={this.handleFileChange} />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-primary\" onClick={this.handleRecordClick}>\n            {this.state.isRecording ? 'Stop Recording' : 'Start Recording'}\n          </button>\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn btn-success\" onClick={this.handleUploadClick}>\n            Upload\n          </button>\n        </div>\n        <hr />\n        {videos.map((video) => (\n          <div key={video.id} className=\"card mb-3\">\n            <div className=\"card-body\">\n              <video\n                src={video.url}\n                controls\n                style={{ width: '100%', cursor: 'pointer' }}\n                onMouseEnter={(e) => e.target.play()}\n                onMouseLeave={(e) => e.target.pause()}\n              />\n              <div className=\"text-muted mt-2\">\n                Likes: {video.likes || 0} | Dislikes: {video.dislikes || 0}\n              </div>\n              <div className=\"my-3\">\n                <button className=\"btn btn-sm btn-primary mr-2\" onClick={() => this.handleLike(video.id)}>\n                  Like\n                </button>\n                <button className=\"btn btn-sm btn-danger\" onClick={() => this.handleDislike(video.id)}>\n                  Dislike\n                </button>\n              </div>\n              <div>\n                <h5>Comments:</h5>\n                <ul className=\"list-unstyled\">\n                  {Object.values(video.comments || []).map((comment) => (\n                    <li key={comment.id}>{comment.text}</li>\n                  ))}\n                </ul>\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Add a comment...\"\n                    aria-label=\"Add a comment\"\n                    aria-describedby=\"button-addon2\"\n                    onChange={(e) => this.setState({ commentInput: e.target.value })}\n                  />\n                  <div className=\"input-group-append\">\n                    <button\n                      className=\"btn btn-outline-secondary\"\n                      type=\"button\"\n                      id=\"button-addon2\"\n                      onClick={() => this.handleComment(video.id, this.state.commentInput)}\n                    >\n                      Post\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <button className=\"btn btn-danger btn-sm\" onClick={() => this.handleDelete(video.id)}>\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default VideoUploader;\n","import { registerVersion } from '@firebase/app';\nexport * from '@firebase/app';\n\nvar name = \"firebase\";\nvar version = \"9.22.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","VideoUploader","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","videoFile","isRecording","recordedVideo","videos","loadVideos","ref","on","snapshot","forEach","childSnapshot","video","id","key","val","push","setState","handleFileChange","e","file","target","files","size","alert","handleRecordClick","mediaRecorder","stop","navigator","mediaDevices","getUserMedia","then","stream","MediaRecorder","chunks","addEventListener","event","data","recordedBlob","Blob","type","start","recordedChunks","catch","error","console","handleUploadClick","uploadTask","storage","child","name","put","progress","bytesTransferred","totalBytes","log","getDownloadURL","downloadURL","videoId","nanoid","set","url","likes","dislikes","comments","handleLike","transaction","handleDislike","handleComment","comment","newComment","text","handleDelete","window","confirm","remove","_inheritsLoose","_proto","prototype","componentDidMount","this","render","React","className","accept","onChange","onClick","map","src","controls","style","width","cursor","onMouseEnter","play","onMouseLeave","pause","Object","values","placeholder","commentInput","value","registerVersion","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}