{"version":3,"file":"component---src-pages-weather-component-js-7804d46325fc67e7eaa0.js","mappings":"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","sources":["webpack://blabzio/./src/pages/WeatherComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst WeatherComponent = (props) => {\n  const [location, setLocation] = useState({ latitude: null, longitude: null ,country:null,city:null});\n  const [temperature, setTemperature] = useState(null);\n  const [date, setDate] = useState(null);\n  const [weatherCondition, setWeatherCondition] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const { latitude, longitude } = location;\n        if (latitude && longitude) {\n          const response = await fetch(\n            `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m,weathercode&current_weather=true`\n          );\n          if (response.ok) {\n            const data = await response.json();\n            const hourlyData = data.hourly;\n            setTemperature(hourlyData.temperature_2m[0]);\n            setWeatherCondition(hourlyData.weathercode[0]);\n            \n            setDate(hourlyData.time[0]);\n         console.log(data)\n         console.log(\"this is the data\", hourlyData.weathercode[0] )\n          } else {\n            console.error('Failed to fetch weather data');\n          }\n        }\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchWeatherData();\n  }, [location]);\n\n  useEffect(() => {\n    fetch('https://ipapi.co/json/')\n      .then(response => response.json())\n      .then(data => {\n\n        console.log(\"this is your cords\", data)\n        setLocation({\n          latitude: data.latitude,\n          longitude: data.longitude,\n          country:data.country,\n          city: data.city.slice(0,2)\n        });\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  }, []);\n  const light = props.light;\n  \n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const formattedDate = date ? new Date(date).toLocaleDateString() : '';\n  const weatherIcon = getWeatherIcon(weatherCondition);\n\n  \n  return (\n    <div className='weather' style={{ display: 'flex', color: 'red' }}>\n     \n      {temperature && date && weatherIcon ? (\n        \n\n        <ul style={{display:\"flex\", listStyle:\"none\"}} className='bodweather pl-1 '>\n         <p  style={{marginTop:\"-5px\",fontFamily:\"fantasy\", color:\"orange\"}}   className={`pforcast pweather mb-0 color-dark ${light ?   \"color-light\" : \"#141515\" }`}>\n         Forecast\n         </p>\n         <li className='pr-2 pl-3 pweather'>{formattedDate}/  </li> <li className=' pweather pr-2'>{temperature}°C  </li>  <li className='pr-3 pweather' >{weatherIcon} </li>  <li className='pr-1 pweather'> <span className='locat'>Location:</span> <span className='locat'>{location.country},</span> <span className='locat'>{location.city}</span> </li>  \n        </ul>\n      ) : (\n       \n      \n        <p className=\"text-danger pweather\">24°C</p>\n      )}\n    </div>\n  );\n};\n\n// Helper function to get the weather icon based on the weather code\nconst getWeatherIcon = (weatherCode) => {\n  const weatherIcons = {\n\n      0: '⛈️',\n      1: '⛈️',\n      2: '⛈️',\n      3: '⛈️',\n      4: '⛈️',\n      5: '⛈️',\n      6: '⛈️',\n      7: '⛈️',\n      8: '⛈️',\n      9: '❄️',\n      10: '❄️',\n      11: '❄️',\n      12: '⛈️',\n      13: '⛈️',\n      14: '⛈️',\n      15: '🌬️',\n      16: '🌬️',\n      17: '🌬️',\n      18: '🌬️',\n      19: '🌬️',\n      20:  '☁️',\n      21:  '☁️',\n      22: '⛈️',\n      23: '⛈️',\n      24: '⛈️',\n      25: '⛈️',\n      26: '⛈️',\n      27: '⛈️',\n      28: '⛈️',\n      29: '⛈️',\n      30: '⛈️',\n      31: '⛈️',\n      32: '⛈️',\n      33: '⛈️',\n      34: '⛈️',\n      35: '❄️',\n      36: '❄️',\n      37: '❄️',\n      38: '❄️',\n      39: '❄️',\n      40: '⛈️',\n      41: '⛈️',\n      42: '⛈️',\n      43: '⛈️',\n      44: '⛈️',\n      45: '⛈️',\n      46: '⛈️',\n      47: '⛈️',\n      48: '⛈️',\n      49: '⛈️',\n      50: '⛈️',\n      51: '⛈️',\n      52: '⛈️',\n      53: '⛈️',\n      54: '⛈️',\n      55: '⛈️',\n      56: '⛈️',\n      57: '⛈️',\n      58: '⛈️',\n      59: '⛈️',\n      60: '❄️',\n      61: '☁️',\n      62: '❄️',\n      63: '❄️',\n      64: '⛈️',\n      65: '⛈️',\n      66: '⛈️',\n      67: '⛈️',\n      68: '⛈️',\n      69: '⛈️',\n      70: '⛈️',\n      71: '⛈️',\n      72: '⛈️',\n      73: '⛈️',\n      74: '⛈️',\n      75: '⛈️',\n      76: '⛈️',\n      77: '⛈️',\n      78: '⛈️',\n      79: '⛈️',\n      80: '⛈️',\n      81: '⛈️',\n      82: '⛈️',\n      83: '⛈️',\n      84: '⛈️',\n      85: '⛈️',\n      86: '🌬️',\n      87: '⛈️',\n      88: '⛈️',\n      89: '⛈️',\n      90: '⛈️',\n      91: '⛈️',\n      92: '⛈️',\n      93: '⛈️',\n      94: '⛈️',\n      95: '⛈️',\n      96: '⛈️',\n      97: '⛈️',\n      98: '⛈️',\n      99: '⛈️',\n      100: '⛈️',\n      101: '⛈️',\n      102: '⛈️',\n      103: '❄️',\n      104: '❄️',\n      105: '❄️',\n      106: '⛈️',\n      107: '⛈️',\n      108: '⛈️',\n      109: '🌬️',\n      110: '🌬️',\n      111: '🌬️',\n      112: '⛈️',\n      113: '⛈️',\n      114: '⛈️',\n      115: '⛈️',\n      116: '⛈️',\n      117: '⛈️',\n      118: '⛈️',\n      119: '⛈️',\n      120: '⛈️',\n      121: '🌬️',\n      122: '🌬️',\n      123: '🌬️',\n      124: '🌬️',\n      125: '🌬️',\n      126: '🌬️',\n      127: '⛈️',\n      128: '⛈️',\n      129: '⛈️',\n      130: '⛈️',\n      131: '⛈️',\n      132: '⛈️',\n      133: '⛈️',\n      134: '⛈️',\n      135: '⛈️',\n      136: '⛈️',\n      137: '⛈️',\n      138: '⛈️',\n      139: '⛈️',\n      140: '⛈️',\n      141: '⛈️',\n      142: '⛈️',\n      143: '⛈️',\n      144: '⛈️',\n      145: '⛈️',\n      146: '❄️',\n      147: '❄️',\n      148: '❄️',\n      149: '⛈️',\n      150: '⛈️',\n      151: '⛈️',\n      152: '⛈️',\n      153: '⛈️',\n      154: '⛈️',\n      155: '❄️',\n      156: '❄️',\n      157: '❄️',\n      158: '❄️',\n      159: '❄️',\n      160: '❄️',\n      161: '⛈️',\n      162: '⛈️',\n      163: '⛈️',\n      164: '⛈️',\n      165: '⛈️',\n      166: '⛈️',\n      167: '⛈️',\n      168: '⛈️',\n      169: '⛈️',\n      170: '⛈️',\n      171: '⛈️',\n      172: '⛈️',\n      173: '⛈️',\n      174: '⛈️',\n      175: '⛈️',\n      176: '⛈️',\n      177: '⛈️',\n      178: '⛈️',\n      179: '⛈️',\n      180: '⛈️',\n      181: '⛈️',\n      182: '⛈️',\n      183: '⛈️',\n      184: '⛈️',\n      185: '⛈️',\n      186: '⛈️',\n      187: '⛈️',\n      188: '⛈️',\n      189: '⛈️',\n      190: '⛈️',\n      191: '⛈️',\n      192: '⛈️',\n      193: '⛈️',\n      194: '⛈️',\n      195: '⛈️',\n      196:  '⛈️',\n       197: '⛈️',\n     198: '⛈️',\n      199:  '⛈️', \n\n \n  };\n\n  return weatherIcons[weatherCode] || '';\n};\n\nexport default WeatherComponent;\n"],"names":["getWeatherIcon","weatherCode","props","location","setLocation","useState","latitude","longitude","country","city","temperature","setTemperature","date","setDate","weatherCondition","setWeatherCondition","loading","setLoading","useEffect","async","response","fetch","ok","data","json","hourlyData","hourly","temperature_2m","weathercode","time","console","log","error","fetchWeatherData","then","slice","catch","light","React","formattedDate","Date","toLocaleDateString","weatherIcon","className","style","display","color","listStyle","marginTop","fontFamily"],"sourceRoot":""}