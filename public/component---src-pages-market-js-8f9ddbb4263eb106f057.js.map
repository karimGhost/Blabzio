{"version":3,"file":"component---src-pages-market-js-8f9ddbb4263eb106f057.js","mappings":"gMASe,SAAS,IAEtB,MAAM,EAACA,EAAO,EAACC,IAAYC,EAAAA,EAAAA,UAAS,CAElCC,KAAM,KACNC,MAAO,WAID,EAACC,EAAQ,EAACC,IAAaJ,EAAAA,EAAAA,UAAS,CAEpCC,KAAM,KACNC,MAAO,SAGH,EAACG,EAAM,EAACC,IAAYN,EAAAA,EAAAA,UAAS,OAKnCO,EAAAA,EAAAA,YAAU,MAERC,iBAEE,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAPpB,yGASXZ,GAAWa,IAAS,IACfA,EACHX,KAAMQ,EAASR,QAGnB,CAAE,MAAOI,GACfC,EAASD,EAEH,CACF,CACJQ,EAAW,GAEJ,KAIHN,EAAAA,EAAAA,YAAU,MAERC,iBAEE,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IA/BnB,wGAgCpBG,QAAQC,IAAI,OAAON,GACXL,GAAYQ,IAAS,IAChBA,EACHX,KAAMQ,EAASR,QAGnB,CAAE,MAAOI,GAEPS,QAAQC,IAAIV,GACZD,EAAW,iBACb,CACF,CACJS,EAAW,GAEJ,IAGP,MAAM,EAACG,EAAO,EAACC,IAAajB,EAAAA,EAAAA,YAQtBkB,EAAMpB,EAAOG,KAAOH,EAAOG,KAAKkB,KAAMC,IAAG,IAAWA,EAAKlB,MAAO,YAAgB,KAEhFmB,EAAOlB,EAAQF,KAAOE,EAAQF,KAAKkB,KAAMG,IAAI,IAAWA,EAAMpB,MAAO,UAAc,KAOnFqB,EAAKzB,EAAOG,KAAOiB,EAAIM,OAAOH,GAAQ,KAmB5C,IAAII,EAAMtB,EAAQF,KAdGyB,KAEnB,MAAMC,EAAc7B,EAAOG,MAAQE,EAAQF,KAAOyB,EAAIE,QAAU,KAGhE,IAAK,IAAIC,EAAK/B,EAAOG,MAAQE,EAAQF,KAAO0B,EAAYG,OAAS,EAAI,KAAOD,EAAI,EAAGA,IAAK,CACtF,MAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,KACzCF,EAAYE,GAAIF,EAAYI,IAAM,CAACJ,EAAYI,GAAIJ,EAAYE,GAClE,CAGA,OAAOF,CAAW,EAGMQ,CAAaZ,GAAM,KA4B7C,OA3BAT,QAAQC,IAAIU,IACZlB,EAAAA,EAAAA,YAAU,KAGV6B,OAAOC,aAEH,WAEC,IAAIC,EAASC,IAAE,SAASC,KAAK,aAEzBC,EAAQH,EAAMG,QAElBH,EAAMI,QAAQ,CAACC,YAAaF,GAAQ,KAAM,WAE7BF,IAAE,SAASC,KAAK,YAEtBI,MAAMN,GAEXA,EAAMO,IAAI,CAACF,WAAY,GACzB,GAED,GAjByB,IAiBzB,GAID,CAACpB,IAEAlB,EACKyC,EAAAA,cAAA,OAAKC,MAAO,CAAC7C,MAAO,UAAU,0CAGlCJ,EAAOG,MAIRE,EAAQF,KAOR6C,EAAAA,cAAA,OAAKE,GAAG,QACLF,EAAAA,cAAA,OAAKG,UAAU,mBACbxB,EAAIN,KAAI+B,GAAOJ,EAAAA,cAAA,KAAGC,MAAO,CAAC7C,MAAO,SAAUiD,IAAKD,EAAGE,MAAQF,EAAGE,KAAK,IAAEF,EAAGG,kBAAkBC,UAAU,IAACR,EAAAA,cAAA,KAAGC,MAAO,CAAC7C,MAAoB,UAAbgD,EAAGhD,MAAoB,mBAAsB,qBAAmC,UAAbgD,EAAGhD,MAAoB,IAAM,GAAIgD,EAAGK,OAAO,KAAK,SAZ1OT,EAAAA,cAAA,WAAK,aAkBd,C","sources":["webpack://blabzio/./src/pages/Market.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\n\nimport $ from \"jquery\"\n\nimport axios from 'axios';\n\n\n\nexport default function  () {\n  \n  const [market, setmarket] =useState({\n\n    data: null,\n    color: 'green'\n  });\n\n\n    const [market2, setmarket2] =useState({\n\n      data: null, \n      color: 'red'\n    });\n\n    const [error, setError] = useState(null);\n\n  const fetchUrl2 = 'https://financialmodelingprep.com/api/v3/stock_market/losers?apikey=f8ff84c0ba20f4e45161f78360babf5c' ;\n  const fetchUrl = 'https://financialmodelingprep.com/api/v3/stock_market/gainers?apikey=f8ff84c0ba20f4e45161f78360babf5c' ;\n\n    useEffect(() => {\n      \n      async function fetchData() {\n       \n        try {\n          const response = await axios.get(fetchUrl);  \n\n        setmarket((prevState) => ({\n          ...prevState,\n          data: response.data\n        }));\n      \n      } catch (error) {\nsetError(error)\n      \n      }\n    }\nfetchData()\n\n    }, []);\n  \n\n\n    useEffect(() => {\n      \n      async function fetchData() {\n       \n        try {\n          const response = await axios.get(fetchUrl2);  \nconsole.log(`bad ${response}`)\n        setmarket2((prevState) => ({\n          ...prevState,\n          data: response.data\n        }));\n      \n      } catch (error) {\n\n        console.log(error);\n        setmarket2('getting market')\n      }\n    }\nfetchData()\n\n    }, []);\n  \n  \nconst [shufle, setshufle] = useState();\n\n\n\n\n  \n  \n  \nconst dat = market.data ? market.data.map(((obj) => ({ ...obj, color: 'green'  }))) : null;\n\nconst dat2 = market2.data ? market2.data.map(((obj1) => ({ ...obj1, color: 'red'  }))) : null;\n\n \n\n\n\n\nconst va = market.data ? dat.concat(dat2) : null\n\n\n//shuffling  using fisheryets method\n\nconst shuffleArray = arr => {\n\n  const shuffledArr = market.data && market2.data ? arr.slice() : null;\n\n\n  for( let i =  market.data && market2.data ? shuffledArr.length - 1 : null ; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffledArr[i], shuffledArr[j]] = [shuffledArr[j], shuffledArr[i]];\n  }\n \n \n  return shuffledArr;\n};\n\nlet vaa = market2.data ?  shuffleArray(va) : null;\nconsole.log(vaa)\nuseEffect(() => {\n \n\nwindow.setInterval(rollback, 100);\n    \n    function rollback(){\n      \n     let first =  $(\"#card\").find(\"div:first\");\n      \n     let width = first.width();\n      \n     first.animate({marginLeft: -width}, 9000, function(){\n       \n       let last = $(\"#card\").find(\"div:last\");\n       \n       last.after(first);\n       \n       first.css({marginLeft: 0})\n     })\n      \n    }\n    \n\n\n}, [va])\n\nif (error) {\n  return <div style={{color: \"black\"}}>An error occurred:getting market Data </div>;\n}\n\nif (!market.data) {\n  return <div>Loading...</div>;\n}\n\nif(!market2.data){\n  return <div>Loading...</div>;\n}\n\n  return (\n\n\n    <div id=\"card\">   \n       <div className='marketContainer' >\n       { vaa.map(da =>  <p style={{color: \"white\"}} key={da.name} >{da.name} {da.changesPercentage.toFixed()} <b style={{color: da.color === 'green' ? 'rgb(46, 197, 16)'  : 'rgb(252, 60, 60)'}}>{da.color === 'green' ? \"+\" : \"\"}{da.change}%</b> </p>  )} \n    </div>\n\n\n    </div>\n  )\n}\n"],"names":["market","setmarket","useState","data","color","market2","setmarket2","error","setError","useEffect","async","response","axios","get","prevState","fetchData","console","log","shufle","setshufle","dat","map","obj","dat2","obj1","va","concat","vaa","arr","shuffledArr","slice","i","length","j","Math","floor","random","shuffleArray","window","setInterval","first","$","find","width","animate","marginLeft","after","css","React","style","id","className","da","key","name","changesPercentage","toFixed","change"],"sourceRoot":""}