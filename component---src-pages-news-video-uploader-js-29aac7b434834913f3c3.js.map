{"version":3,"file":"component---src-pages-news-video-uploader-js-29aac7b434834913f3c3.js","mappings":"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","sources":["webpack://blabzio/./node_modules/broker-factory/build/es2019/guards/message-port.js","webpack://blabzio/./node_modules/broker-factory/build/es2019/helpers/port-map.js","webpack://blabzio/./node_modules/broker-factory/build/es2019/module.js","webpack://blabzio/./node_modules/broker-factory/build/es2019/helpers/extend-broker-implementation.js","webpack://blabzio/./node_modules/dashify/index.js","webpack://blabzio/./node_modules/extendable-media-recorder-wav-encoder-broker/build/es2019/module.js","webpack://blabzio/./node_modules/extendable-media-recorder-wav-encoder/build/es2019/module.js","webpack://blabzio/./node_modules/extendable-media-recorder-wav-encoder/build/es2019/worker/worker.js","webpack://blabzio/./node_modules/media-encoder-host-broker/build/es2019/module.js","webpack://blabzio/./node_modules/media-encoder-host/build/es2019/module.js","webpack://blabzio/./node_modules/media-encoder-host/build/es2019/worker/worker.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/blob-event-factory.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/invalid-modification-error.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/not-supported-error.js","webpack://blabzio/./node_modules/rxjs-interop/dist/esm/symbols.js","webpack://blabzio/./node_modules/rxjs-interop/dist/esm/to-observer.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/factories/animation-frame.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/functions/emit-not-supported-error.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/module.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/factories/window.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/factories/wrap-subscribe-function.js","webpack://blabzio/./node_modules/rxjs-interop/dist/esm/patch.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/factories/mutations.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/factories/map-subscribable-thing.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/factories/prepend-subscribable-thing.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/factories/attribute.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/factories/geolocation.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/factories/intersections.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/factories/media-devices.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/factories/media-query-match.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/factories/metrics.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/factories/midi-inputs.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/factories/midi-outputs.js","webpack://blabzio/./node_modules/subscribable-things/build/es2019/factories/on.js","webpack://blabzio/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/helpers/error-renderers.js","webpack://blabzio/./node_modules/recorder-audio-worklet/build/es2019/module.js","webpack://blabzio/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/helpers/extend-worker-implementation.js","webpack://blabzio/./node_modules/recorder-audio-worklet/build/es2019/factories/add-recorder-audio-worklet-module.js","webpack://blabzio/./node_modules/recorder-audio-worklet/build/es2019/worklet/worklet.js","webpack://blabzio/./node_modules/recorder-audio-worklet/build/es2019/factories/recorder-audio-worklet-node-factory.js","webpack://blabzio/./node_modules/recorder-audio-worklet/build/es2019/factories/listener.js","webpack://blabzio/./node_modules/recorder-audio-worklet/build/es2019/factories/post-message-factory.js","webpack://blabzio/./node_modules/recorder-audio-worklet/build/es2019/functions/validate-state.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/create-extended-exponential-ramp-to-value-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/create-extended-linear-ramp-to-value-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/create-set-value-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/create-set-value-curve-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/get-target-value-at-time.js","webpack://blabzio/./node_modules/automation-events/build/es2019/guards/exponential-ramp-to-value-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/guards/linear-ramp-to-value-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/guards/any-ramp-to-value-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/guards/set-value-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/guards/set-value-curve-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/get-value-of-automation-event-at-index-at-time.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/get-end-time-and-value-of-previous-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/guards/cancel-and-hold-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/guards/cancel-scheduled-values-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/get-event-time.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/get-exponential-ramp-value-at-time.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/get-linear-ramp-value-at-time.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/get-value-curve-value-at-time.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/interpolate-value.js","webpack://blabzio/./node_modules/automation-events/build/es2019/guards/set-target-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/classes/automation-event-list.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/create-cancel-and-hold-automation-event.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/globals.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/constants.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/guards/gain-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/read-only-map.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/get-first-sample.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/set-value-at-time-until-possible.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/module.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/window.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/create-cancel-scheduled-values-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/create-exponential-ramp-to-value-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/create-linear-ramp-to-value-automation-event.js","webpack://blabzio/./node_modules/automation-events/build/es2019/functions/create-set-target-automation-event.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-worklet-node-options-clonability.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/web-audio-media-recorder.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js","webpack://blabzio/./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/webm-pcm-media-recorder.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/functions/read-variable-size-integer-length.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/module.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/window.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/native-blob-event-constructor.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/invalid-state-error.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/read-variable-size-integer.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/read-element-content.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/read-element-type.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/decode-web-m-chunk.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/event-target-factory.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder-constructor.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/media-recorder-constructor.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/event-target-constructor.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/functions/wrap-event-listener.js","webpack://blabzio/./node_modules/extendable-media-recorder/build/es2019/factories/is-supported-promise.js","webpack://blabzio/./node_modules/fast-unique-numbers/build/es2019/factories/add-unique-number.js","webpack://blabzio/./node_modules/fast-unique-numbers/build/es2019/factories/generate-unique-number.js","webpack://blabzio/./node_modules/fast-unique-numbers/build/es2019/module.js","webpack://blabzio/./node_modules/fast-unique-numbers/build/es2019/factories/cache.js","webpack://blabzio/./src/pages/news/VideoUploader.js","webpack://blabzio/./node_modules/indefinite-article/indefinite-article.js","webpack://blabzio/./node_modules/multi-buffer-data-view/build/es5/bundle.js","webpack://blabzio/./node_modules/react-media-recorder/index.js","webpack://blabzio/./node_modules/react-media-recorder/lib/index.js","webpack://blabzio/./node_modules/recorder-audio-worklet/node_modules/compilerr/build/es5/bundle.js","webpack://blabzio/./node_modules/recorder-audio-worklet/node_modules/fast-unique-numbers/build/es5/bundle.js","webpack://blabzio/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://blabzio/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://blabzio/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://blabzio/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://blabzio/./node_modules/@babel/runtime/helpers/createClass.js","webpack://blabzio/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://blabzio/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://blabzio/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://blabzio/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://blabzio/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://blabzio/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://blabzio/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://blabzio/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://blabzio/./node_modules/@babel/runtime/helpers/typeof.js","webpack://blabzio/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["export const isMessagePort = (sender) => {\n    return typeof sender.start === 'function';\n};\n//# sourceMappingURL=message-port.js.map","export const PORT_MAP = new WeakMap();\n//# sourceMappingURL=port-map.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst ONGOING_REQUESTS = new WeakMap();\nconst createOrGetOngoingRequests = (sender) => {\n    if (ONGOING_REQUESTS.has(sender)) {\n        // @todo TypeScript needs to be convinced that has() works as expected.\n        return ONGOING_REQUESTS.get(sender);\n    }\n    const ongoingRequests = new Map();\n    ONGOING_REQUESTS.set(sender, ongoingRequests);\n    return ongoingRequests;\n};\nexport const createBroker = (brokerImplementation) => {\n    const fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n    return (sender) => {\n        const ongoingRequests = createOrGetOngoingRequests(sender);\n        sender.addEventListener('message', (({ data: message }) => {\n            const { id } = message;\n            if (id !== null && ongoingRequests.has(id)) {\n                const { reject, resolve } = ongoingRequests.get(id);\n                ongoingRequests.delete(id);\n                if (message.error === undefined) {\n                    resolve(message.result);\n                }\n                else {\n                    reject(new Error(message.error.message));\n                }\n            }\n        }));\n        if (isMessagePort(sender)) {\n            sender.start();\n        }\n        const call = (method, params = null, transferables = []) => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n                ongoingRequests.set(id, { reject, resolve });\n                if (params === null) {\n                    sender.postMessage({ id, method }, transferables);\n                }\n                else {\n                    sender.postMessage({ id, method, params }, transferables);\n                }\n            });\n        };\n        const notify = (method, params, transferables = []) => {\n            sender.postMessage({ id: null, method, params }, transferables);\n        };\n        let functions = {};\n        for (const [key, handler] of Object.entries(fullBrokerImplementation)) {\n            functions = { ...functions, [key]: handler({ call, notify }) };\n        }\n        return { ...functions };\n    };\n};\n//# sourceMappingURL=module.js.map","import { PORT_MAP } from './port-map';\nexport const extendBrokerImplementation = (partialBrokerImplementation) => ({\n    ...partialBrokerImplementation,\n    connect: ({ call }) => {\n        return async () => {\n            const { port1, port2 } = new MessageChannel();\n            const portId = await call('connect', { port: port1 }, [port1]);\n            PORT_MAP.set(port2, portId);\n            return port2;\n        };\n    },\n    disconnect: ({ call }) => {\n        return async (port) => {\n            const portId = PORT_MAP.get(port);\n            if (portId === undefined) {\n                throw new Error('The given port is not connected.');\n            }\n            await call('disconnect', { portId });\n        };\n    },\n    isSupported: ({ call }) => {\n        return () => call('isSupported');\n    }\n});\n//# sourceMappingURL=extend-broker-implementation.js.map","/*!\n * dashify <https://github.com/jonschlinkert/dashify>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = (str, options) => {\n  if (typeof str !== 'string') throw new TypeError('expected a string');\n  return str.trim()\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/\\W/g, m => /[À-ž]/.test(m) ? m : '-')\n    .replace(/^-+|-+$/g, '')\n    .replace(/-{2,}/g, m => options && options.condense ? '-' : m)\n    .toLowerCase();\n};\n","import { createBroker } from 'broker-factory';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nexport const wrap = createBroker({\n    characterize: ({ call }) => {\n        return () => call('characterize');\n    },\n    encode: ({ call }) => {\n        return (recordingId, timeslice) => {\n            return call('encode', { recordingId, timeslice });\n        };\n    },\n    record: ({ call }) => {\n        return async (recordingId, sampleRate, typedArrays) => {\n            await call('record', { recordingId, sampleRate, typedArrays }, typedArrays.map(({ buffer }) => buffer));\n        };\n    }\n});\nexport const load = (url) => {\n    const worker = new Worker(url);\n    return wrap(worker);\n};\n//# sourceMappingURL=module.js.map","import { load } from 'extendable-media-recorder-wav-encoder-broker';\nimport { worker } from './worker/worker';\nconst blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\nconst url = URL.createObjectURL(blob);\nconst extendableMediaRecorderWavEncoder = load(url);\nexport const characterize = extendableMediaRecorderWavEncoder.characterize;\nexport const connect = extendableMediaRecorderWavEncoder.connect;\nexport const disconnect = extendableMediaRecorderWavEncoder.disconnect;\nexport const encode = extendableMediaRecorderWavEncoder.encode;\nexport const isSupported = extendableMediaRecorderWavEncoder.isSupported;\nexport const record = extendableMediaRecorderWavEncoder.record;\nURL.revokeObjectURL(url);\n//# sourceMappingURL=module.js.map","// This is the minified and stringified code of the extendable-media-recorder-wav-encoder-worker package.\nexport const worker = `(()=>{var e={881:e=>{\"use strict\";e.exports=(e,t)=>{if(\"string\"!=typeof e)throw new TypeError(\"expected a string\");return e.trim().replace(/([a-z])([A-Z])/g,\"$1-$2\").replace(/\\\\W/g,(e=>/[À-ž]/.test(e)?e:\"-\")).replace(/^-+|-+$/g,\"\").replace(/-{2,}/g,(e=>t&&t.condense?\"-\":e)).toLowerCase()}},507:e=>{var t=function(e){var t,r,n=/\\\\w+/.exec(e);if(!n)return\"an\";var s=(r=n[0]).toLowerCase(),o=[\"honest\",\"hour\",\"hono\"];for(t in o)if(0==s.indexOf(o[t]))return\"an\";if(1==s.length)return\"aedhilmnorsx\".indexOf(s)>=0?\"an\":\"a\";if(r.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/))return\"an\";var a=[/^e[uw]/,/^onc?e\\\\b/,/^uni([^nmd]|mo)/,/^u[bcfhjkqrst][aeiou]/];for(t=0;t<a.length;t++)if(s.match(a[t]))return\"a\";return r.match(/^U[NK][AIEO]/)?\"a\":r==r.toUpperCase()?\"aedhilmnorsx\".indexOf(s[0])>=0?\"an\":\"a\":\"aeiou\".indexOf(s[0])>=0||s.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/)?\"an\":\"a\"};void 0!==e.exports?e.exports=t:window.indefiniteArticle=t}},t={};function r(n){var s=t[n];if(void 0!==s)return s.exports;var o=t[n]={exports:{}};return e[n](o,o.exports,r),o.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{\"use strict\";var e=r(881),t=r.n(e),n=r(507),s=r.n(n);const o=(e,r)=>void 0===r?e:r.reduce(((e,r)=>{if(\"capitalize\"===r){const t=e.charAt(0).toUpperCase(),r=e.slice(1);return\"\".concat(t).concat(r)}return\"dashify\"===r?t()(e):\"prependIndefiniteArticle\"===r?\"\".concat(s()(e),\" \").concat(e):e}),e),a=(e,t)=>{const r=/\\\\\\${([^.}]+)((\\\\.[^(]+\\\\(\\\\))*)}/g,n=[];let s=r.exec(e);for(;null!==s;){const t={modifiers:[],name:s[1]};if(void 0!==s[3]){const e=/\\\\.[^(]+\\\\(\\\\)/g;let r=e.exec(s[2]);for(;null!==r;)t.modifiers.push(r[0].slice(1,-2)),r=e.exec(s[2])}n.push(t),s=r.exec(e)}const a=n.reduce(((e,r)=>e.map((e=>\"string\"==typeof e?e.split((e=>{const t=e.name+e.modifiers.map((e=>\"\\\\\\\\.\".concat(e,\"\\\\\\\\(\\\\\\\\)\"))).join(\"\");return new RegExp(\"\\\\\\\\$\\\\\\\\{\".concat(t,\"}\"),\"g\")})(r)).reduce(((e,n,s)=>0===s?[n]:r.name in t?[...e,o(t[r.name],r.modifiers),n]:[...e,e=>o(e[r.name],r.modifiers),n]),[]):[e])).reduce(((e,t)=>[...e,...t]),[])),[e]);return e=>a.reduce(((t,r)=>\"string\"==typeof r?[...t,r]:[...t,r(e)]),[]).join(\"\")},i=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=void 0===e.code?void 0:a(e.code,t),n=void 0===e.message?void 0:a(e.message,t);return function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},s=arguments.length>1?arguments[1]:void 0;const o=void 0===s&&(t instanceof Error||void 0!==t.code&&\"Exception\"===t.code.slice(-9)),{cause:a,missingParameters:i}=o?{cause:t,missingParameters:{}}:{cause:s,missingParameters:t},c=void 0===n?new Error:new Error(n(i));return null!==a&&(c.cause=a),void 0!==r&&(c.code=r(i)),void 0!==e.status&&(c.status=e.status),c}},c=-32603,l=-32602,u=i({message:'The requested method called \"\\${method}\" is not supported.',status:-32601}),d=i({message:'The handler of the method called \"\\${method}\" returned no required result.',status:c}),h=i({message:'The handler of the method called \"\\${method}\" returned an unexpected result.',status:c}),f=i({message:'The specified parameter called \"portId\" with the given value \"\\${portId}\" does not identify a port connected to this worker.',status:l}),m=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,p=536870912,g=1073741824,v=new WeakMap;var w;const y=((e,t)=>r=>{const n=t.get(r);let s=void 0===n?r.size:n<g?n+1:0;if(!r.has(s))return e(r,s);if(r.size<p){for(;r.has(s);)s=Math.floor(Math.random()*g);return e(r,s)}if(r.size>m)throw new Error(\"Congratulations, you created a collection of unique numbers which uses all available integers!\");for(;r.has(s);)s=Math.floor(Math.random()*m);return e(r,s)})((w=v,(e,t)=>(w.set(e,t),t)),v),b=((e=>{})(y),new Map),E=(e,t,r)=>({...t,connect:r=>{let{port:n}=r;n.start();const s=e(n,t),o=y(b);return b.set(o,(()=>{s(),n.close(),b.delete(o)})),{result:o}},disconnect:e=>{let{portId:t}=e;const r=b.get(t);if(void 0===r)throw f({portId:t.toString()});return r(),{result:null}},isSupported:async()=>{if(await new Promise((e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=t=>{let{data:r}=t;return e(null!==r)},n.postMessage(t,[t])}))){const e=r();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),M=function(e,t){const r=E(M,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>!0),n=((e,t)=>async r=>{let{data:{id:n,method:s,params:o}}=r;const a=t[s];try{if(void 0===a)throw u({method:s});const t=void 0===o?a():a(o);if(void 0===t)throw d({method:s});const r=t instanceof Promise?await t:t;if(null===n){if(void 0!==r.result)throw h({method:s})}else{if(void 0===r.result)throw h({method:s});const{result:t,transferables:o=[]}=r;e.postMessage({id:n,result:t},o)}}catch(t){const{message:r,status:s=-32603}=t;e.postMessage({error:{code:s,message:r},id:n})}})(e,r);return e.addEventListener(\"message\",n),()=>e.removeEventListener(\"message\",n)},x=e=>e.reduce(((e,t)=>e+t.length),0),A=(e,t)=>{const r=[];let n=0;e:for(;n<t;){const t=e.length;for(let s=0;s<t;s+=1){const t=e[s];void 0===r[s]&&(r[s]=[]);const o=t.shift();if(void 0===o)break e;r[s].push(o),0===s&&(n+=o.length)}}if(n>t){const s=n-t;r.forEach(((t,r)=>{const n=t.pop(),o=n.length-s;t.push(n.subarray(0,o)),e[r].unshift(n.subarray(o))}))}return r},U=new Map,I=(e=>(t,r,n)=>{const s=e.get(t);if(void 0===s){const s={channelDataArrays:n.map((e=>[e])),isComplete:!0,sampleRate:r};return e.set(t,s),s}return s.channelDataArrays.forEach(((e,t)=>e.push(n[t]))),s})(U),C=((e,t)=>(r,n,s,o)=>{const a=s>>3,i=\"subsequent\"===n?0:44,c=r.length,l=e(r[0]),u=new ArrayBuffer(l*c*a+i),d=new DataView(u);return\"subsequent\"!==n&&t(d,s,c,\"complete\"===n?l:Number.POSITIVE_INFINITY,o),r.forEach(((e,t)=>{let r=i+t*a;e.forEach((e=>{const t=e.length;for(let n=0;n<t;n+=1){const t=e[n];d.setInt16(r,t<0?32768*Math.max(-1,t):32767*Math.min(1,t),!0),r+=c*a}}))})),[u]})(x,((e,t,r,n,s)=>{const o=t>>3,a=Math.min(n*r*o,4294967251);e.setUint32(0,1380533830),e.setUint32(4,a+36,!0),e.setUint32(8,1463899717),e.setUint32(12,1718449184),e.setUint32(16,16,!0),e.setUint16(20,1,!0),e.setUint16(22,r,!0),e.setUint32(24,s,!0),e.setUint32(28,s*r*o,!0),e.setUint16(32,r*o,!0),e.setUint16(34,t,!0),e.setUint32(36,1684108385),e.setUint32(40,a,!0)})),N=new Map;M(self,{characterize:()=>({result:/^audio\\\\/wav$/}),encode:e=>{let{recordingId:t,timeslice:r}=e;const n=N.get(t);void 0!==n&&(N.delete(t),n.reject(new Error(\"Another request was made to initiate an encoding.\")));const s=U.get(t);if(null!==r){if(void 0===s||x(s.channelDataArrays[0])*(1e3/s.sampleRate)<r)return new Promise(((e,n)=>{N.set(t,{reject:n,resolve:e,timeslice:r})}));const e=A(s.channelDataArrays,Math.ceil(r*(s.sampleRate/1e3))),n=C(e,s.isComplete?\"initial\":\"subsequent\",16,s.sampleRate);return s.isComplete=!1,{result:n,transferables:n}}if(void 0!==s){const e=C(s.channelDataArrays,s.isComplete?\"complete\":\"subsequent\",16,s.sampleRate);return U.delete(t),{result:e,transferables:e}}return{result:[],transferables:[]}},record:e=>{let{recordingId:t,sampleRate:r,typedArrays:n}=e;const s=I(t,r,n),o=N.get(t);if(void 0!==o&&x(s.channelDataArrays[0])*(1e3/r)>=o.timeslice){const e=A(s.channelDataArrays,Math.ceil(o.timeslice*(r/1e3))),n=C(e,s.isComplete?\"initial\":\"subsequent\",16,r);s.isComplete=!1,N.delete(t),o.resolve({result:n,transferables:n})}return{result:null}}})})()})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worker.js.map","import { createBroker } from 'broker-factory';\nimport { addUniqueNumber } from 'fast-unique-numbers';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst encoderIds = new Set();\nexport const wrap = createBroker({\n    encode: ({ call }) => {\n        return async (encoderId, timeslice) => {\n            const arrayBuffers = await call('encode', { encoderId, timeslice });\n            encoderIds.delete(encoderId);\n            return arrayBuffers;\n        };\n    },\n    instantiate: ({ call }) => {\n        return async (mimeType, sampleRate) => {\n            const encoderId = addUniqueNumber(encoderIds);\n            const port = await call('instantiate', { encoderId, mimeType, sampleRate });\n            return { encoderId, port };\n        };\n    },\n    register: ({ call }) => {\n        return (port) => {\n            return call('register', { port }, [port]);\n        };\n    }\n});\nexport const load = (url) => {\n    const worker = new Worker(url);\n    return wrap(worker);\n};\n//# sourceMappingURL=module.js.map","import { load as loadWorker } from 'media-encoder-host-broker';\nimport { worker } from './worker/worker';\nconst blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\nconst url = URL.createObjectURL(blob);\nconst mediaEncoderHost = loadWorker(url);\nexport const connect = mediaEncoderHost.connect;\nexport const disconnect = mediaEncoderHost.disconnect;\nexport const encode = mediaEncoderHost.encode;\nexport const instantiate = mediaEncoderHost.instantiate;\nexport const isSupported = mediaEncoderHost.isSupported;\nexport const register = mediaEncoderHost.register;\nURL.revokeObjectURL(url);\n//# sourceMappingURL=module.js.map","// This is the minified and stringified code of the media-encoder-host-worker package.\nexport const worker = `(()=>{var e={881:e=>{\"use strict\";e.exports=(e,t)=>{if(\"string\"!=typeof e)throw new TypeError(\"expected a string\");return e.trim().replace(/([a-z])([A-Z])/g,\"$1-$2\").replace(/\\\\W/g,(e=>/[À-ž]/.test(e)?e:\"-\")).replace(/^-+|-+$/g,\"\").replace(/-{2,}/g,(e=>t&&t.condense?\"-\":e)).toLowerCase()}},507:e=>{var t=function(e){var t,r,n=/\\\\w+/.exec(e);if(!n)return\"an\";var o=(r=n[0]).toLowerCase(),s=[\"honest\",\"hour\",\"hono\"];for(t in s)if(0==o.indexOf(s[t]))return\"an\";if(1==o.length)return\"aedhilmnorsx\".indexOf(o)>=0?\"an\":\"a\";if(r.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/))return\"an\";var a=[/^e[uw]/,/^onc?e\\\\b/,/^uni([^nmd]|mo)/,/^u[bcfhjkqrst][aeiou]/];for(t=0;t<a.length;t++)if(o.match(a[t]))return\"a\";return r.match(/^U[NK][AIEO]/)?\"a\":r==r.toUpperCase()?\"aedhilmnorsx\".indexOf(o[0])>=0?\"an\":\"a\":\"aeiou\".indexOf(o[0])>=0||o.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/)?\"an\":\"a\"};void 0!==e.exports?e.exports=t:window.indefiniteArticle=t}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var s=t[n]={exports:{}};return e[n](s,s.exports,r),s.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{\"use strict\";var e=r(881),t=r.n(e),n=r(507),o=r.n(n);const s=(e,r)=>void 0===r?e:r.reduce(((e,r)=>{if(\"capitalize\"===r){const t=e.charAt(0).toUpperCase(),r=e.slice(1);return\"\".concat(t).concat(r)}return\"dashify\"===r?t()(e):\"prependIndefiniteArticle\"===r?\"\".concat(o()(e),\" \").concat(e):e}),e),a=(e,t)=>{const r=/\\\\\\${([^.}]+)((\\\\.[^(]+\\\\(\\\\))*)}/g,n=[];let o=r.exec(e);for(;null!==o;){const t={modifiers:[],name:o[1]};if(void 0!==o[3]){const e=/\\\\.[^(]+\\\\(\\\\)/g;let r=e.exec(o[2]);for(;null!==r;)t.modifiers.push(r[0].slice(1,-2)),r=e.exec(o[2])}n.push(t),o=r.exec(e)}const a=n.reduce(((e,r)=>e.map((e=>\"string\"==typeof e?e.split((e=>{const t=e.name+e.modifiers.map((e=>\"\\\\\\\\.\".concat(e,\"\\\\\\\\(\\\\\\\\)\"))).join(\"\");return new RegExp(\"\\\\\\\\$\\\\\\\\{\".concat(t,\"}\"),\"g\")})(r)).reduce(((e,n,o)=>0===o?[n]:r.name in t?[...e,s(t[r.name],r.modifiers),n]:[...e,e=>s(e[r.name],r.modifiers),n]),[]):[e])).reduce(((e,t)=>[...e,...t]),[])),[e]);return e=>a.reduce(((t,r)=>\"string\"==typeof r?[...t,r]:[...t,r(e)]),[]).join(\"\")},i=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=void 0===e.code?void 0:a(e.code,t),n=void 0===e.message?void 0:a(e.message,t);return function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1?arguments[1]:void 0;const s=void 0===o&&(t instanceof Error||void 0!==t.code&&\"Exception\"===t.code.slice(-9)),{cause:a,missingParameters:i}=s?{cause:t,missingParameters:{}}:{cause:o,missingParameters:t},c=void 0===n?new Error:new Error(n(i));return null!==a&&(c.cause=a),void 0!==r&&(c.code=r(i)),void 0!==e.status&&(c.status=e.status),c}},c=-32603,d=-32602,l=i({message:'The requested method called \"\\${method}\" is not supported.',status:-32601}),u=i({message:'The handler of the method called \"\\${method}\" returned no required result.',status:c}),h=i({message:'The handler of the method called \"\\${method}\" returned an unexpected result.',status:c}),m=i({message:'The specified parameter called \"portId\" with the given value \"\\${portId}\" does not identify a port connected to this worker.',status:d}),p=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,f=536870912,g=1073741824,w=new WeakMap;var v;const y=((e,t)=>r=>{const n=t.get(r);let o=void 0===n?r.size:n<g?n+1:0;if(!r.has(o))return e(r,o);if(r.size<f){for(;r.has(o);)o=Math.floor(Math.random()*g);return e(r,o)}if(r.size>p)throw new Error(\"Congratulations, you created a collection of unique numbers which uses all available integers!\");for(;r.has(o);)o=Math.floor(Math.random()*p);return e(r,o)})((v=w,(e,t)=>(v.set(e,t),t)),w),M=((e=>{})(y),new Map),E=(e,t,r)=>({...t,connect:r=>{let{port:n}=r;n.start();const o=e(n,t),s=y(M);return M.set(s,(()=>{o(),n.close(),M.delete(s)})),{result:s}},disconnect:e=>{let{portId:t}=e;const r=M.get(t);if(void 0===r)throw m({portId:t.toString()});return r(),{result:null}},isSupported:async()=>{if(await new Promise((e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=t=>{let{data:r}=t;return e(null!==r)},n.postMessage(t,[t])}))){const e=r();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),x=function(e,t){const r=E(x,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>!0),n=((e,t)=>async r=>{let{data:{id:n,method:o,params:s}}=r;const a=t[o];try{if(void 0===a)throw l({method:o});const t=void 0===s?a():a(s);if(void 0===t)throw u({method:o});const r=t instanceof Promise?await t:t;if(null===n){if(void 0!==r.result)throw h({method:o})}else{if(void 0===r.result)throw h({method:o});const{result:t,transferables:s=[]}=r;e.postMessage({id:n,result:t},s)}}catch(t){const{message:r,status:o=-32603}=t;e.postMessage({error:{code:o,message:r},id:n})}})(e,r);return e.addEventListener(\"message\",n),()=>e.removeEventListener(\"message\",n)},b=e=>{e.onmessage=null,e.close()},A=new WeakMap,T=new WeakMap,I=(e=>{const t=(r=e,{...r,connect:e=>{let{call:t}=e;return async()=>{const{port1:e,port2:r}=new MessageChannel,n=await t(\"connect\",{port:e},[e]);return A.set(r,n),r}},disconnect:e=>{let{call:t}=e;return async e=>{const r=A.get(e);if(void 0===r)throw new Error(\"The given port is not connected.\");await t(\"disconnect\",{portId:r})}},isSupported:e=>{let{call:t}=e;return()=>t(\"isSupported\")}});var r;return e=>{const r=(e=>{if(T.has(e))return T.get(e);const t=new Map;return T.set(e,t),t})(e);e.addEventListener(\"message\",(e=>{let{data:t}=e;const{id:n}=t;if(null!==n&&r.has(n)){const{reject:e,resolve:o}=r.get(n);r.delete(n),void 0===t.error?o(t.result):e(new Error(t.error.message))}})),(e=>\"function\"==typeof e.start)(e)&&e.start();const n=function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return new Promise(((s,a)=>{const i=y(r);r.set(i,{reject:a,resolve:s}),null===n?e.postMessage({id:i,method:t},o):e.postMessage({id:i,method:t,params:n},o)}))},o=function(t,r){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];e.postMessage({id:null,method:t,params:r},n)};let s={};for(const[e,r]of Object.entries(t))s={...s,[e]:r({call:n,notify:o})};return{...s}}})({characterize:e=>{let{call:t}=e;return()=>t(\"characterize\")},encode:e=>{let{call:t}=e;return(e,r)=>t(\"encode\",{recordingId:e,timeslice:r})},record:e=>{let{call:t}=e;return async(e,r,n)=>{await t(\"record\",{recordingId:e,sampleRate:r,typedArrays:n},n.map((e=>{let{buffer:t}=e;return t})))}}}),O=async(e,t)=>{const r=I(t),n=await r.characterize(),o=n.toString();if(e.has(o))throw new Error(\"There is already an encoder stored which handles exactly the same mime types.\");return e.set(o,[n,r]),n},L=new Map,P=(e=>t=>{const r=e.get(t);if(void 0===r)throw new Error(\"There was no instance of an encoder stored with the given id.\");return r})(L),S=((e,t)=>r=>{const n=t(r);return e.delete(r),n})(L,P),N=new Map,C=((e,t)=>r=>{const[n,o,s,a]=t(r);return s?new Promise((t=>{o.onmessage=s=>{let{data:i}=s;0===i.length?(e(o),t(n.encode(r,null))):n.record(r,a,i)}})):n.encode(r,null)})(b,S),R=(e=>t=>{for(const[r,n]of Array.from(e.values()))if(r.test(t))return n;throw new Error(\"There is no encoder registered which could handle the given mimeType.\")})(N),$=((e,t,r)=>(n,o,s)=>{if(t.has(n))throw new Error('There is already an encoder registered with an id called \"'.concat(n,'\".'));const a=r(o),{port1:i,port2:c}=new MessageChannel,d=[a,i,!0,s];return t.set(n,d),i.onmessage=t=>{let{data:r}=t;0===r.length?(e(i),d[2]=!1):a.record(n,s,r.map((e=>\"number\"==typeof e?new Float32Array(e):e)))},c})(b,L,R),j=(e=>(t,r)=>{const[n]=e(t);return n.encode(t,r)})(P);x(self,{encode:async e=>{let{encoderId:t,timeslice:r}=e;const n=null===r?await C(t):await j(t,r);return{result:n,transferables:n}},instantiate:e=>{let{encoderId:t,mimeType:r,sampleRate:n}=e;const o=$(t,r,n);return{result:o,transferables:[o]}},register:async e=>{let{port:t}=e;return{result:await O(N,t)}}})})()})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worker.js.map","export const createBlobEventFactory = (nativeBlobEventConstructor) => {\n    return (type, blobEventInit) => {\n        // Bug #14: Safari does not yet support the BlobEvent.\n        if (nativeBlobEventConstructor === null) {\n            const { data, ...eventInit } = blobEventInit;\n            const fakeBlobEvent = new Event(type, eventInit);\n            fakeBlobEvent.data = data;\n            return fakeBlobEvent;\n        }\n        return new nativeBlobEventConstructor(type, blobEventInit);\n    };\n};\n//# sourceMappingURL=blob-event-factory.js.map","export const createInvalidModificationError = (message = '') => {\n    try {\n        return new DOMException(message, 'InvalidModificationError');\n    }\n    catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 13;\n        err.message = message;\n        err.name = 'InvalidModificationError';\n        return err;\n    }\n};\n//# sourceMappingURL=invalid-modification-error.js.map","export const createNotSupportedError = () => {\n    try {\n        return new DOMException('', 'NotSupportedError');\n    }\n    catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 9;\n        err.name = 'NotSupportedError';\n        return err;\n    }\n};\n//# sourceMappingURL=not-supported-error.js.map","export const observable = Symbol.observable || \"@@observable\";\r\n//# sourceMappingURL=symbols.js.map","const noop = () => { };\r\nconst rethrow = (error) => {\r\n    throw error;\r\n};\r\nexport function toObserver(observer) {\r\n    if (observer) {\r\n        if (observer.next && observer.error && observer.complete) {\r\n            return observer;\r\n        }\r\n        return {\r\n            complete: (observer.complete ?? noop).bind(observer),\r\n            error: (observer.error ?? rethrow).bind(observer),\r\n            next: (observer.next ?? noop).bind(observer),\r\n        };\r\n    }\r\n    return {\r\n        complete: noop,\r\n        error: rethrow,\r\n        next: noop,\r\n    };\r\n}\r\n//# sourceMappingURL=to-observer.js.map","export const createAnimationFrame = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () => wrapSubscribeFunction((observer) => {\n        if (window === null || window.cancelAnimationFrame === undefined || window.requestAnimationFrame === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        let animationFrameHandle = window.requestAnimationFrame(function animationFrameCallback(timestamp) {\n            animationFrameHandle = window.requestAnimationFrame(animationFrameCallback);\n            observer.next(timestamp);\n        });\n        return () => window.cancelAnimationFrame(animationFrameHandle);\n    });\n};\n//# sourceMappingURL=animation-frame.js.map","export const emitNotSupportedError = (observer) => {\n    observer.error(new Error('The required browser API seems to be not supported.'));\n    return () => { }; // tslint:disable-line:no-empty\n};\n//# sourceMappingURL=emit-not-supported-error.js.map","import { patch, toObserver } from 'rxjs-interop';\nimport { createAnimationFrame } from './factories/animation-frame';\nimport { createAttribute } from './factories/attribute';\nimport { createGeolocation } from './factories/geolocation';\nimport { createIntersections } from './factories/intersections';\nimport { createMapSubscribableThing } from './factories/map-subscribable-thing';\nimport { createMediaDevices } from './factories/media-devices';\nimport { createMediaQueryMatch } from './factories/media-query-match';\nimport { createMetrics } from './factories/metrics';\nimport { createMidiInputs } from './factories/midi-inputs';\nimport { createMidiOutputs } from './factories/midi-outputs';\nimport { createMutations } from './factories/mutations';\nimport { createOn } from './factories/on';\nimport { createOnline } from './factories/online';\nimport { createPermissionState } from './factories/permission-state';\nimport { createPrependSubscribableThing } from './factories/prepend-subscribable-thing';\nimport { createReports } from './factories/reports';\nimport { createResizes } from './factories/resizes';\nimport { createUnhandledRejection } from './factories/unhandled-rejection';\nimport { createVideoFrame } from './factories/video-frame';\nimport { createWakeLock } from './factories/wake-lock';\nimport { createWindow } from './factories/window';\nimport { createWrapSubscribeFunction } from './factories/wrap-subscribe-function';\nimport { emitNotSupportedError } from './functions/emit-not-supported-error';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst window = createWindow();\nconst wrapSubscribeFunction = createWrapSubscribeFunction(patch, toObserver);\nexport const animationFrame = createAnimationFrame(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mutations = createMutations(emitNotSupportedError, window, wrapSubscribeFunction);\nconst mapSubscribableThing = createMapSubscribableThing(wrapSubscribeFunction);\nconst prependSubscribableThing = createPrependSubscribableThing(wrapSubscribeFunction);\nexport const attribute = createAttribute(mapSubscribableThing, mutations, prependSubscribableThing);\nexport const geolocation = createGeolocation(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const intersections = createIntersections(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaDevices = createMediaDevices(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaQueryMatch = createMediaQueryMatch(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const metrics = createMetrics(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const midiInputs = createMidiInputs(wrapSubscribeFunction);\nexport const midiOutputs = createMidiOutputs(wrapSubscribeFunction);\nexport const on = createOn(wrapSubscribeFunction);\nexport const online = createOnline(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const permissionState = createPermissionState(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const reports = createReports(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const resizes = createResizes(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const unhandledRejection = createUnhandledRejection(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const videoFrame = createVideoFrame(emitNotSupportedError, wrapSubscribeFunction);\nexport const wakeLock = createWakeLock(emitNotSupportedError, window, wrapSubscribeFunction);\n//# sourceMappingURL=module.js.map","// @todo TypeScript does not include type definitions for the Reporting API yet.\nexport const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const createWrapSubscribeFunction = (patch, toObserver) => {\n    const emptyFunction = () => { }; // tslint:disable-line:no-empty\n    const isNextFunction = (args) => typeof args[0] === 'function';\n    return (innerSubscribe) => {\n        const subscribe = ((...args) => {\n            const unsubscribe = innerSubscribe(isNextFunction(args) ? toObserver({ next: args[0] }) : toObserver(...args));\n            if (unsubscribe !== undefined) {\n                return unsubscribe;\n            }\n            return emptyFunction;\n        });\n        subscribe[Symbol.observable] = () => ({\n            subscribe: (...args) => ({ unsubscribe: subscribe(...args) })\n        });\n        return patch(subscribe);\n    };\n};\n//# sourceMappingURL=wrap-subscribe-function.js.map","import { observable } from \"./symbols\";\r\nexport function patch(arg) {\r\n    if (!Symbol.observable) {\r\n        if (typeof arg === \"function\" &&\r\n            arg.prototype &&\r\n            arg.prototype[Symbol.observable]) {\r\n            arg.prototype[observable] = arg.prototype[Symbol.observable];\r\n            delete arg.prototype[Symbol.observable];\r\n        }\r\n        else {\r\n            arg[observable] = arg[Symbol.observable];\r\n            delete arg[Symbol.observable];\r\n        }\r\n    }\r\n    return arg;\r\n}\r\n//# sourceMappingURL=patch.js.map","export const createMutations = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.MutationObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const mutationObserver = new window.MutationObserver((records) => observer.next(records));\n        try {\n            mutationObserver.observe(htmlElement, options);\n        }\n        catch (err) {\n            observer.error(err);\n        }\n        return () => mutationObserver.disconnect();\n    });\n};\n//# sourceMappingURL=mutations.js.map","export const createMapSubscribableThing = (wrapSubscribeFunction) => (subscribableThing, map) => wrapSubscribeFunction((observer) => subscribableThing({ ...observer, next: (value) => observer.next(map(value)) }));\n//# sourceMappingURL=map-subscribable-thing.js.map","export const createPrependSubscribableThing = (wrapSubscribeFunction) => (subscribableThing, prependedValue) => wrapSubscribeFunction((observer) => {\n    observer.next(prependedValue);\n    return subscribableThing(observer);\n});\n//# sourceMappingURL=prepend-subscribable-thing.js.map","export const createAttribute = (mapSubscribableThing, mutations, prependSubscribableThing) => {\n    return (htmlElement, name) => {\n        const getAttribute = () => htmlElement.getAttribute(name);\n        return prependSubscribableThing(mapSubscribableThing(mutations(htmlElement, {\n            attributeFilter: [name],\n            childList: false,\n            subtree: false\n        }), () => getAttribute()), getAttribute());\n    };\n};\n//# sourceMappingURL=attribute.js.map","export const createGeolocation = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) => wrapSubscribeFunction((observer) => {\n        if (window === null ||\n            window.navigator === undefined ||\n            window.navigator.geolocation === undefined ||\n            window.navigator.geolocation.clearWatch === undefined ||\n            window.navigator.geolocation.watchPosition === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const watchId = window.navigator.geolocation.watchPosition((position) => observer.next(position), (err) => observer.error(err), options);\n        return () => window.navigator.geolocation.clearWatch(watchId);\n    });\n};\n//# sourceMappingURL=geolocation.js.map","export const createIntersections = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.IntersectionObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const intersectionObserverObserver = new window.IntersectionObserver((entries) => observer.next(entries), options);\n        try {\n            intersectionObserverObserver.observe(htmlElement);\n        }\n        catch (err) {\n            observer.error(err);\n        }\n        return () => intersectionObserverObserver.disconnect();\n    });\n};\n//# sourceMappingURL=intersections.js.map","export const createMediaDevices = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () => wrapSubscribeFunction((observer) => {\n        if (window === null ||\n            window.navigator === undefined ||\n            window.navigator.mediaDevices === undefined ||\n            window.navigator.mediaDevices.enumerateDevices === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        let isActive = true;\n        const enumerateDevices = () => {\n            window.navigator.mediaDevices.enumerateDevices().then((mediaDevices) => {\n                if (isActive) {\n                    observer.next(mediaDevices);\n                }\n            }, (err) => {\n                if (isActive) {\n                    unsubscribe();\n                    observer.error(err);\n                }\n            });\n        };\n        const unsubscribe = () => {\n            isActive = false;\n            window.navigator.mediaDevices.removeEventListener('devicechange', enumerateDevices);\n        };\n        enumerateDevices();\n        window.navigator.mediaDevices.addEventListener('devicechange', enumerateDevices);\n        return unsubscribe;\n    });\n};\n//# sourceMappingURL=media-devices.js.map","export const createMediaQueryMatch = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (mediaQueryString) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.matchMedia === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const mediaQueryList = window.matchMedia(mediaQueryString);\n        observer.next(mediaQueryList.matches);\n        mediaQueryList.onchange = () => observer.next(mediaQueryList.matches);\n        return () => {\n            mediaQueryList.onchange = null;\n        };\n    });\n};\n//# sourceMappingURL=media-query-match.js.map","export const createMetrics = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.PerformanceObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const performanceObserver = new window.PerformanceObserver((entryList) => observer.next(entryList.getEntries()));\n        try {\n            performanceObserver.observe(options);\n        }\n        catch (err) {\n            observer.error(err);\n        }\n        return () => performanceObserver.disconnect();\n    });\n};\n//# sourceMappingURL=metrics.js.map","export const createMidiInputs = (wrapSubscribeFunction) => {\n    return (midiAccess) => wrapSubscribeFunction((observer) => {\n        let midiInputs = Array.from(midiAccess.inputs.values());\n        const emitMidiInputs = () => {\n            const midiAccessInputs = midiAccess.inputs;\n            if (midiInputs.length !== midiAccessInputs.size || midiInputs.some(({ id }) => !midiAccessInputs.has(id))) {\n                midiInputs = Array.from(midiAccessInputs.values());\n                observer.next(midiInputs);\n            }\n        };\n        observer.next(midiInputs);\n        midiAccess.addEventListener('statechange', emitMidiInputs);\n        return () => midiAccess.removeEventListener('statechange', emitMidiInputs);\n    });\n};\n//# sourceMappingURL=midi-inputs.js.map","export const createMidiOutputs = (wrapSubscribeFunction) => {\n    return (midiAccess) => wrapSubscribeFunction((observer) => {\n        let midiOutputs = Array.from(midiAccess.outputs.values());\n        const emitMidiOutputs = () => {\n            const midiAccessOutputs = midiAccess.outputs;\n            if (midiOutputs.length !== midiAccessOutputs.size || midiOutputs.some(({ id }) => !midiAccessOutputs.has(id))) {\n                midiOutputs = Array.from(midiAccessOutputs.values());\n                observer.next(midiOutputs);\n            }\n        };\n        observer.next(midiOutputs);\n        midiAccess.addEventListener('statechange', emitMidiOutputs);\n        return () => midiAccess.removeEventListener('statechange', emitMidiOutputs);\n    });\n};\n//# sourceMappingURL=midi-outputs.js.map","export const createOn = (wrapSubscribeFunction) => {\n    return (target, type, options) => wrapSubscribeFunction((observer) => {\n        const listener = (event) => observer.next(event);\n        target.addEventListener(type, listener, options);\n        return () => target.removeEventListener(type, listener, options);\n    });\n};\n//# sourceMappingURL=on.js.map","import { compile } from 'compilerr';\nconst JSON_RPC_ERROR_CODES = { INTERNAL_ERROR: -32603, INVALID_PARAMS: -32602, METHOD_NOT_FOUND: -32601 };\nexport const renderMethodNotFoundError = compile({\n    message: 'The requested method called \"${method}\" is not supported.',\n    status: JSON_RPC_ERROR_CODES.METHOD_NOT_FOUND\n});\nexport const renderMissingResponseError = compile({\n    message: 'The handler of the method called \"${method}\" returned no required result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport const renderUnexpectedResultError = compile({\n    message: 'The handler of the method called \"${method}\" returned an unexpected result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport const renderUnknownPortIdError = compile({\n    message: 'The specified parameter called \"portId\" with the given value \"${portId}\" does not identify a port connected to this worker.',\n    status: JSON_RPC_ERROR_CODES.INVALID_PARAMS\n});\n//# sourceMappingURL=error-renderers.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { on } from 'subscribable-things';\nimport { isSupported } from 'worker-factory';\nimport { createAddRecorderAudioWorkletModule } from './factories/add-recorder-audio-worklet-module';\nimport { createListener } from './factories/listener';\nimport { createPostMessageFactory } from './factories/post-message-factory';\nimport { createRecorderAudioWorkletNodeFactory } from './factories/recorder-audio-worklet-node-factory';\nimport { validateState } from './functions/validate-state';\nimport { worklet } from './worklet/worklet';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nexport const addRecorderAudioWorkletModule = createAddRecorderAudioWorkletModule(Blob, URL, worklet);\nexport const createRecorderAudioWorkletNode = createRecorderAudioWorkletNodeFactory(createListener, createPostMessageFactory(generateUniqueNumber), on, validateState);\nexport { isSupported };\n//# sourceMappingURL=module.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { renderUnknownPortIdError } from './error-renderers';\nimport { isSupportingTransferables } from './is-supporting-transferables';\nconst DESTROY_WORKER_FUNCTIONS = new Map();\nexport const extendWorkerImplementation = (createWorker, partialWorkerImplementation, isSupportedFunction) => ({\n    ...partialWorkerImplementation,\n    connect: ({ port }) => {\n        port.start();\n        const destroyWorker = createWorker(port, partialWorkerImplementation);\n        const portId = generateUniqueNumber(DESTROY_WORKER_FUNCTIONS);\n        DESTROY_WORKER_FUNCTIONS.set(portId, () => {\n            destroyWorker();\n            port.close();\n            DESTROY_WORKER_FUNCTIONS.delete(portId);\n        });\n        return { result: portId };\n    },\n    disconnect: ({ portId }) => {\n        const destroyWorker = DESTROY_WORKER_FUNCTIONS.get(portId);\n        if (destroyWorker === undefined) {\n            throw renderUnknownPortIdError({ portId: portId.toString() });\n        }\n        destroyWorker();\n        return { result: null };\n    },\n    isSupported: async () => {\n        const isSelfSupported = await isSupportingTransferables();\n        if (isSelfSupported) {\n            const result = isSupportedFunction();\n            const synchronousResult = result instanceof Promise ? await result : result;\n            return { result: synchronousResult };\n        }\n        return { result: false };\n    }\n});\n//# sourceMappingURL=extend-worker-implementation.js.map","export const createAddRecorderAudioWorkletModule = (blobConstructor, urlConstructor, worklet) => {\n    return async (addAudioWorkletModule) => {\n        const blob = new blobConstructor([worklet], { type: 'application/javascript; charset=utf-8' });\n        const url = urlConstructor.createObjectURL(blob);\n        try {\n            await addAudioWorkletModule(url);\n        }\n        finally {\n            urlConstructor.revokeObjectURL(url);\n        }\n    };\n};\n//# sourceMappingURL=add-recorder-audio-worklet-module.js.map","// This is the minified and stringified code of the recorder-audio-worklet-processor package.\nexport const worklet = `(()=>{\"use strict\";class e extends AudioWorkletProcessor{constructor(){super(),this._encoderPort=null,this._state=\"inactive\",this.port.onmessage=e=>{let{data:t}=e;\"pause\"===t.method?\"active\"===this._state||\"recording\"===this._state?(this._state=\"paused\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"record\"===t.method?\"inactive\"===this._state?(this._encoderPort=t.params.encoderPort,this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"resume\"===t.method?\"paused\"===this._state?(this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"stop\"===t.method?\"active\"!==this._state&&\"paused\"!==this._state&&\"recording\"!==this._state||null===this._encoderPort?this._sendUnexpectedStateError(t.id):(this._stop(this._encoderPort),this._sendAcknowledgement(t.id)):\"number\"==typeof t.id&&this.port.postMessage({error:{code:-32601,message:\"The requested method is not supported.\"},id:t.id})}}process(e){let[t]=e;if(\"inactive\"===this._state||\"paused\"===this._state)return!0;if(\"active\"===this._state){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");if(0===t.length)return!0;this._state=\"recording\"}if(\"recording\"===this._state&&null!==this._encoderPort){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");if(0!==t.length)return this._encoderPort.postMessage(t,t.map((e=>{let{buffer:t}=e;return t}))),!0;this._stop(this._encoderPort)}return!1}_sendAcknowledgement(e){this.port.postMessage({id:e,result:null})}_sendUnexpectedStateError(e){this.port.postMessage({error:{code:-32603,message:\"The internal state does not allow to process the given message.\"},id:e})}_stop(e){e.postMessage([]),e.close(),this._encoderPort=null,this._state=\"stopped\"}}e.parameterDescriptors=[],registerProcessor(\"recorder-audio-worklet-processor\",e)})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worklet.js.map","export const createRecorderAudioWorkletNodeFactory = (createListener, createPostMessage, on, validateState) => {\n    return (audioWorkletNodeConstructor, context, options = {}) => {\n        const audioWorkletNode = new audioWorkletNodeConstructor(context, 'recorder-audio-worklet-processor', {\n            ...options,\n            channelCountMode: 'explicit',\n            numberOfInputs: 1,\n            numberOfOutputs: 0\n        });\n        const ongoingRequests = new Map();\n        const postMessage = createPostMessage(ongoingRequests, audioWorkletNode.port);\n        const unsubscribe = on(audioWorkletNode.port, 'message')(createListener(ongoingRequests));\n        audioWorkletNode.port.start();\n        let state = 'inactive';\n        Object.defineProperties(audioWorkletNode, {\n            pause: {\n                get() {\n                    return async () => {\n                        validateState(['recording'], state);\n                        state = 'paused';\n                        return postMessage({\n                            method: 'pause'\n                        });\n                    };\n                }\n            },\n            port: {\n                get() {\n                    throw new Error(\"The port of a RecorderAudioWorkletNode can't be accessed.\");\n                }\n            },\n            record: {\n                get() {\n                    return async (encoderPort) => {\n                        validateState(['inactive'], state);\n                        state = 'recording';\n                        return postMessage({\n                            method: 'record',\n                            params: { encoderPort }\n                        }, [encoderPort]);\n                    };\n                }\n            },\n            resume: {\n                get() {\n                    return async () => {\n                        validateState(['paused'], state);\n                        state = 'recording';\n                        return postMessage({\n                            method: 'resume'\n                        });\n                    };\n                }\n            },\n            stop: {\n                get() {\n                    return async () => {\n                        validateState(['paused', 'recording'], state);\n                        state = 'stopped';\n                        try {\n                            await postMessage({ method: 'stop' });\n                        }\n                        finally {\n                            unsubscribe();\n                        }\n                    };\n                }\n            }\n        });\n        return audioWorkletNode;\n    };\n};\n//# sourceMappingURL=recorder-audio-worklet-node-factory.js.map","export const createListener = (ongoingRequests) => {\n    return ({ data: message }) => {\n        const { id } = message;\n        if (id !== null) {\n            const ongoingRequest = ongoingRequests.get(id);\n            if (ongoingRequest !== undefined) {\n                const { reject, resolve } = ongoingRequest;\n                ongoingRequests.delete(id);\n                if (message.error === undefined) {\n                    resolve(message.result);\n                }\n                else {\n                    reject(new Error(message.error.message));\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=listener.js.map","export const createPostMessageFactory = (generateUniqueNumber) => {\n    return (ongoingRequests, port) => {\n        return (message, transferables = []) => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n                ongoingRequests.set(id, { reject, resolve });\n                port.postMessage({ id, ...message }, transferables);\n            });\n        };\n    };\n};\n//# sourceMappingURL=post-message-factory.js.map","export const validateState = (expectedStates, currentState) => {\n    if (!expectedStates.includes(currentState)) {\n        throw new Error(`Expected the state to be ${expectedStates\n            .map((expectedState) => `\"${expectedState}\"`)\n            .join(' or ')} but it was \"${currentState}\".`);\n    }\n};\n//# sourceMappingURL=validate-state.js.map","export const createExtendedExponentialRampToValueAutomationEvent = (value, endTime, insertTime) => {\n    return { endTime, insertTime, type: 'exponentialRampToValue', value };\n};\n//# sourceMappingURL=create-extended-exponential-ramp-to-value-automation-event.js.map","export const createExtendedLinearRampToValueAutomationEvent = (value, endTime, insertTime) => {\n    return { endTime, insertTime, type: 'linearRampToValue', value };\n};\n//# sourceMappingURL=create-extended-linear-ramp-to-value-automation-event.js.map","export const createSetValueAutomationEvent = (value, startTime) => {\n    return { startTime, type: 'setValue', value };\n};\n//# sourceMappingURL=create-set-value-automation-event.js.map","export const createSetValueCurveAutomationEvent = (values, startTime, duration) => {\n    return { duration, startTime, type: 'setValueCurve', values };\n};\n//# sourceMappingURL=create-set-value-curve-automation-event.js.map","export const getTargetValueAtTime = (time, valueAtStartTime, { startTime, target, timeConstant }) => {\n    return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n};\n//# sourceMappingURL=get-target-value-at-time.js.map","export const isExponentialRampToValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'exponentialRampToValue';\n};\n//# sourceMappingURL=exponential-ramp-to-value-automation-event.js.map","export const isLinearRampToValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'linearRampToValue';\n};\n//# sourceMappingURL=linear-ramp-to-value-automation-event.js.map","import { isExponentialRampToValueAutomationEvent } from './exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from './linear-ramp-to-value-automation-event';\nexport const isAnyRampToValueAutomationEvent = (automationEvent) => {\n    return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n};\n//# sourceMappingURL=any-ramp-to-value-automation-event.js.map","export const isSetValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setValue';\n};\n//# sourceMappingURL=set-value-automation-event.js.map","export const isSetValueCurveAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setValueCurve';\n};\n//# sourceMappingURL=set-value-curve-automation-event.js.map","import { getTargetValueAtTime } from '../functions/get-target-value-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport const getValueOfAutomationEventAtIndexAtTime = (automationEvents, index, time, defaultValue) => {\n    const automationEvent = automationEvents[index];\n    return automationEvent === undefined\n        ? defaultValue\n        : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent)\n            ? automationEvent.value\n            : isSetValueCurveAutomationEvent(automationEvent)\n                ? automationEvent.values[automationEvent.values.length - 1]\n                : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n};\n//# sourceMappingURL=get-value-of-automation-event-at-index-at-time.js.map","import { getValueOfAutomationEventAtIndexAtTime } from '../functions/get-value-of-automation-event-at-index-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport const getEndTimeAndValueOfPreviousAutomationEvent = (automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) => {\n    return currentAutomationEvent === undefined\n        ? [nextAutomationEvent.insertTime, defaultValue]\n        : isAnyRampToValueAutomationEvent(currentAutomationEvent)\n            ? [currentAutomationEvent.endTime, currentAutomationEvent.value]\n            : isSetValueAutomationEvent(currentAutomationEvent)\n                ? [currentAutomationEvent.startTime, currentAutomationEvent.value]\n                : isSetValueCurveAutomationEvent(currentAutomationEvent)\n                    ? [\n                        currentAutomationEvent.startTime + currentAutomationEvent.duration,\n                        currentAutomationEvent.values[currentAutomationEvent.values.length - 1]\n                    ]\n                    : [\n                        currentAutomationEvent.startTime,\n                        getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)\n                    ];\n};\n//# sourceMappingURL=get-end-time-and-value-of-previous-automation-event.js.map","export const isCancelAndHoldAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'cancelAndHold';\n};\n//# sourceMappingURL=cancel-and-hold-automation-event.js.map","export const isCancelScheduledValuesAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'cancelScheduledValues';\n};\n//# sourceMappingURL=cancel-scheduled-values-automation-event.js.map","import { isCancelAndHoldAutomationEvent } from '../guards/cancel-and-hold-automation-event';\nimport { isCancelScheduledValuesAutomationEvent } from '../guards/cancel-scheduled-values-automation-event';\nimport { isExponentialRampToValueAutomationEvent } from '../guards/exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from '../guards/linear-ramp-to-value-automation-event';\nexport const getEventTime = (automationEvent) => {\n    if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n    }\n    if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n    }\n    return automationEvent.startTime;\n};\n//# sourceMappingURL=get-event-time.js.map","export const getExponentialRampValueAtTime = (time, startTime, valueAtStartTime, { endTime, value }) => {\n    if (valueAtStartTime === value) {\n        return value;\n    }\n    if ((0 < valueAtStartTime && 0 < value) || (valueAtStartTime < 0 && value < 0)) {\n        return valueAtStartTime * (value / valueAtStartTime) ** ((time - startTime) / (endTime - startTime));\n    }\n    return 0;\n};\n//# sourceMappingURL=get-exponential-ramp-value-at-time.js.map","export const getLinearRampValueAtTime = (time, startTime, valueAtStartTime, { endTime, value }) => {\n    return valueAtStartTime + ((time - startTime) / (endTime - startTime)) * (value - valueAtStartTime);\n};\n//# sourceMappingURL=get-linear-ramp-value-at-time.js.map","import { interpolateValue } from './interpolate-value';\nexport const getValueCurveValueAtTime = (time, { duration, startTime, values }) => {\n    const theoreticIndex = ((time - startTime) / duration) * (values.length - 1);\n    return interpolateValue(values, theoreticIndex);\n};\n//# sourceMappingURL=get-value-curve-value-at-time.js.map","export const interpolateValue = (values, theoreticIndex) => {\n    const lowerIndex = Math.floor(theoreticIndex);\n    const upperIndex = Math.ceil(theoreticIndex);\n    if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n    }\n    return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n};\n//# sourceMappingURL=interpolate-value.js.map","export const isSetTargetAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setTarget';\n};\n//# sourceMappingURL=set-target-automation-event.js.map","import { createExtendedExponentialRampToValueAutomationEvent } from '../functions/create-extended-exponential-ramp-to-value-automation-event';\nimport { createExtendedLinearRampToValueAutomationEvent } from '../functions/create-extended-linear-ramp-to-value-automation-event';\nimport { createSetValueAutomationEvent } from '../functions/create-set-value-automation-event';\nimport { createSetValueCurveAutomationEvent } from '../functions/create-set-value-curve-automation-event';\nimport { getEndTimeAndValueOfPreviousAutomationEvent } from '../functions/get-end-time-and-value-of-previous-automation-event';\nimport { getEventTime } from '../functions/get-event-time';\nimport { getExponentialRampValueAtTime } from '../functions/get-exponential-ramp-value-at-time';\nimport { getLinearRampValueAtTime } from '../functions/get-linear-ramp-value-at-time';\nimport { getTargetValueAtTime } from '../functions/get-target-value-at-time';\nimport { getValueCurveValueAtTime } from '../functions/get-value-curve-value-at-time';\nimport { getValueOfAutomationEventAtIndexAtTime } from '../functions/get-value-of-automation-event-at-index-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isCancelAndHoldAutomationEvent } from '../guards/cancel-and-hold-automation-event';\nimport { isCancelScheduledValuesAutomationEvent } from '../guards/cancel-scheduled-values-automation-event';\nimport { isExponentialRampToValueAutomationEvent } from '../guards/exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from '../guards/linear-ramp-to-value-automation-event';\nimport { isSetTargetAutomationEvent } from '../guards/set-target-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport class AutomationEventList {\n    constructor(defaultValue) {\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n    }\n    [Symbol.iterator]() {\n        return this._automationEvents[Symbol.iterator]();\n    }\n    add(automationEvent) {\n        const eventTime = getEventTime(automationEvent);\n        if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            const index = this._automationEvents.findIndex((currentAutomationEvent) => {\n                if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                    return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n                }\n                return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n            const removedAutomationEvent = this._automationEvents[index];\n            if (index !== -1) {\n                this._automationEvents = this._automationEvents.slice(0, index);\n            }\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n                const lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n                if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                    if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                        throw new Error('The internal list is malformed.');\n                    }\n                    const startTime = lastAutomationEvent === undefined\n                        ? removedAutomationEvent.insertTime\n                        : isSetValueCurveAutomationEvent(lastAutomationEvent)\n                            ? lastAutomationEvent.startTime + lastAutomationEvent.duration\n                            : getEventTime(lastAutomationEvent);\n                    const startValue = lastAutomationEvent === undefined\n                        ? this._defaultValue\n                        : isSetValueCurveAutomationEvent(lastAutomationEvent)\n                            ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1]\n                            : lastAutomationEvent.value;\n                    const value = isExponentialRampToValueAutomationEvent(removedAutomationEvent)\n                        ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent)\n                        : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                    const truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent)\n                        ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime)\n                        : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n                    this._automationEvents.push(truncatedAutomationEvent);\n                }\n                if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                    this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n                }\n                if (lastAutomationEvent !== undefined &&\n                    isSetValueCurveAutomationEvent(lastAutomationEvent) &&\n                    lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                    const duration = eventTime - lastAutomationEvent.startTime;\n                    const ratio = (lastAutomationEvent.values.length - 1) / lastAutomationEvent.duration;\n                    const length = Math.max(2, 1 + Math.ceil(duration * ratio));\n                    const fraction = (duration / (length - 1)) * ratio;\n                    const values = lastAutomationEvent.values.slice(0, length);\n                    if (fraction < 1) {\n                        for (let i = 1; i < length; i += 1) {\n                            const factor = (fraction * i) % 1;\n                            values[i] = lastAutomationEvent.values[i - 1] * (1 - factor) + lastAutomationEvent.values[i] * factor;\n                        }\n                    }\n                    this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(values, lastAutomationEvent.startTime, duration);\n                }\n            }\n        }\n        else {\n            const index = this._automationEvents.findIndex((currentAutomationEvent) => getEventTime(currentAutomationEvent) > eventTime);\n            const previousAutomationEvent = index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[index - 1];\n            if (previousAutomationEvent !== undefined &&\n                isSetValueCurveAutomationEvent(previousAutomationEvent) &&\n                getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n                return false;\n            }\n            const persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent)\n                ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime)\n                : isLinearRampToValueAutomationEvent(automationEvent)\n                    ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime)\n                    : automationEvent;\n            if (index === -1) {\n                this._automationEvents.push(persistentAutomationEvent);\n            }\n            else {\n                if (isSetValueCurveAutomationEvent(automationEvent) &&\n                    eventTime + automationEvent.duration > getEventTime(this._automationEvents[index])) {\n                    return false;\n                }\n                this._automationEvents.splice(index, 0, persistentAutomationEvent);\n            }\n        }\n        return true;\n    }\n    flush(time) {\n        const index = this._automationEvents.findIndex((currentAutomationEvent) => getEventTime(currentAutomationEvent) > time);\n        if (index > 1) {\n            const remainingAutomationEvents = this._automationEvents.slice(index - 1);\n            const firstRemainingAutomationEvent = remainingAutomationEvents[0];\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n                remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n            this._automationEvents = remainingAutomationEvents;\n        }\n    }\n    getValue(time) {\n        if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n        }\n        const indexOfNextEvent = this._automationEvents.findIndex((automationEvent) => getEventTime(automationEvent) > time);\n        const nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n        const indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n        const currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n        if (currentAutomationEvent !== undefined &&\n            isSetTargetAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined ||\n                !isAnyRampToValueAutomationEvent(nextAutomationEvent) ||\n                nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n        }\n        if (currentAutomationEvent !== undefined &&\n            isSetValueAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n        }\n        if (currentAutomationEvent !== undefined &&\n            isSetValueCurveAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined ||\n                !isAnyRampToValueAutomationEvent(nextAutomationEvent) ||\n                currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n                return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n        }\n        if (currentAutomationEvent !== undefined &&\n            isAnyRampToValueAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n        }\n        if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            const [startTime, value] = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue);\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n        if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            const [startTime, value] = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue);\n            return getLinearRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n        return this._defaultValue;\n    }\n}\n//# sourceMappingURL=automation-event-list.js.map","export const createCancelAndHoldAutomationEvent = (cancelTime) => {\n    return { cancelTime, type: 'cancelAndHold' };\n};\n//# sourceMappingURL=create-cancel-and-hold-automation-event.js.map","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();\n//# sourceMappingURL=globals.js.map","const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=is-constructible.js.map","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nexport const splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=split-import-statements.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\nexport const createAddAudioWorkletModule = (cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window) => {\n    let index = 0;\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const nativeContext = getNativeContext(context);\n        // Bug #59: Safari does not implement the audioWorklet property.\n        const promise = nativeContext.audioWorklet === undefined\n            ? fetchSource(moduleURL)\n                .then(([source, absoluteUrl]) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * ${ importStatements };\n                 * ((a, b) => {\n                 *     (a[b] = a[b] || [ ]).push(\n                 *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n                 *             ${ sourceWithoutImportStatements }\n                 *         }\n                 *     );\n                 * })(window, '_AWGS');\n                 * ```\n                 */\n                // tslint:disable-next-line:max-line-length\n                const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n                // @todo Evaluating the given source code is a possible security problem.\n                return evaluateSource(wrappedSource);\n            })\n                .then(() => {\n                const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n                if (evaluateAudioWorkletGlobalScope === undefined) {\n                    // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                    throw new SyntaxError();\n                }\n                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n                }, undefined, (name, processorCtor) => {\n                    if (name.trim() === '') {\n                        throw createNotSupportedError();\n                    }\n                    const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n                    if (nodeNameToProcessorConstructorMap !== undefined) {\n                        if (nodeNameToProcessorConstructorMap.has(name)) {\n                            throw createNotSupportedError();\n                        }\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                    }\n                    else {\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                    }\n                }, nativeContext.sampleRate, undefined, undefined));\n            })\n            : Promise.all([\n                fetchSource(moduleURL),\n                Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))\n            ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n                const currentIndex = index + 1;\n                index = currentIndex;\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below.\n                 *\n                 * ```js\n                 * class extends AudioWorkletProcessor {\n                 *\n                 *     __buffers = new WeakSet();\n                 *\n                 *     constructor () {\n                 *         super();\n                 *\n                 *         this.port.postMessage = ((postMessage) => {\n                 *             return (message, transferables) => {\n                 *                 const filteredTransferables = (transferables)\n                 *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                 *                     : transferables;\n                 *\n                 *                 return postMessage.call(this.port, message, filteredTransferables);\n                 *              };\n                 *         })(this.port.postMessage);\n                 *     }\n                 * }\n                 * ```\n                 */\n                const patchedAudioWorkletProcessor = isSupportingPostMessage\n                    ? 'AudioWorkletProcessor'\n                    : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}';\n                /*\n                 * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                 *\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((AudioWorkletProcessor, registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })(\n                 *     ${ patchedAudioWorkletProcessor },\n                 *     (name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *         __collectBuffers = (array) => {\n                 *             array.forEach((element) => this.__buffers.add(element.buffer));\n                 *         };\n                 *\n                 *         process (inputs, outputs, parameters) {\n                 *             inputs.forEach(this.__collectBuffers);\n                 *             outputs.forEach(this.__collectBuffers);\n                 *             this.__collectBuffers(Object.values(parameters));\n                 *\n                 *             return super.process(\n                 *                 (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *                 outputs,\n                 *                 parameters\n                 *             );\n                 *         }\n                 *\n                 *     })\n                 * );\n                 *\n                 * registerProcessor(`__sac${currentIndex}`, class extends AudioWorkletProcessor{\n                 *\n                 *     process () {\n                 *         return false;\n                 *     }\n                 *\n                 * })`\n                 * ```\n                 */\n                const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                const bufferRegistration = isSupportingPostMessage\n                    ? ''\n                    : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                const wrappedSource = `${importStatements};((AudioWorkletProcessor,registerProcessor)=>{${sourceWithoutImportStatements}\n})(${patchedAudioWorkletProcessor},(n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${currentIndex}',class extends AudioWorkletProcessor{process(){return !1}})`;\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                return nativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => {\n                    if (isNativeOfflineAudioContext(nativeContext)) {\n                        return nativeContext;\n                    }\n                    // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n                    const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n                    return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(() => backupOfflineAudioContext);\n                })\n                    .then((nativeContextOrBackupOfflineAudioContext) => {\n                    if (nativeAudioWorkletNodeConstructor === null) {\n                        throw new SyntaxError();\n                    }\n                    try {\n                        // Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                        new nativeAudioWorkletNodeConstructor(nativeContextOrBackupOfflineAudioContext, `__sac${currentIndex}`); // tslint:disable-line:no-unused-expression\n                    }\n                    catch {\n                        throw new SyntaxError();\n                    }\n                })\n                    .finally(() => URL.revokeObjectURL(url));\n            });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const updatedResolvedRequestsOfContext = resolvedRequests.get(context);\n            if (updatedResolvedRequestsOfContext === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                updatedResolvedRequestsOfContext.add(moduleURL);\n            }\n        })\n            .finally(() => {\n            const updatedOngoingRequestsOfContext = ongoingRequests.get(context);\n            if (updatedOngoingRequestsOfContext !== undefined) {\n                updatedOngoingRequestsOfContext.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=add-audio-worklet-module.js.map","export const getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=get-value-for-key.js.map","export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=pick-element-from-set.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-node.js.map","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n//# sourceMappingURL=get-event-listeners-of-audio-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=set-internal-state-to-active.js.map","export const isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=audio-worklet-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = (audioNode) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n//# sourceMappingURL=set-internal-state-to-passive.js.map","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=set-internal-state-to-passive-when-necessary.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n};\nexport const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class AnalyserNode extends audionNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null));\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n        get fftSize() {\n            return this._nativeAnalyserNode.fftSize;\n        }\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n        get frequencyBinCount() {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n        get maxDecibels() {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n            this._nativeAnalyserNode.maxDecibels = value;\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get minDecibels() {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n            this._nativeAnalyserNode.minDecibels = value;\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get smoothingTimeConstant() {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n        getByteFrequencyData(array) {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n        getByteTimeDomainData(array) {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n        getFloatFrequencyData(array) {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n        getFloatTimeDomainData(array) {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n//# sourceMappingURL=analyser-node-constructor.js.map","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=is-owned-by-context.js.map","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map","export const createIndexSizeError = () => new DOMException('', 'IndexSizeError');\n//# sourceMappingURL=index-size-error.js.map","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=wrap-audio-buffer-get-channel-data-method.js.map","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-constructor.js.map","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=constants.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n//# sourceMappingURL=is-active-audio-node.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class AudioBufferSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline ? createAudioBufferSourceNodeRenderer() : null));\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n            // Bug #72: Only Chrome & Edge do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-constructor.js.map","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n//# sourceMappingURL=get-audio-node-connections.js.map","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n//# sourceMappingURL=get-audio-param-connections.js.map","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\nexport const deactivateActiveAudioNodeInputConnections = (audioNode, trace) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n    activeInputs.forEach((connections) => connections.forEach(([source]) => {\n        if (!trace.includes(audioNode)) {\n            deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n        }\n    }));\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n            // Bug #149: Safari does not yet support the detune AudioParam.\n            audioNode.playbackRate\n        ]\n        : isAudioWorkletNode(audioNode)\n            ? Array.from(audioNode.parameters.values())\n            : isBiquadFilterNode(audioNode)\n                ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n                : isConstantSourceNode(audioNode)\n                    ? [audioNode.offset]\n                    : isGainNode(audioNode)\n                        ? [audioNode.gain]\n                        : isOscillatorNode(audioNode)\n                            ? [audioNode.detune, audioNode.frequency]\n                            : isStereoPannerNode(audioNode)\n                                ? [audioNode.pan]\n                                : [];\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=deactivate-active-audio-node-input-connections.js.map","export const isAudioBufferSourceNode = (audioNode) => {\n    return 'playbackRate' in audioNode;\n};\n//# sourceMappingURL=audio-buffer-source-node.js.map","export const isBiquadFilterNode = (audioNode) => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n//# sourceMappingURL=biquad-filter-node.js.map","export const isConstantSourceNode = (audioNode) => {\n    return 'offset' in audioNode;\n};\n//# sourceMappingURL=constant-source-node.js.map","export const isGainNode = (audioNode) => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n//# sourceMappingURL=gain-node.js.map","export const isOscillatorNode = (audioNode) => {\n    return 'detune' in audioNode && 'frequency' in audioNode;\n};\n//# sourceMappingURL=oscillator-node.js.map","export const isStereoPannerNode = (audioNode) => {\n    return 'pan' in audioNode;\n};\n//# sourceMappingURL=stereo-panner-node.js.map","import { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\nexport const deactivateAudioGraph = (context) => {\n    deactivateActiveAudioNodeInputConnections(context.destination, []);\n};\n//# sourceMappingURL=deactivate-audio-graph.js.map","export const isValidLatencyHint = (latencyHint) => {\n    return (latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback')));\n};\n//# sourceMappingURL=is-valid-latency-hint.js.map","export const isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=audio-node.js.map","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = (outputConnection) => {\n    return isAudioNode(outputConnection[0]);\n};\n//# sourceMappingURL=audio-node-output-connection.js.map","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=insert-element-in-set.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-param.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);\n    }\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-param.js.map","export const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n//# sourceMappingURL=native-audio-node-faker.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=connect-native-audio-node-to-native-audio-node.js.map","export const deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\n//# sourceMappingURL=delete-active-input-connection.js.map","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n//# sourceMappingURL=delete-event-listeners-of-audio-node.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-param.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=disconnect-native-audio-node-from-native-audio-node.js.map","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n//# sourceMappingURL=get-native-audio-node.js.map","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n//# sourceMappingURL=get-native-audio-param.js.map","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n//# sourceMappingURL=is-part-of-a-cycle.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n//# sourceMappingURL=is-passive-audio-node.js.map","export const testAudioNodeDisconnectMethodSupport = (nativeAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return new Promise((resolve) => {\n        /*\n         * This bug existed in Safari up until v14.0.2. Since AudioWorklets were not supported in Safari until v14.1 the presence of the\n         * constructor for an AudioWorkletNode can be used here to skip the test.\n         */\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            resolve(true);\n        }\n        else {\n            const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1); // tslint:disable-line deprecation\n            const dummy = nativeAudioContext.createGain();\n            // Bug #95: Safari does not play one sample buffers.\n            const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n            const channelData = ones.getChannelData(0);\n            channelData[0] = 1;\n            channelData[1] = 1;\n            const source = nativeAudioContext.createBufferSource();\n            source.buffer = ones;\n            source.loop = true;\n            source.connect(analyzer).connect(nativeAudioContext.destination);\n            source.connect(dummy);\n            source.disconnect(dummy);\n            // tslint:disable-next-line:deprecation\n            analyzer.onaudioprocess = (event) => {\n                const chnnlDt = event.inputBuffer.getChannelData(0); // tslint:disable-line deprecation\n                if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                    resolve(true);\n                }\n                else {\n                    resolve(false);\n                }\n                source.stop();\n                analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n                source.disconnect(analyzer);\n                analyzer.disconnect(nativeAudioContext.destination);\n            };\n            source.start();\n        }\n    });\n};\n//# sourceMappingURL=test-audio-node-disconnect-method-support.js.map","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=visit-each-audio-node-once.js.map","export const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=native-audio-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        // tslint:disable-next-line:invalid-void no-inferrable-types\n        return (destination, output = 0, input = 0) => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === undefined));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=wrap-audio-node-disconnect-method.js.map","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, isOffline, destination, output, input) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, isOffline, destination, output) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source, isOffline) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        destinations.push(outputConnection[0]);\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n    return destinations;\n};\nconst deleteConnectionAtOutput = (source, isOffline, output) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n    return destinations;\n};\nconst deleteConnectionToDestination = (source, isOffline, destination, output, input) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => outputConnection[0] === destination &&\n        (output === undefined || outputConnection[1] === output) &&\n        (input === undefined || outputConnection[2] === input))\n        .map((outputConnection) => {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return outputConnection[0];\n    });\n};\nexport const createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return class AudioNode extends eventTargetConstructor {\n        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = getNativeContext(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext, nativeAudioWorkletNodeConstructor);\n                    })) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        // tslint:disable-next-line:invalid-void\n        connect(destination, output = 0, input = 0) {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    const isPassive = isPassiveAudioNode(this);\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err;\n                }\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], destination);\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n                return destination;\n            }\n            const nativeAudioParam = getNativeAudioParam(destination);\n            /*\n             * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.\n             */\n            if (nativeAudioParam.name === 'playbackRate' && nativeAudioParam.maxValue === 1024) {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Safari doesn't throw an InvalidAccessError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            let destinations;\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-node-constructor.js.map","import { pickElementFromSet } from './pick-element-from-set';\nexport const deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return pickElementFromSet(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-param.js.map","export class ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=read-only-map.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n};\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener) => {\n    return class AudioWorkletNode extends audioNodeConstructor {\n        constructor(context, name, options) {\n            var _a;\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n            // Bug #191: Safari doesn't throw an error if the options aren't clonable.\n            testAudioWorkletNodeOptionsClonability(mergedOptions);\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name);\n            // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== 'closed'\n                ? nativeContext\n                : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null));\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, this);\n            }\n            const { activeInputs } = getAudioNodeConnections(this);\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=audio-worklet-node-constructor.js.map","export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=copy-from-channel.js.map","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=copy-to-channel.js.map","export const createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = typeof y === 'number' ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=create-nested-arrays.js.map","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = numberOfOutputChannels === 0\n        ? null\n        : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', {\n                colno: error.colno,\n                filename: error.filename,\n                lineno: error.lineno,\n                message: error.message\n            }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let processedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n            // Bug #61: Only Chrome, Edge & Firefox have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: outputChannelCount[i]\n                    }));\n                }\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, \n                        // Ceil the length to the next full render quantum.\n                        // Bug #17: Safari does not yet expose the length.\n                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                        const gainNodes = [];\n                        const inputChannelSplitterNodes = [];\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: options.channelCountMode,\n                                channelInterpretation: options.channelInterpretation,\n                                gain: 1\n                            }));\n                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                numberOfOutputs: options.channelCount\n                            }));\n                        }\n                        const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: audioParam.value\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset);\n                            return constantSourceNode;\n                        }));\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                        await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode)));\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n                    processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime);\n                }\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n                return outputGainNode;\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-worklet-node-renderer-factory.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-audio-worklet-processor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class BiquadFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = (isOffline ? createBiquadFilterNodeRenderer() : null);\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n            // Bug #80: Safari does not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n            // Bug #77: Firefox & Safari do not export the correct value for minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get gain() {\n            return this._gain;\n        }\n        get Q() {\n            return this._Q;\n        }\n        get type() {\n            return this._nativeBiquadFilterNode.type;\n        }\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            // Bug #189: Safari does throw an InvalidStateError.\n            try {\n                this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            }\n            catch (err) {\n                if (err.code === 11) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            // Bug #68: Safari does not throw an error if the parameters differ in their length.\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n//# sourceMappingURL=biquad-filter-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelMergerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null));\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-merger-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n};\nexport const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions) => {\n    return class ChannelSplitterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizeChannelSplitterOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null));\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-splitter-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class ConstantSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = ((isOffline ? createConstantSourceNodeRendererFactory() : null));\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue\n             * for GainNodes.\n             */\n            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._onended = null;\n        }\n        get offset() {\n            return this._offset;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeConstantSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        start(when = 0) {\n            this._nativeConstantSourceNode.start(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeConstantSourceNode.stop(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=constant-source-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class ConvolverNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = (isOffline ? createConvolverNodeRenderer() : null);\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n            if (mergedOptions.buffer !== null) {\n                setAudioNodeTailTime(this, mergedOptions.buffer.duration);\n            }\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeConvolverNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n                this._isBufferNullified = true;\n                setAudioNodeTailTime(this, 0);\n            }\n            else {\n                this._isBufferNullified = false;\n                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n            }\n        }\n        get normalize() {\n            return this._nativeConvolverNode.normalize;\n        }\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n//# sourceMappingURL=convolver-node-constructor.js.map","export const detachArrayBuffer = (arrayBuffer) => {\n    const { port1, port2 } = new MessageChannel();\n    return new Promise((resolve) => {\n        const closeAndResolve = () => {\n            port2.onmessage = null;\n            port1.close();\n            port2.close();\n            resolve();\n        };\n        port2.onmessage = () => closeAndResolve();\n        try {\n            port1.postMessage(arrayBuffer, [arrayBuffer]);\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            closeAndResolve();\n        }\n    });\n};\n//# sourceMappingURL=detach-array-buffer.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n};\nexport const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DelayNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = (isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);\n            setAudioNodeTailTime(this, mergedOptions.maxDelayTime);\n        }\n        get delayTime() {\n            return this._delayTime;\n        }\n    };\n};\n//# sourceMappingURL=delay-node-constructor.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=disconnect-multiple-outputs.js.map","const DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n};\nexport const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DynamicsCompressorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = (isOffline ? createDynamicsCompressorNodeRenderer() : null);\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);\n            setAudioNodeTailTime(this, 0.006);\n        }\n        get attack() {\n            return this._attack;\n        }\n        // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.\n        get channelCount() {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n            this._nativeDynamicsCompressorNode.channelCount = value;\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        /*\n         * Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode() {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        get knee() {\n            return this._knee;\n        }\n        get ratio() {\n            return this._ratio;\n        }\n        get reduction() {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {\n                return this._nativeDynamicsCompressorNode.reduction.value;\n            }\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n        get release() {\n            return this._release;\n        }\n        get threshold() {\n            return this._threshold;\n        }\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class GainNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = (isOffline ? createGainNodeRenderer() : null);\n            super(context, false, nativeGainNode, gainNodeRenderer);\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get gain() {\n            return this._gain;\n        }\n    };\n};\n//# sourceMappingURL=gain-node-constructor.js.map","export const createInvalidStateError = () => new DOMException('', 'InvalidStateError');\n//# sourceMappingURL=invalid-state-error.js.map","export const createInvalidAccessError = () => new DOMException('', 'InvalidAccessError');\n//# sourceMappingURL=invalid-access-error.js.map","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n};\nexport const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class IIRFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n            const iirFilterNodeRenderer = ((isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null));\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n//# sourceMappingURL=iir-filter-node-constructor.js.map","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n    const inputLength = input.length;\n    let i = bufferIndex;\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n        output[j] = y;\n    }\n    return i;\n};\n//# sourceMappingURL=filter-buffer.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n            super(context, false, nativeMediaStreamAudioDestinationNode, null);\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n        get stream() {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-destination-node-constructor.js.map","export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=test-promise-support.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createMinimalOfflineAudioContextConstructor = (cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering) => {\n    return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options) {\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n                deactivateAudioGraph(this);\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=minimal-offline-audio-context-constructor.js.map","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-option.js.map","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=assign-native-audio-node-options.js.map","export const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n//# sourceMappingURL=test-analyser-node-get-float-time-domain-data-method-support.js.map","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-audio-param-value.js.map","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map","export const computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=compute-buffer-size.js.map","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=create-audio-worklet-processor-promise.js.map","export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=clone-audio-worklet-node-options.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNode = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n    return nativeBiquadFilterNode;\n};\n//# sourceMappingURL=native-biquad-filter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNode = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge & Firefox partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n    return nativeChannelSplitterNode;\n};\n//# sourceMappingURL=native-channel-splitter-node.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=wrap-channel-splitter-node.js.map","export const interceptConnections = (original, interceptor) => {\n    original.connect = interceptor.connect.bind(interceptor);\n    original.disconnect = interceptor.disconnect.bind(interceptor);\n    return original;\n};\n//# sourceMappingURL=intercept-connections.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDelayNode = (nativeContext, options) => {\n    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n    return nativeDelayNode;\n};\n//# sourceMappingURL=native-delay-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNode = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n    return nativeGainNode;\n};\n//# sourceMappingURL=native-gain-node.js.map","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nfunction divide(a, b) {\n    const denominator = b[0] * b[0] + b[1] * b[1];\n    return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\nfunction multiply(a, b) {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\nfunction evaluatePolynomial(coefficient, z) {\n    let result = [0, 0];\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n        result[0] += coefficient[i];\n    }\n    return result;\n}\nexport const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n        const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n        const feedbackLength = convertedFeedback.length;\n        const feedforwardLength = convertedFeedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n        if (feedbackLength === 0 || feedbackLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedforwardLength === 0 || feedforwardLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (convertedFeedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                convertedFeedforward[i] /= convertedFeedback[0];\n            }\n            for (let i = 1; i < feedbackLength; i += 1) {\n                convertedFeedback[i] /= convertedFeedback[0];\n            }\n        }\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n        const bufferLength = 32;\n        const bufferIndexes = [];\n        const xBuffers = [];\n        const yBuffers = [];\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = (event) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n            const numberOfChannels = inputBuffer.numberOfChannels;\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n                bufferIndexes[i] = filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n            }\n        };\n        const nyquist = nativeContext.sampleRate / 2;\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs() {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args) {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                    throw createInvalidAccessError();\n                }\n                const length = frequencyHz.length;\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(convertedFeedforward, z);\n                    const denominator = evaluatePolynomial(convertedFeedback, z);\n                    const response = divide(numerator, denominator);\n                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-faker-factory.js.map","export const createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels); // tslint:disable-line deprecation\n};\n//# sourceMappingURL=native-script-processor-node.js.map","export const createNotSupportedError = () => new DOMException('', 'NotSupportedError');\n//# sourceMappingURL=not-supported-error.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor {\n        constructor(a, b, c) {\n            let options;\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            }\n            else if (typeof a === 'object') {\n                options = a;\n            }\n            else {\n                throw new Error('The given parameters are not valid.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n                deactivateAudioGraph(this);\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=offline-audio-context-constructor.js.map","import { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 440,\n    periodicWave: undefined,\n    type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class OscillatorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = (isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Safari does not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=oscillator-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class PannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = (isOffline ? createPannerNodeRenderer() : null);\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get coneInnerAngle() {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n        get coneOuterAngle() {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n        get coneOuterGain() {\n            return this._nativePannerNode.coneOuterGain;\n        }\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n        get distanceModel() {\n            return this._nativePannerNode.distanceModel;\n        }\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n        get maxDistance() {\n            return this._nativePannerNode.maxDistance;\n        }\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n        get orientationX() {\n            return this._orientationX;\n        }\n        get orientationY() {\n            return this._orientationY;\n        }\n        get orientationZ() {\n            return this._orientationZ;\n        }\n        get panningModel() {\n            return this._nativePannerNode.panningModel;\n        }\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n        get positionX() {\n            return this._positionX;\n        }\n        get positionY() {\n            return this._positionY;\n        }\n        get positionZ() {\n            return this._positionZ;\n        }\n        get refDistance() {\n            return this._nativePannerNode.refDistance;\n        }\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n        get rolloffFactor() {\n            return this._nativePannerNode.rolloffFactor;\n        }\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n//# sourceMappingURL=panner-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=periodic-wave-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class StereoPannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = (isOffline ? createStereoPannerNodeRenderer() : null);\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n        get pan() {\n            return this._pan;\n        }\n    };\n};\n//# sourceMappingURL=stereo-panner-node-constructor.js.map","export const createUnknownError = () => new DOMException('', 'UnknownError');\n//# sourceMappingURL=unknown-error.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n};\nexport const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class WaveShaperNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = (isOffline ? createWaveShaperNodeRenderer() : null);\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get curve() {\n            if (this._isCurveNullified) {\n                return null;\n            }\n            return this._nativeWaveShaperNode.curve;\n        }\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            }\n            else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n        get oversample() {\n            return this._nativeWaveShaperNode.oversample;\n        }\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n//# sourceMappingURL=wave-shaper-node-constructor.js.map","export const getFirstSample = (audioBuffer, buffer, channelNumber) => {\n    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n    if (audioBuffer.copyFromChannel === undefined) {\n        return audioBuffer.getChannelData(channelNumber)[0];\n    }\n    audioBuffer.copyFromChannel(buffer, channelNumber);\n    return buffer[0];\n};\n//# sourceMappingURL=get-first-sample.js.map","export const isDCCurve = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n    const length = curve.length;\n    if (length % 2 !== 0) {\n        return curve[Math.floor(length / 2)] !== 0;\n    }\n    return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};\n//# sourceMappingURL=is-dc-curve.js.map","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n    let prototype = object;\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n//# sourceMappingURL=overwrite-accessors.js.map","export const setValueAtTimeUntilPossible = (audioParam, value, startTime) => {\n    try {\n        audioParam.setValueAtTime(value, startTime);\n    }\n    catch (err) {\n        if (err.code !== 9) {\n            throw err;\n        }\n        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n    }\n};\n//# sourceMappingURL=set-value-at-time-until-possible.js.map","export const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map","export const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n    try {\n        nativeAudioBufferSourceNode.stop();\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map","export const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map","import { interceptConnections } from './intercept-connections';\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext) => {\n    const nativeGainNode = nativeContext.createGain();\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                }\n                catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            }\n            else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getFirstSample } from './helpers/get-first-sample';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { setValueAtTimeUntilPossible } from './helpers/set-value-at-time-until-possible';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testAudioWorkletNodeOptionsClonability } from './helpers/test-audio-worklet-node-options-clonability';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode), cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet(), sanitizePeriodicWaveOptions);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule = isSecureContext\n    ? createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, new WeakMap(), new WeakMap(), createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), \n    // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n    window)\n    : undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener)\n    : undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor), testDomExceptionConstructorSupport, createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);\n//# sourceMappingURL=module.js.map","export const createAddActiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n    };\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-node.js.map","export const createAddPassiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        }\n        else {\n            insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n        }\n    };\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-node.js.map","export const createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n    };\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-node.js.map","export const createGetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode) => { var _a; return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== void 0 ? _a : 0; };\n};\n//# sourceMappingURL=get-audio-node-tail-time.js.map","export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=cache-test-result.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = nativeContext.createAnalyser();\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n        return nativeAnalyserNode;\n    };\n};\n//# sourceMappingURL=native-analyser-node-factory.js.map","export const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n        return array;\n    };\n};\n//# sourceMappingURL=wrap-analyser-node-get-float-time-domain-data-method.js.map","export const createGetAudioNodeRenderer = (getAudioNodeConnections) => {\n    return (audioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n        return audioNodeConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-node-renderer.js.map","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        await Promise.all(audioNodeConnections.activeInputs\n            .map((connections, input) => Array.from(connections).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            const destination = audioNode.context.destination;\n            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n            }\n        }))\n            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-node.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAnalyserNodes = new WeakMap();\n        const createAnalyserNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAnalyserNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode);\n            return nativeAnalyserNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n                return createAnalyserNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=analyser-node-renderer-factory.js.map","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return (nativeContext);\n    };\n};\n//# sourceMappingURL=get-native-context.js.map","export const createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=native-offline-audio-context-constructor.js.map","export const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-offline-audio-context.js.map","export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=native-audio-context-constructor.js.map","export const createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-audio-context.js.map","export const createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n//# sourceMappingURL=is-native-audio-node.js.map","export const createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n//# sourceMappingURL=is-native-audio-param.js.map","export const createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=native-audio-worklet-node-constructor.js.map","export const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n    return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n        const activeInputs = [];\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set());\n        }\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n//# sourceMappingURL=add-audio-node-connections.js.map","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nexport const createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) => {\n    const tailTimeTimeoutIds = new WeakMap();\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n        const eventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            }\n            else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                const tailTime = getAudioNodeTailTime(destination);\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                }\n                else {\n                    const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n                    if (tailTimeTimeoutId !== undefined) {\n                        clearTimeout(tailTimeTimeoutId);\n                    }\n                    tailTimeTimeoutIds.set(destination, setTimeout(() => {\n                        if (isActiveAudioNode(destination)) {\n                            setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                        }\n                    }, tailTime * 1000));\n                }\n            }\n        };\n        if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n            eventListeners.add(eventListener);\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            }\n            else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=add-connection-to-audio-node.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=increment-cycle-counter-factory.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=decrement-cycle-counter.js.map","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=detect-cycles.js.map","export const isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=delay-node.js.map","export const createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=native-audio-buffer-constructor.js.map","export const createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=convert-number-to-unsigned-long.js.map","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods.js.map","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map","// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-constructor-support.js.map","export const createAddSilentConnection = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n//# sourceMappingURL=add-silent-connection.js.map","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-param.js.map","export const createConnectAudioParam = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=connect-audio-param.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=native-audio-buffer-source-node-factory.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map","export const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.start();\n    }\n    catch {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map","export const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-offset-clamping-support.js.map","export const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.stop();\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping.js.map","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {\n            const value = get.call(nativeAudioBufferSourceNode);\n            return value === nullifiedBuffer ? null : value;\n        }, (set) => (value) => {\n            return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n        });\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n        audioParamRenderer.replay(nativeAudioParam);\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=render-automation.js.map","export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-param-renderer.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-renderer-factory.js.map","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        // Bug #196 Only Safari sets the defaultValue to the initial value.\n        const defaultValue = nativeAudioParam.value;\n        const automationEventList = new AutomationEventList(defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return defaultValue;\n            },\n            get maxValue() {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array.from(automationEventList).pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n                const currentTime = audioNode.context.currentTime;\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(currentTime);\n                }\n                // Bug #194: Firefox does not implicitly call setValueAtTime() if there is no previous event.\n                if (Array.from(automationEventList).length === 0) {\n                    automationEventList.add(createSetValueAutomationEvent(defaultValue, currentTime));\n                    nativeAudioParam.setValueAtTime(defaultValue, currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                const currentTime = audioNode.context.currentTime;\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(currentTime);\n                }\n                // Bug #195: Firefox does not implicitly call setValueAtTime() if there is no previous event.\n                if (Array.from(automationEventList).length === 0) {\n                    automationEventList.add(createSetValueAutomationEvent(defaultValue, currentTime));\n                    nativeAudioParam.setValueAtTime(defaultValue, currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n        addAudioParamConnections(audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=audio-param-factory.js.map","export const createAddAudioParamConnections = (audioParamConnectionsStore) => {\n    return (audioParam, audioParamRenderer) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n//# sourceMappingURL=add-audio-param-connections.js.map","export const createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-param-renderer.js.map","export const createCancelScheduledValuesAutomationEvent = (cancelTime) => {\n    return { cancelTime, type: 'cancelScheduledValues' };\n};\n//# sourceMappingURL=create-cancel-scheduled-values-automation-event.js.map","export const createExponentialRampToValueAutomationEvent = (value, endTime) => {\n    return { endTime, type: 'exponentialRampToValue', value };\n};\n//# sourceMappingURL=create-exponential-ramp-to-value-automation-event.js.map","export const createLinearRampToValueAutomationEvent = (value, endTime) => {\n    return { endTime, type: 'linearRampToValue', value };\n};\n//# sourceMappingURL=create-linear-ramp-to-value-automation-event.js.map","export const createSetTargetAutomationEvent = (target, startTime, timeConstant) => {\n    return { startTime, target, timeConstant, type: 'setTarget' };\n};\n//# sourceMappingURL=create-set-target-automation-event.js.map","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null));\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-constructor.js.map","export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    const renderedNativeAudioDestinationNodes = new WeakMap();\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext) {\n            const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n            if (renderedNativeAudioDestinationNode !== undefined) {\n                return Promise.resolve(renderedNativeAudioDestinationNode);\n            }\n            return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-renderer-factory.js.map","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            }\n            catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            try {\n                nativeAudioDestinationNode.channelCount = value;\n            }\n            catch (err) {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                if (value > nativeAudioDestinationNode.maxChannelCount) {\n                    throw err;\n                }\n            }\n        });\n        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelCountMode = value;\n        });\n        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelInterpretation = value;\n        });\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n        return gainNode;\n    };\n};\n//# sourceMappingURL=native-audio-destination-node.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeBiquadFilterNodes = new WeakMap();\n        const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeBiquadFilterNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode);\n            return nativeBiquadFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=biquad-filter-node-renderer-factory.js.map","export const createSetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode, tailTime) => audioNodeTailTimeStore.set(audioNode, tailTime);\n};\n//# sourceMappingURL=set-audio-node-tail-time.js.map","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set();\n        nativeAudioNode.connect = ((connect) => {\n            // tslint:disable-next-line:invalid-void no-inferrable-types\n            return (destination, output = 0, input = 0) => {\n                const wasDisconnected = connections.size === 0;\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    connect.call(nativeAudioNode, destination, output, input);\n                    insertElementInSet(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n                    return destination;\n                }\n                connect.call(nativeAudioNode, destination, output);\n                insertElementInSet(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n                return;\n            };\n        })(nativeAudioNode.connect);\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput, output, input) => {\n                const wasConnected = connections.size > 0;\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n                    connections.clear();\n                }\n                else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    disconnect.call(nativeAudioNode, destinationOrOutput);\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n                    }\n                    else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output);\n                    }\n                    for (const connection of connections) {\n                        if (connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                const isDisconnected = connections.size === 0;\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n        return nativeAudioNode;\n    };\n};\n//# sourceMappingURL=monitor-connections.js.map","export const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=wrap-channel-merger-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=native-channel-merger-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-merger-node-renderer-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-splitter-node-renderer-factory.js.map","export const sanitizeChannelSplitterOptions = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\n//# sourceMappingURL=sanitize-channel-splitter-options.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return [];\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-constant-source-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=native-constant-source-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConstantSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConstantSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);\n            return nativeConstantSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=constant-source-node-renderer-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeConvolverNodeFactory = (createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = nativeContext.createConvolver();\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n        // Bug #113: Safari does allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCount', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value > 2) {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        // Bug #114: Safari allows to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCountMode', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value === 'max') {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        return nativeConvolverNode;\n    };\n};\n//# sourceMappingURL=native-convolver-node-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConvolverNodes = new WeakMap();\n        const createConvolverNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConvolverNode = getNativeAudioNode(proxy);\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode);\n            }\n            return nativeConvolverNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n                return createConvolverNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=convolver-node-renderer-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return (maxDelayTime) => {\n        const renderedNativeDelayNodes = new WeakMap();\n        const createDelayNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeDelayNode = getNativeAudioNode(proxy);\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode);\n            return nativeDelayNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n                return createDelayNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=delay-node-renderer-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n        // Bug #108: Safari allows a channelCount of three and above.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n        return nativeDynamicsCompressorNode;\n    };\n};\n//# sourceMappingURL=native-dynamics-compressor-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap();\n        const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            return nativeDynamicsCompressorNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-renderer-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeGainNodes = new WeakMap();\n        const createGainNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeGainNode = getNativeAudioNode(proxy);\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode);\n            return nativeGainNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n                return createGainNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=gain-node-renderer-factory.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=render-native-offline-audio-context.js.map","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=test-offline-audio-context-current-time-support.js.map","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n    const feedbackLength = convertedFeedback.length;\n    const feedforwardLength = convertedFeedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n    if (convertedFeedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            convertedFeedforward[i] /= convertedFeedback[0];\n        }\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            convertedFeedback[i] /= convertedFeedback[0];\n        }\n    }\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n        filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n    }\n    return filteredBuffer;\n};\nexport const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (feedback, feedforward) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let filteredBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode(proxy);\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n            }\n            else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n                nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(feedforward, feedback);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    proxy.context.destination.channelCount, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination);\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n                const filteredBuffer = await filteredBufferPromise;\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n                return nativeAudioBufferSourceNode;\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode);\n            return nativeIIRFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=iir-filter-node-renderer-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n        const nativeIIRFilterNode = nativeContext.createIIRFilter(options.feedforward, options.feedback);\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n        return nativeIIRFilterNode;\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-factory.js.map","import { createInvalidAccessError } from '../factories/invalid-access-error';\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz, magResponse, phaseResponse) => {\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n//# sourceMappingURL=wrap-iir-filter-node-get-frequency-response-method.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome & Edge support the new interface already.\n        const createFakeAudioParams = () => {\n            const buffer = new Float32Array(1);\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            let isScriptProcessorNodeCreated = false;\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            const createScriptProcessorNode = () => {\n                if (isScriptProcessorNodeCreated) {\n                    return;\n                }\n                isScriptProcessorNodeCreated = true;\n                const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n                // tslint:disable-next-line:deprecation\n                scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                    const orientation = [\n                        getFirstSample(inputBuffer, buffer, 0),\n                        getFirstSample(inputBuffer, buffer, 1),\n                        getFirstSample(inputBuffer, buffer, 2),\n                        getFirstSample(inputBuffer, buffer, 3),\n                        getFirstSample(inputBuffer, buffer, 4),\n                        getFirstSample(inputBuffer, buffer, 5)\n                    ];\n                    if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                        nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                        lastOrientation = orientation;\n                    }\n                    const positon = [\n                        getFirstSample(inputBuffer, buffer, 6),\n                        getFirstSample(inputBuffer, buffer, 7),\n                        getFirstSample(inputBuffer, buffer, 8)\n                    ];\n                    if (positon.some((value, index) => value !== lastPosition[index])) {\n                        nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                        lastPosition = positon;\n                    }\n                };\n                channelMergerNode.connect(scriptProcessorNode);\n            };\n            const createSetOrientation = (index) => (value) => {\n                if (value !== lastOrientation[index]) {\n                    lastOrientation[index] = value;\n                    nativeListener.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n                }\n            };\n            const createSetPosition = (index) => (value) => {\n                if (value !== lastPosition[index]) {\n                    lastPosition[index] = value;\n                    nativeListener.setPosition(...lastPosition); // tslint:disable-line:deprecation\n                }\n            };\n            const createFakeAudioParam = (input, initialValue, setValue) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: initialValue\n                });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return initialValue;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                const audioParam = createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n                overwriteAccessors(audioParam, 'value', (get) => () => get.call(audioParam), (set) => (value) => {\n                    try {\n                        set.call(audioParam, value);\n                    }\n                    catch (err) {\n                        if (err.code !== 9) {\n                            throw err;\n                        }\n                    }\n                    createScriptProcessorNode();\n                    if (isOffline) {\n                        // Bug #117: Using setOrientation() and setPosition() doesn't work with an OfflineAudioContext.\n                        setValue(value);\n                    }\n                });\n                audioParam.cancelAndHoldAtTime = ((cancelAndHoldAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelAndHoldAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelAndHoldAtTime);\n                audioParam.cancelScheduledValues = ((cancelScheduledValues) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelScheduledValues.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelScheduledValues);\n                audioParam.exponentialRampToValueAtTime = ((exponentialRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = exponentialRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.exponentialRampToValueAtTime);\n                audioParam.linearRampToValueAtTime = ((linearRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = linearRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.linearRampToValueAtTime);\n                audioParam.setTargetAtTime = ((setTargetAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setTargetAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setTargetAtTime);\n                audioParam.setValueAtTime = ((setValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueAtTime);\n                audioParam.setValueCurveAtTime = ((setValueCurveAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueCurveAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueCurveAtTime);\n                return audioParam;\n            };\n            return {\n                forwardX: createFakeAudioParam(0, 0, createSetOrientation(0)),\n                forwardY: createFakeAudioParam(1, 0, createSetOrientation(1)),\n                forwardZ: createFakeAudioParam(2, -1, createSetOrientation(2)),\n                positionX: createFakeAudioParam(6, 0, createSetPosition(0)),\n                positionY: createFakeAudioParam(7, 0, createSetPosition(1)),\n                positionZ: createFakeAudioParam(8, 0, createSetPosition(2)),\n                upX: createFakeAudioParam(3, 0, createSetOrientation(3)),\n                upY: createFakeAudioParam(4, 1, createSetOrientation(4)),\n                upZ: createFakeAudioParam(5, 0, createSetOrientation(5))\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-listener-factory.js.map","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=minimal-base-audio-context-constructor.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = nativeContext.createOscillator();\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        }\n        else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n        // Bug #44: Only Chrome & Edge throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n        addSilentConnection(nativeContext, nativeOscillatorNode);\n        return nativeOscillatorNode;\n    };\n};\n//# sourceMappingURL=native-oscillator-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeOscillatorNodes = new WeakMap();\n        let periodicWave = null;\n        let start = null;\n        let stop = null;\n        const createOscillatorNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeOscillatorNode = getNativeAudioNode(proxy);\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: periodicWave === null ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode);\n            return nativeOscillatorNode;\n        };\n        return {\n            set periodicWave(value) {\n                periodicWave = value;\n            },\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n                return createOscillatorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=oscillator-node-renderer-factory.js.map","export const createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n//# sourceMappingURL=connected-native-audio-buffer-source-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = nativeContext.createWaveShaper();\n        const positiveWaveShaperNode = nativeContext.createWaveShaper();\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        let unmodifiedCurve = null;\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return negativeWaveShaperNode.context;\n            },\n            get curve() {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (value !== null && value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                }\n                else {\n                    const curveLength = value.length;\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = (curveLength + 1) / 2 - 1;\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        negativeCurve[i] =\n                            lowerIndex === upperIndex\n                                ? value[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n                        positiveCurve[i] =\n                            lowerIndex === upperIndex\n                                ? -value[curveLength - 1 - lowerIndex]\n                                : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) -\n                                    (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n                    }\n                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n                unmodifiedCurve = value;\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    }\n                    else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample() {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (curve !== null) {\n            // Only values of type Float32Array can be assigned to the curve property.\n            nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);\n        }\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n            isConnected = true;\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = nativeContext.createWaveShaper();\n        /*\n         * Bug #119: Safari does not correctly map the values.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here. Testing for the automationRate property is necessary because this workaround\n         * isn't necessary anymore since v14.0.2 of Safari.\n         */\n        if (nativeAudioContextConstructor !== null &&\n            nativeAudioContextConstructor.name === 'webkitAudioContext' &&\n            nativeContext.createGain().gain.automationRate === undefined) {\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n        const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);\n        // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n        // Only values of type Float32Array can be assigned to the curve property.\n        assignNativeAudioNodeOption(nativeWaveShaperNode, { curve }, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        overwriteAccessors(nativeWaveShaperNode, 'curve', (get) => () => get.call(nativeWaveShaperNode), (set) => (value) => {\n            set.call(nativeWaveShaperNode, value);\n            if (isConnected) {\n                if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                    disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n                }\n                else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                    disconnectNativeAudioBufferSourceNode();\n                    disconnectNativeAudioBufferSourceNode = null;\n                }\n            }\n            return value;\n        });\n        const whenConnected = () => {\n            isConnected = true;\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections) => {\n    return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {\n        const pannerNode = nativeContext.createPanner();\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        };\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            curve: new Float32Array([1, 1]),\n            oversample: 'none'\n        });\n        let lastOrientation = [orientationX, orientationY, orientationZ];\n        let lastPosition = [positionX, positionY, positionZ];\n        const buffer = new Float32Array(1);\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation = [\n                getFirstSample(inputBuffer, buffer, 0),\n                getFirstSample(inputBuffer, buffer, 1),\n                getFirstSample(inputBuffer, buffer, 2)\n            ];\n            if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n                lastOrientation = orientation;\n            }\n            const positon = [\n                getFirstSample(inputBuffer, buffer, 3),\n                getFirstSample(inputBuffer, buffer, 4),\n                getFirstSample(inputBuffer, buffer, 5)\n            ];\n            if (positon.some((value, index) => value !== lastPosition[index])) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n                lastPosition = positon;\n            }\n        };\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativePannerNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle() {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle() {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain() {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Safari does not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n                pannerNode.coneOuterGain = value;\n            },\n            get context() {\n                return pannerNode.context;\n            },\n            get distanceModel() {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get maxDistance() {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs() {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX() {\n                return orientationXGainNode.gain;\n            },\n            get orientationY() {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ() {\n                return orientationZGainNode.gain;\n            },\n            get panningModel() {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n            },\n            get positionX() {\n                return positionXGainNode.gain;\n            },\n            get positionY() {\n                return positionYGainNode.gain;\n            },\n            get positionZ() {\n                return positionZGainNode.gain;\n            },\n            get refDistance() {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor() {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-panner-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n        return nativePannerNode;\n    };\n};\n//# sourceMappingURL=native-panner-node-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let renderedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode(proxy);\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n            // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            }\n            else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise.all([\n                            proxy.orientationX,\n                            proxy.orientationY,\n                            proxy.orientationZ,\n                            proxy.positionX,\n                            proxy.positionY,\n                            proxy.positionZ\n                        ].map(async (audioParam, index) => {\n                            const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: index === 0 ? 1 : 0\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset);\n                            return nativeConstantSourceNode;\n                        }));\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode);\n                const channelDatas = [];\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n                inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n                    if (orientation.some((value, index) => value !== lastOrientation[index]) ||\n                        positon.some((value, index) => value !== lastPosition[index])) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n                        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n                return nativeGainNode;\n            }\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode);\n            }\n            return nativePannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=panner-node-renderer-factory.js.map","export const createNativePeriodicWaveFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n        return nativePeriodicWave;\n    };\n};\n//# sourceMappingURL=native-periodic-wave-factory.js.map","export const sanitizePeriodicWaveOptions = (options) => {\n    const { imag, real } = options;\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n    return { ...options, imag, real };\n};\n//# sourceMappingURL=sanitize-periodic-wave-options.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' };\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' };\n    const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve }));\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve }));\n        return {\n            connectGraph() {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            }\n            else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForLeftOutputWaveShaperCurve\n        });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForRightOutputWaveShaperCurve\n        });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForLeftOutputWaveShaperCurve\n        });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForRightOutputWaveShaperCurve\n        });\n        return {\n            connectGraph() {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        throw createNotSupportedError();\n    };\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n        let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(panGainNode.gain, 'maxValue', { get: () => 1 });\n        Object.defineProperty(panGainNode.gain, 'minValue', { get: () => -1 });\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return inputGainNode.context;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan() {\n                return panGainNode.gain;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        let isConnected = false;\n        const whenConnected = () => {\n            connectGraph();\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n            isConnected = false;\n        };\n        return monitorConnections(interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeStereoPannerNodeFactory = (createNativeStereoPannerNodeFaker, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const channelCountMode = options.channelCountMode;\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n        const nativeStereoPannerNode = nativeContext.createStereoPanner();\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n        return nativeStereoPannerNode;\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeStereoPannerNodes = new WeakMap();\n        const createStereoPannerNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeStereoPannerNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode);\n            }\n            return nativeStereoPannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=stereo-panner-node-renderer-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeWaveShaperNodes = new WeakMap();\n        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeWaveShaperNode = getNativeAudioNode(proxy);\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode);\n            }\n            return nativeWaveShaperNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=wave-shaper-node-renderer-factory.js.map","export const createIsSecureContext = (window) => window !== null && window.isSecureContext;\n//# sourceMappingURL=is-secure-context.js.map","export const createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=expose-current-frame-and-current-time.js.map","export const createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n        return backupOfflineAudioContext;\n    };\n};\n//# sourceMappingURL=get-or-create-backup-offline-audio-context.js.map","export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=evaluate-source.js.map","export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        }\n        catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=fetch-source.js.map","export const createAbortError = () => new DOMException('', 'AbortError');\n//# sourceMappingURL=abort-error.js.map","// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n        const url = URL.createObjectURL(blob);\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n            await offlineAudioContext.startRendering();\n            // Bug #197: Safari does not deliver the messages before the promise returned by startRendering() resolves.\n            await new Promise((resolve) => setTimeout(resolve));\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-post-message-support.js.map","export const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-native-context.js.map","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n        // Bug #43: Only Chrome and Edge do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n            return Promise.reject(err);\n        }\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        }\n        catch {\n            // Ignore errors.\n        }\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                detachArrayBuffer(audioData).catch(() => {\n                    // Ignore errors.\n                });\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n                audioBufferStore.add(audioBuffer);\n                return audioBuffer;\n            });\n        }\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = async () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    await detachArrayBuffer(audioData);\n                }\n                catch {\n                    // Ignore errors.\n                }\n            };\n            const fail = (err) => {\n                reject(err);\n                complete();\n            };\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(audioData, (audioBuffer) => {\n                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                    if (typeof audioBuffer.copyFromChannel !== 'function') {\n                        wrapAudioBufferCopyChannelMethods(audioBuffer);\n                        wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    }\n                    audioBufferStore.add(audioBuffer);\n                    complete().then(() => resolve(audioBuffer));\n                }, (err) => {\n                    // Bug #4: Safari returns null instead of an error.\n                    if (err === null) {\n                        fail(createEncodingError());\n                    }\n                    else {\n                        fail(err);\n                    }\n                });\n            }\n            catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n//# sourceMappingURL=decode-audio-data.js.map","export const createDataCloneError = () => new DOMException('', 'DataCloneError');\n//# sourceMappingURL=data-clone-error.js.map","export const createEncodingError = () => new DOMException('', 'EncodingError');\n//# sourceMappingURL=encoding-error.js.map","export const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n    return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext, numberOfChannels);\n            this._nativeContext = _nativeContext;\n            this._audioWorklet =\n                addAudioWorkletModule === undefined\n                    ? undefined\n                    : {\n                        addModule: (moduleURL, options) => {\n                            return addAudioWorkletModule(this, moduleURL, options);\n                        }\n                    };\n        }\n        get audioWorklet() {\n            return this._audioWorklet;\n        }\n        createAnalyser() {\n            return new analyserNodeConstructor(this);\n        }\n        createBiquadFilter() {\n            return new biquadFilterNodeConstructor(this);\n        }\n        createBuffer(numberOfChannels, length, sampleRate) {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n        createBufferSource() {\n            return new audioBufferSourceNodeConstructor(this);\n        }\n        createChannelMerger(numberOfInputs = 6) {\n            return new channelMergerNodeConstructor(this, { numberOfInputs });\n        }\n        createChannelSplitter(numberOfOutputs = 6) {\n            return new channelSplitterNodeConstructor(this, { numberOfOutputs });\n        }\n        createConstantSource() {\n            return new constantSourceNodeConstructor(this);\n        }\n        createConvolver() {\n            return new convolverNodeConstructor(this);\n        }\n        createDelay(maxDelayTime = 1) {\n            return new delayNodeConstructor(this, { maxDelayTime });\n        }\n        createDynamicsCompressor() {\n            return new dynamicsCompressorNodeConstructor(this);\n        }\n        createGain() {\n            return new gainNodeConstructor(this);\n        }\n        createIIRFilter(feedforward, feedback) {\n            return new iIRFilterNodeConstructor(this, { feedback, feedforward });\n        }\n        createOscillator() {\n            return new oscillatorNodeConstructor(this);\n        }\n        createPanner() {\n            return new pannerNodeConstructor(this);\n        }\n        createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {\n            return new periodicWaveConstructor(this, { ...constraints, imag, real });\n        }\n        createStereoPanner() {\n            return new stereoPannerNodeConstructor(this);\n        }\n        createWaveShaper() {\n            return new waveShaperNodeConstructor(this);\n        }\n        decodeAudioData(audioData, successCallback, errorCallback) {\n            return decodeAudioData(this._nativeContext, audioData).then((audioBuffer) => {\n                if (typeof successCallback === 'function') {\n                    successCallback(audioBuffer);\n                }\n                return audioBuffer;\n            }, (err) => {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=base-audio-context-constructor.js.map","export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaElementAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n            super(context, true, nativeMediaElementAudioSourceNode, null);\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=media-element-audio-source-node-constructor.js.map","export const createNativeMediaElementAudioSourceNode = (nativeAudioContext, options) => {\n    return nativeAudioContext.createMediaElementSource(options.mediaElement);\n};\n//# sourceMappingURL=native-media-element-audio-source-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeMediaStreamAudioDestinationNode = (nativeAudioContext, options) => {\n    const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();\n    assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n    // Bug #174: Safari does expose a wrong numberOfOutputs.\n    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n        Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n    }\n    return nativeMediaStreamAudioDestinationNode;\n};\n//# sourceMappingURL=native-media-stream-audio-destination-node.js.map","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map","export const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n    return nativeMediaStreamAudioSourceNode;\n};\n//# sourceMappingURL=native-media-stream-audio-source-node.js.map","export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, isNativeOfflineAudioContext) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n//# sourceMappingURL=native-media-stream-track-audio-source-node-factory.js.map","export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {\n    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n        }\n    };\n};\n//# sourceMappingURL=media-stream-track-audio-source-node-constructor.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {\n    return class AudioContext extends baseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            let nativeAudioContext;\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            }\n            catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        createMediaElementSource(mediaElement) {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n        createMediaStreamDestination() {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n        createMediaStreamSource(mediaStream) {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n        createMediaStreamTrackSource(mediaStreamTrack) {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=audio-context-constructor.js.map","export const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n        return unrenderedAudioWorkletNodes;\n    };\n};\n//# sourceMappingURL=get-unrendered-audio-worklet-nodes.js.map","export const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=add-unrendered-audio-worklet-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=connect-multiple-outputs.js.map","export const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=delete-unrendered-audio-worklet-node.js.map","export const createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore, getValueForKey) => {\n    return (nativeAudioWorkletNode) => getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-active-audio-worklet-node-inputs.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: options.parameterData[name] !== undefined\n                        ? options.parameterData[name]\n                        : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n        const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = typeof value === 'function' ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map();\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = typeof args[1] === 'function'\n                        ? args[1]\n                        : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = typeof value === 'function' ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters = processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n        const activeInputIndexes = new Map();\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n                                return input;\n                            }\n                            const count = activeInputIndexes.get(index);\n                            if (count === undefined) {\n                                return [];\n                            }\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                }\n                                else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {\n                            colno: error.colno,\n                            filename: error.filename,\n                            lineno: error.lineno,\n                            message: error.message\n                        }));\n                    }\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        }\n                        else {\n                            disconnectFakeGraph();\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        let isConnected = false;\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n            isConnected = false;\n        };\n        connectFakeGraph();\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-faker-factory.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=create-audio-worklet-processor.js.map","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);\n                const patchedEventListeners = new Map();\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = typeof value === 'function' ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = typeof args[1] === 'function'\n                                ? args[1]\n                                : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        // Bug #178: Chrome and Edge do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n                                            unpatchedEventListener(event);\n                                        }\n                                        else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome & Edge throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n        }\n        // Bug #61: Only Chrome & Edge have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        testClonabilityOfAudioWorkletNodeOptions(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-factory.js.map","export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=test-clonability-of-audio-worklet-node-options.js.map","export const createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n//# sourceMappingURL=get-backup-offline-audio-context.js.map","export const createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n//# sourceMappingURL=set-active-audio-worklet-node-inputs.js.map","export const sanitizeAudioWorkletNodeOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: options.outputChannelCount !== undefined\n            ? options.outputChannelCount\n            : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                    [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n//# sourceMappingURL=sanitize-audio-worklet-node-options.js.map","export const testAudioWorkletNodeOptionsClonability = (audioWorkletNodeOptions) => {\n    const { port1, port2 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n        port2.close();\n    }\n};\n//# sourceMappingURL=test-audio-worklet-node-options-clonability.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            let nativeAudioContext;\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            }\n            catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=minimal-audio-context-constructor.js.map","export const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        }\n        catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            if (err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n            throw err;\n        }\n    };\n};\n//# sourceMappingURL=create-native-offline-audio-context.js.map","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination)\n        .render(destination, nativeOfflineAudioContext)\n        /*\n         * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n         * destination.\n         */\n        .then(() => Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) => getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext))))\n        .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n        .then((audioBuffer) => {\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n        if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n            // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n        }\n        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n    });\n};\n//# sourceMappingURL=start-rendering.js.map","import { encode, instantiate } from 'media-encoder-host';\nimport { addRecorderAudioWorkletModule, createRecorderAudioWorkletNode } from 'recorder-audio-worklet';\nimport { AudioBuffer, AudioBufferSourceNode, AudioWorkletNode, ConstantSourceNode, MediaStreamAudioSourceNode, MinimalAudioContext, addAudioWorkletModule } from 'standardized-audio-context';\nconst ERROR_MESSAGE = 'Missing AudioWorklet support. Maybe this is not running in a secure context.';\n// @todo This should live in a separate file.\nconst createPromisedAudioNodesEncoderIdAndPort = async (audioBuffer, audioContext, channelCount, mediaStream, mimeType) => {\n    const { encoderId, port } = await instantiate(mimeType, audioContext.sampleRate);\n    if (AudioWorkletNode === undefined) {\n        throw new Error(ERROR_MESSAGE);\n    }\n    const audioBufferSourceNode = new AudioBufferSourceNode(audioContext, { buffer: audioBuffer });\n    const mediaStreamAudioSourceNode = new MediaStreamAudioSourceNode(audioContext, { mediaStream });\n    const recorderAudioWorkletNode = createRecorderAudioWorkletNode(AudioWorkletNode, audioContext, { channelCount });\n    return { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode };\n};\nexport const createWebAudioMediaRecorderFactory = (createBlobEvent, createInvalidModificationError, createInvalidStateError, createNotSupportedError) => {\n    return (eventTarget, mediaStream, mimeType) => {\n        var _a;\n        const sampleRate = (_a = mediaStream.getAudioTracks()[0]) === null || _a === void 0 ? void 0 : _a.getSettings().sampleRate;\n        const audioContext = new MinimalAudioContext({ latencyHint: 'playback', sampleRate });\n        const length = Math.max(1024, Math.ceil(audioContext.baseLatency * audioContext.sampleRate));\n        const audioBuffer = new AudioBuffer({ length, sampleRate: audioContext.sampleRate });\n        const bufferedArrayBuffers = [];\n        const promisedAudioWorkletModule = addRecorderAudioWorkletModule((url) => {\n            if (addAudioWorkletModule === undefined) {\n                throw new Error(ERROR_MESSAGE);\n            }\n            return addAudioWorkletModule(audioContext, url);\n        });\n        let abortRecording = null;\n        let intervalId = null;\n        let promisedAudioNodesAndEncoderId = null;\n        let promisedPartialRecording = null;\n        let isAudioContextRunning = true;\n        const dispatchDataAvailableEvent = (arrayBuffers) => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n        const requestNextPartialRecording = async (encoderId, timeslice) => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n            if (promisedAudioNodesAndEncoderId === null) {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            }\n            else {\n                dispatchDataAvailableEvent(arrayBuffers);\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n        const resume = () => {\n            isAudioContextRunning = true;\n            return audioContext.resume();\n        };\n        const stop = () => {\n            if (promisedAudioNodesAndEncoderId === null) {\n                return;\n            }\n            if (abortRecording !== null) {\n                mediaStream.removeEventListener('addtrack', abortRecording);\n                mediaStream.removeEventListener('removetrack', abortRecording);\n            }\n            if (intervalId !== null) {\n                clearTimeout(intervalId);\n            }\n            promisedAudioNodesAndEncoderId.then(async ({ constantSourceNode, encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode }) => {\n                if (promisedPartialRecording !== null) {\n                    promisedPartialRecording.catch(() => {\n                        /* @todo Only catch the errors caused by a duplicate call to encode. */\n                    });\n                    promisedPartialRecording = null;\n                }\n                await recorderAudioWorkletNode.stop();\n                mediaStreamAudioSourceNode.disconnect(recorderAudioWorkletNode);\n                constantSourceNode.stop();\n                const arrayBuffers = await encode(encoderId, null);\n                if (promisedAudioNodesAndEncoderId === null) {\n                    await suspend();\n                }\n                dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n                bufferedArrayBuffers.length = 0;\n                eventTarget.dispatchEvent(new Event('stop'));\n            });\n            promisedAudioNodesAndEncoderId = null;\n        };\n        const suspend = () => {\n            isAudioContextRunning = false;\n            return audioContext.suspend();\n        };\n        suspend();\n        return {\n            get mimeType() {\n                return mimeType;\n            },\n            get state() {\n                return promisedAudioNodesAndEncoderId === null ? 'inactive' : isAudioContextRunning ? 'recording' : 'paused';\n            },\n            pause() {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n                if (isAudioContextRunning) {\n                    suspend();\n                    eventTarget.dispatchEvent(new Event('pause'));\n                }\n            },\n            resume() {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n                if (!isAudioContextRunning) {\n                    resume();\n                    eventTarget.dispatchEvent(new Event('resume'));\n                }\n            },\n            start(timeslice) {\n                var _a;\n                if (promisedAudioNodesAndEncoderId !== null) {\n                    throw createInvalidStateError();\n                }\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                eventTarget.dispatchEvent(new Event('start'));\n                const audioTracks = mediaStream.getAudioTracks();\n                // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.\n                const channelCount = audioTracks.length === 0\n                    ? 2\n                    : (_a = audioTracks[0].getSettings().channelCount) !== null && _a !== void 0 ? _a : 2;\n                promisedAudioNodesAndEncoderId = Promise.all([\n                    resume(),\n                    promisedAudioWorkletModule.then(() => createPromisedAudioNodesEncoderIdAndPort(audioBuffer, audioContext, channelCount, mediaStream, mimeType))\n                ]).then(async ([, { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode }]) => {\n                    mediaStreamAudioSourceNode.connect(recorderAudioWorkletNode);\n                    await new Promise((resolve) => {\n                        audioBufferSourceNode.onended = resolve;\n                        audioBufferSourceNode.connect(recorderAudioWorkletNode);\n                        audioBufferSourceNode.start(audioContext.currentTime + length / audioContext.sampleRate);\n                    });\n                    audioBufferSourceNode.disconnect(recorderAudioWorkletNode);\n                    // Bug #17: Safari does throttle the processing on hidden tabs if there is no active audio output.\n                    const constantSourceNode = new ConstantSourceNode(audioContext, { offset: 0 });\n                    constantSourceNode.onended = () => constantSourceNode.disconnect();\n                    constantSourceNode.connect(audioContext.destination);\n                    constantSourceNode.start();\n                    await recorderAudioWorkletNode.record(port);\n                    if (timeslice !== undefined) {\n                        promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n                    }\n                    return { constantSourceNode, encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode };\n                });\n                const tracks = mediaStream.getTracks();\n                abortRecording = () => {\n                    stop();\n                    eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n                };\n                mediaStream.addEventListener('addtrack', abortRecording);\n                mediaStream.addEventListener('removetrack', abortRecording);\n                intervalId = setInterval(() => {\n                    const currentTracks = mediaStream.getTracks();\n                    if ((currentTracks.length !== tracks.length || currentTracks.some((track, index) => track !== tracks[index])) &&\n                        abortRecording !== null) {\n                        abortRecording();\n                    }\n                }, 1000);\n            },\n            stop\n        };\n    };\n};\n//# sourceMappingURL=web-audio-media-recorder.js.map","export const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-audio-context.js.map","export const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {\n    return (anything) => audioNodeStore.has(anything) || isNativeAudioNode(anything);\n};\n//# sourceMappingURL=is-any-audio-node.js.map","export const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {\n    return (anything) => audioParamStore.has(anything) || isNativeAudioParam(anything);\n};\n//# sourceMappingURL=is-any-audio-param.js.map","export const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-offline-audio-context.js.map","import { encode, instantiate } from 'media-encoder-host';\nimport { MultiBufferDataView } from 'multi-buffer-data-view';\nimport { on } from 'subscribable-things';\nexport const createWebmPcmMediaRecorderFactory = (createBlobEvent, createInvalidModificationError, createNotSupportedError, decodeWebMChunk, readVariableSizeInteger) => {\n    return (eventTarget, nativeMediaRecorderConstructor, mediaStream, mimeType) => {\n        const audioTracks = mediaStream.getAudioTracks();\n        const bufferedArrayBuffers = [];\n        // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.\n        const channelCount = audioTracks.length === 0\n            ? undefined\n            : audioTracks[0].getSettings().channelCount;\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(mediaStream, { mimeType: 'audio/webm;codecs=pcm' });\n        const sampleRate = audioTracks.length === 0 ? undefined : audioTracks[0].getSettings().sampleRate;\n        let promisedPartialRecording = null;\n        let stopRecording = () => { }; // tslint:disable-line:no-empty\n        const dispatchDataAvailableEvent = (arrayBuffers) => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n        const requestNextPartialRecording = async (encoderId, timeslice) => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n            if (nativeMediaRecorder.state === 'inactive') {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            }\n            else {\n                dispatchDataAvailableEvent(arrayBuffers);\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n        const stop = () => {\n            if (nativeMediaRecorder.state === 'inactive') {\n                return;\n            }\n            if (promisedPartialRecording !== null) {\n                promisedPartialRecording.catch(() => {\n                    /* @todo Only catch the errors caused by a duplicate call to encode. */\n                });\n                promisedPartialRecording = null;\n            }\n            stopRecording();\n            stopRecording = () => { }; // tslint:disable-line:no-empty\n            nativeMediaRecorder.stop();\n        };\n        nativeMediaRecorder.addEventListener('error', () => {\n            stop();\n            // Bug #3 & #4: Chrome throws an error event without any error.\n            eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n        });\n        nativeMediaRecorder.addEventListener('start', () => eventTarget.dispatchEvent(new Event('start')));\n        return {\n            get mimeType() {\n                return mimeType;\n            },\n            get state() {\n                return nativeMediaRecorder.state;\n            },\n            pause() {\n                return nativeMediaRecorder.pause();\n            },\n            resume() {\n                return nativeMediaRecorder.resume();\n            },\n            start(timeslice) {\n                /*\n                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio\n                 * codec.\n                 */\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                if (nativeMediaRecorder.state === 'inactive') {\n                    if (sampleRate === undefined) {\n                        throw new Error('The sampleRate is not defined.');\n                    }\n                    let isRecording = false;\n                    let isStopped = false;\n                    // Bug #9: Chrome sometimes fires more than one dataavailable event while being inactive.\n                    let pendingInvocations = 0;\n                    let promisedDataViewElementTypeEncoderIdAndPort = instantiate(mimeType, sampleRate);\n                    stopRecording = () => {\n                        isStopped = true;\n                    };\n                    const removeEventListener = on(nativeMediaRecorder, 'dataavailable')(({ data }) => {\n                        pendingInvocations += 1;\n                        promisedDataViewElementTypeEncoderIdAndPort = promisedDataViewElementTypeEncoderIdAndPort.then(async ({ dataView = null, elementType = null, encoderId, port }) => {\n                            const arrayBuffer = await data.arrayBuffer();\n                            pendingInvocations -= 1;\n                            const currentDataView = dataView === null\n                                ? new MultiBufferDataView([arrayBuffer])\n                                : new MultiBufferDataView([...dataView.buffers, arrayBuffer], dataView.byteOffset);\n                            if (!isRecording && nativeMediaRecorder.state === 'recording' && !isStopped) {\n                                const lengthAndValue = readVariableSizeInteger(currentDataView, 0);\n                                if (lengthAndValue === null) {\n                                    return { dataView: currentDataView, elementType, encoderId, port };\n                                }\n                                const { value } = lengthAndValue;\n                                if (value !== 172351395) {\n                                    return { dataView, elementType, encoderId, port };\n                                }\n                                isRecording = true;\n                            }\n                            const { currentElementType, offset, contents } = decodeWebMChunk(currentDataView, elementType, channelCount);\n                            const remainingDataView = offset < currentDataView.byteLength\n                                ? new MultiBufferDataView(currentDataView.buffers, currentDataView.byteOffset + offset)\n                                : null;\n                            contents.forEach((content) => port.postMessage(content, content.map(({ buffer }) => buffer)));\n                            if (pendingInvocations === 0 && (nativeMediaRecorder.state === 'inactive' || isStopped)) {\n                                encode(encoderId, null).then((arrayBuffers) => {\n                                    dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n                                    bufferedArrayBuffers.length = 0;\n                                    eventTarget.dispatchEvent(new Event('stop'));\n                                });\n                                port.postMessage([]);\n                                port.close();\n                                removeEventListener();\n                            }\n                            return { dataView: remainingDataView, elementType: currentElementType, encoderId, port };\n                        });\n                    });\n                    if (timeslice !== undefined) {\n                        promisedDataViewElementTypeEncoderIdAndPort.then(({ encoderId }) => (promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice)));\n                    }\n                }\n                nativeMediaRecorder.start(100);\n            },\n            stop\n        };\n    };\n};\n//# sourceMappingURL=webm-pcm-media-recorder.js.map","export const readVariableSizeIntegerLength = (dataView, offset) => {\n    if (offset >= dataView.byteLength) {\n        return null;\n    }\n    const byte = dataView.getUint8(offset);\n    if (byte > 127) {\n        return 1;\n    }\n    if (byte > 63) {\n        return 2;\n    }\n    if (byte > 31) {\n        return 3;\n    }\n    if (byte > 15) {\n        return 4;\n    }\n    if (byte > 7) {\n        return 5;\n    }\n    if (byte > 3) {\n        return 6;\n    }\n    if (byte > 1) {\n        return 7;\n    }\n    if (byte > 0) {\n        return 8;\n    }\n    const length = readVariableSizeIntegerLength(dataView, offset + 1);\n    return length === null ? null : length + 8;\n};\n//# sourceMappingURL=read-variable-size-integer-length.js.map","import { register as rgstr } from 'media-encoder-host';\nimport { createBlobEventFactory } from './factories/blob-event-factory';\nimport { createDecodeWebMChunk } from './factories/decode-web-m-chunk';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createEventTargetFactory } from './factories/event-target-factory';\nimport { createInvalidModificationError } from './factories/invalid-modification-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaRecorderConstructor } from './factories/media-recorder-constructor';\nimport { createNativeBlobEventConstructor } from './factories/native-blob-event-constructor';\nimport { createNativeMediaRecorderFactory } from './factories/native-media-recorder';\nimport { createNativeMediaRecorderConstructor } from './factories/native-media-recorder-constructor';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createReadElementContent } from './factories/read-element-content';\nimport { createReadElementType } from './factories/read-element-type';\nimport { createReadVariableSizeInteger } from './factories/read-variable-size-integer';\nimport { createWebAudioMediaRecorderFactory } from './factories/web-audio-media-recorder';\nimport { createWebmPcmMediaRecorderFactory } from './factories/webm-pcm-media-recorder';\nimport { createWindow } from './factories/window';\nimport { readVariableSizeIntegerLength } from './functions/read-variable-size-integer-length';\nimport { wrapEventListener } from './functions/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst encoderRegexes = [];\nconst window = createWindow();\nconst nativeBlobEventConstructor = createNativeBlobEventConstructor(window);\nconst createBlobEvent = createBlobEventFactory(nativeBlobEventConstructor);\nconst createWebAudioMediaRecorder = createWebAudioMediaRecorderFactory(createBlobEvent, createInvalidModificationError, createInvalidStateError, createNotSupportedError);\nconst readVariableSizeInteger = createReadVariableSizeInteger(readVariableSizeIntegerLength);\nconst readElementContent = createReadElementContent(readVariableSizeInteger);\nconst readElementType = createReadElementType(readVariableSizeInteger);\nconst decodeWebMChunk = createDecodeWebMChunk(readElementContent, readElementType);\nconst createWebmPcmMediaRecorder = createWebmPcmMediaRecorderFactory(createBlobEvent, createInvalidModificationError, createNotSupportedError, decodeWebMChunk, readVariableSizeInteger);\nconst createEventTarget = createEventTargetFactory(window);\nconst nativeMediaRecorderConstructor = createNativeMediaRecorderConstructor(window);\nconst createNativeMediaRecorder = createNativeMediaRecorderFactory(createInvalidModificationError, createNotSupportedError);\nconst mediaRecorderConstructor = createMediaRecorderConstructor(createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, createEventTargetConstructor(createEventTarget, wrapEventListener), nativeMediaRecorderConstructor);\nexport { mediaRecorderConstructor as MediaRecorder };\nexport const isSupported = () => createIsSupportedPromise(window);\nexport const register = async (port) => {\n    encoderRegexes.push(await rgstr(port));\n};\n//# sourceMappingURL=module.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const createNativeBlobEventConstructor = (window) => {\n    if (window !== null && window.BlobEvent !== undefined) {\n        return window.BlobEvent;\n    }\n    return null;\n};\n//# sourceMappingURL=native-blob-event-constructor.js.map","export const createInvalidStateError = () => {\n    try {\n        return new DOMException('', 'InvalidStateError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 11;\n        err.name = 'InvalidStateError';\n        return err;\n    }\n};\n//# sourceMappingURL=invalid-state-error.js.map","export const createReadVariableSizeInteger = (readVariableSizeIntegerLength) => {\n    return (dataView, offset) => {\n        const length = readVariableSizeIntegerLength(dataView, offset);\n        if (length === null) {\n            return length;\n        }\n        const firstDataByteOffset = offset + Math.floor((length - 1) / 8);\n        if (firstDataByteOffset + length > dataView.byteLength) {\n            return null;\n        }\n        const firstDataByte = dataView.getUint8(firstDataByteOffset);\n        let value = firstDataByte & ((1 << (8 - (length % 8))) - 1); // tslint:disable-line:no-bitwise\n        for (let i = 1; i < length; i += 1) {\n            value = (value << 8) + dataView.getUint8(firstDataByteOffset + i); // tslint:disable-line:no-bitwise\n        }\n        return { length, value };\n    };\n};\n//# sourceMappingURL=read-variable-size-integer.js.map","export const createReadElementContent = (readVariableSizeInteger) => {\n    return (dataView, offset, type, channelCount = 2) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n        const { length, value } = lengthAndValue;\n        if (type === 'master') {\n            return { content: null, length };\n        }\n        if (offset + length + value > dataView.byteLength) {\n            return null;\n        }\n        if (type === 'binary') {\n            const numberOfSamples = (value / Float32Array.BYTES_PER_ELEMENT - 1) / channelCount;\n            const content = Array.from({ length: channelCount }, () => new Float32Array(numberOfSamples));\n            for (let i = 0; i < numberOfSamples; i += 1) {\n                const elementOffset = i * channelCount + 1;\n                for (let j = 0; j < channelCount; j += 1) {\n                    content[j][i] = dataView.getFloat32(offset + length + (elementOffset + j) * Float32Array.BYTES_PER_ELEMENT, true);\n                }\n            }\n            return { content, length: length + value };\n        }\n        return { content: null, length: length + value };\n    };\n};\n//# sourceMappingURL=read-element-content.js.map","export const createReadElementType = (readVariableSizeInteger) => {\n    return (dataView, offset) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n        const { length, value } = lengthAndValue;\n        if (value === 35) {\n            return { length, type: 'binary' };\n        }\n        if (value === 46 ||\n            value === 97 ||\n            value === 88713574 ||\n            value === 106212971 ||\n            value === 139690087 ||\n            value === 172351395 ||\n            value === 256095861) {\n            return { length, type: 'master' };\n        }\n        return { length, type: 'unknown' };\n    };\n};\n//# sourceMappingURL=read-element-type.js.map","export const createDecodeWebMChunk = (readElementContent, readElementType) => {\n    return (dataView, elementType, channelCount) => {\n        const contents = [];\n        let currentElementType = elementType;\n        let offset = 0;\n        while (offset < dataView.byteLength) {\n            if (currentElementType === null) {\n                const lengthAndType = readElementType(dataView, offset);\n                if (lengthAndType === null) {\n                    break;\n                }\n                const { length, type } = lengthAndType;\n                currentElementType = type;\n                offset += length;\n            }\n            else {\n                const contentAndLength = readElementContent(dataView, offset, currentElementType, channelCount);\n                if (contentAndLength === null) {\n                    break;\n                }\n                const { content, length } = contentAndLength;\n                currentElementType = null;\n                offset += length;\n                if (content !== null) {\n                    contents.push(content);\n                }\n            }\n        }\n        return { contents, currentElementType, offset };\n    };\n};\n//# sourceMappingURL=decode-web-m-chunk.js.map","export const createEventTargetFactory = (window) => {\n    return () => {\n        if (window === null) {\n            throw new Error('A native EventTarget could not be created.');\n        }\n        return window.document.createElement('p');\n    };\n};\n//# sourceMappingURL=event-target-factory.js.map","export const createNativeMediaRecorderConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.MediaRecorder === undefined ? null : window.MediaRecorder;\n};\n//# sourceMappingURL=native-media-recorder-constructor.js.map","export const createNativeMediaRecorderFactory = (createInvalidModificationError, createNotSupportedError) => {\n    return (nativeMediaRecorderConstructor, stream, mediaRecorderOptions) => {\n        const bufferedBlobs = [];\n        const dataAvailableListeners = new WeakMap();\n        const errorListeners = new WeakMap();\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(stream, mediaRecorderOptions);\n        const stopListeners = new WeakMap();\n        let isActive = true;\n        nativeMediaRecorder.addEventListener = ((addEventListener) => {\n            return (type, listener, options) => {\n                let patchedEventListener = listener;\n                if (typeof listener === 'function') {\n                    if (type === 'dataavailable') {\n                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n                        patchedEventListener = (event) => {\n                            setTimeout(() => {\n                                if (isActive && nativeMediaRecorder.state === 'inactive') {\n                                    bufferedBlobs.push(event.data);\n                                }\n                                else {\n                                    if (bufferedBlobs.length > 0) {\n                                        const blob = event.data;\n                                        Object.defineProperty(event, 'data', {\n                                            value: new Blob([...bufferedBlobs, blob], { type: blob.type })\n                                        });\n                                        bufferedBlobs.length = 0;\n                                    }\n                                    listener.call(nativeMediaRecorder, event);\n                                }\n                            });\n                        };\n                        dataAvailableListeners.set(listener, patchedEventListener);\n                    }\n                    else if (type === 'error') {\n                        // Bug #12 & #13: Firefox fires a regular event with an error property.\n                        patchedEventListener = (event) => {\n                            // Bug #3 & #4: Chrome throws an error event without any error.\n                            if (event.error === undefined) {\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: createInvalidModificationError() }));\n                                // Bug #1 & #2: Firefox throws an error event with an UnknownError.\n                            }\n                            else if (event.error.name === 'UnknownError') {\n                                const message = event.error.message;\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: createInvalidModificationError(message) }));\n                            }\n                            else if (event instanceof ErrorEvent) {\n                                listener.call(nativeMediaRecorder, event);\n                            }\n                            else {\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: event.error }));\n                            }\n                        };\n                        errorListeners.set(listener, patchedEventListener);\n                    }\n                    else if (type === 'stop') {\n                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n                        patchedEventListener = (event) => {\n                            isActive = false;\n                            setTimeout(() => listener.call(nativeMediaRecorder, event));\n                        };\n                        stopListeners.set(listener, patchedEventListener);\n                    }\n                }\n                return addEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n            };\n        })(nativeMediaRecorder.addEventListener);\n        nativeMediaRecorder.dispatchEvent = ((dispatchEvent) => {\n            // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n            return (event) => {\n                let wasActive;\n                setTimeout(() => {\n                    wasActive = isActive;\n                    isActive = false;\n                });\n                const returnValue = dispatchEvent.call(nativeMediaRecorder, event);\n                setTimeout(() => (isActive = wasActive));\n                return returnValue;\n            };\n        })(nativeMediaRecorder.dispatchEvent);\n        nativeMediaRecorder.removeEventListener = ((removeEventListener) => {\n            return (type, listener, options) => {\n                let patchedEventListener = listener;\n                if (typeof listener === 'function') {\n                    if (type === 'dataavailable') {\n                        const dataAvailableListener = dataAvailableListeners.get(listener);\n                        if (dataAvailableListener !== undefined) {\n                            patchedEventListener = dataAvailableListener;\n                        }\n                    }\n                    else if (type === 'error') {\n                        const errorListener = errorListeners.get(listener);\n                        if (errorListener !== undefined) {\n                            patchedEventListener = errorListener;\n                        }\n                    }\n                    else if (type === 'stop') {\n                        const stopListener = stopListeners.get(listener);\n                        if (stopListener !== undefined) {\n                            patchedEventListener = stopListener;\n                        }\n                    }\n                }\n                return removeEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n            };\n        })(nativeMediaRecorder.removeEventListener);\n        nativeMediaRecorder.start = ((start) => {\n            return (timeslice) => {\n                /*\n                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio\n                 * codec.\n                 */\n                if (mediaRecorderOptions.mimeType !== undefined &&\n                    mediaRecorderOptions.mimeType.startsWith('audio/') &&\n                    stream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                isActive = timeslice !== undefined;\n                return timeslice === undefined ? start.call(nativeMediaRecorder) : start.call(nativeMediaRecorder, timeslice);\n            };\n        })(nativeMediaRecorder.start);\n        return nativeMediaRecorder;\n    };\n};\n//# sourceMappingURL=native-media-recorder.js.map","export const createMediaRecorderConstructor = (createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, eventTargetConstructor, nativeMediaRecorderConstructor) => {\n    return class MediaRecorder extends eventTargetConstructor {\n        constructor(stream, options = {}) {\n            const { mimeType } = options;\n            if (nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                (mimeType === undefined ||\n                    (nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                        nativeMediaRecorderConstructor.isTypeSupported(mimeType)))) {\n                const internalMediaRecorder = createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                super(internalMediaRecorder);\n                this._internalMediaRecorder = internalMediaRecorder;\n            }\n            else if (mimeType !== undefined && encoderRegexes.some((regex) => regex.test(mimeType))) {\n                super();\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                if (nativeMediaRecorderConstructor !== null &&\n                    nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                    nativeMediaRecorderConstructor.isTypeSupported('audio/webm;codecs=pcm')) {\n                    this._internalMediaRecorder = createWebmPcmMediaRecorder(this, nativeMediaRecorderConstructor, stream, mimeType);\n                }\n                else {\n                    this._internalMediaRecorder = createWebAudioMediaRecorder(this, stream, mimeType);\n                }\n            }\n            else {\n                // This is creating a native MediaRecorder just to provoke it to throw an error.\n                if (nativeMediaRecorderConstructor !== null) {\n                    createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                }\n                throw createNotSupportedError();\n            }\n            this._ondataavailable = null;\n            this._onerror = null;\n            this._onpause = null;\n            this._onresume = null;\n            this._onstart = null;\n            this._onstop = null;\n        }\n        get mimeType() {\n            return this._internalMediaRecorder.mimeType;\n        }\n        get ondataavailable() {\n            return this._ondataavailable === null ? this._ondataavailable : this._ondataavailable[0];\n        }\n        set ondataavailable(value) {\n            if (this._ondataavailable !== null) {\n                this.removeEventListener('dataavailable', this._ondataavailable[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('dataavailable', boundListener);\n                this._ondataavailable = [value, boundListener];\n            }\n            else {\n                this._ondataavailable = null;\n            }\n        }\n        get onerror() {\n            return this._onerror === null ? this._onerror : this._onerror[0];\n        }\n        set onerror(value) {\n            if (this._onerror !== null) {\n                this.removeEventListener('error', this._onerror[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('error', boundListener);\n                this._onerror = [value, boundListener];\n            }\n            else {\n                this._onerror = null;\n            }\n        }\n        get onpause() {\n            return this._onpause === null ? this._onpause : this._onpause[0];\n        }\n        set onpause(value) {\n            if (this._onpause !== null) {\n                this.removeEventListener('pause', this._onpause[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('pause', boundListener);\n                this._onpause = [value, boundListener];\n            }\n            else {\n                this._onpause = null;\n            }\n        }\n        get onresume() {\n            return this._onresume === null ? this._onresume : this._onresume[0];\n        }\n        set onresume(value) {\n            if (this._onresume !== null) {\n                this.removeEventListener('resume', this._onresume[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('resume', boundListener);\n                this._onresume = [value, boundListener];\n            }\n            else {\n                this._onresume = null;\n            }\n        }\n        get onstart() {\n            return this._onstart === null ? this._onstart : this._onstart[0];\n        }\n        set onstart(value) {\n            if (this._onstart !== null) {\n                this.removeEventListener('start', this._onstart[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('start', boundListener);\n                this._onstart = [value, boundListener];\n            }\n            else {\n                this._onstart = null;\n            }\n        }\n        get onstop() {\n            return this._onstop === null ? this._onstop : this._onstop[0];\n        }\n        set onstop(value) {\n            if (this._onstop !== null) {\n                this.removeEventListener('stop', this._onstop[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('stop', boundListener);\n                this._onstop = [value, boundListener];\n            }\n            else {\n                this._onstop = null;\n            }\n        }\n        get state() {\n            return this._internalMediaRecorder.state;\n        }\n        pause() {\n            return this._internalMediaRecorder.pause();\n        }\n        resume() {\n            return this._internalMediaRecorder.resume();\n        }\n        start(timeslice) {\n            return this._internalMediaRecorder.start(timeslice);\n        }\n        stop() {\n            return this._internalMediaRecorder.stop();\n        }\n        static isTypeSupported(mimeType) {\n            return ((nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                nativeMediaRecorderConstructor.isTypeSupported(mimeType)) ||\n                encoderRegexes.some((regex) => regex.test(mimeType)));\n        }\n    };\n};\n//# sourceMappingURL=media-recorder-constructor.js.map","export const createEventTargetConstructor = (createEventTarget, wrapEventListener) => {\n    return class EventTarget {\n        constructor(nativeEventTarget = null) {\n            this._listeners = new WeakMap();\n            this._nativeEventTarget = nativeEventTarget === null ? createEventTarget() : nativeEventTarget;\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","export const createIsSupportedPromise = (window) => {\n    if (window !== null &&\n        window.MediaStream !== undefined &&\n        /*\n         * Bug #10: An early experimental implemenation in Safari did not provide the isTypeSupported() function.\n         */\n        (window.MediaRecorder === undefined || window.MediaRecorder.isTypeSupported !== undefined)) {\n        /*\n         * Bug #5: Up until v70 Firefox did emit a blob of type video/webm when asked to encode a MediaStream with a video track into an\n         * audio codec.\n         */\n        return new Promise((resolve) => {\n            // Bug #11 Safari does not yet support the MediaRecorder but that isn't tested here.\n            if (window.MediaRecorder === undefined) {\n                return resolve(true);\n            }\n            // @todo captureStream() is not defined yet.\n            const canvasElement = document.createElement('canvas');\n            // @todo https://bugzilla.mozilla.org/show_bug.cgi?id=1388974\n            canvasElement.getContext('2d');\n            if (typeof canvasElement.captureStream !== 'function') {\n                return resolve(false);\n            }\n            const mediaStream = canvasElement.captureStream();\n            const mimeType = 'audio/webm';\n            try {\n                const mediaRecorder = new window.MediaRecorder(mediaStream, { mimeType });\n                mediaRecorder.addEventListener('dataavailable', ({ data }) => resolve(data.type === mimeType));\n                mediaRecorder.start();\n                setTimeout(() => mediaRecorder.stop(), 10);\n            }\n            catch (err) {\n                resolve(err.name === 'NotSupportedError');\n            }\n        });\n    }\n    return Promise.resolve(false);\n};\n//# sourceMappingURL=is-supported-promise.js.map","export const createAddUniqueNumber = (generateUniqueNumber) => {\n    return (set) => {\n        const number = generateUniqueNumber(set);\n        set.add(number);\n        return number;\n    };\n};\n//# sourceMappingURL=add-unique-number.js.map","/*\n * The value of the constant Number.MAX_SAFE_INTEGER equals (2 ** 53 - 1) but it\n * is fairly new.\n */\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER === undefined ? 9007199254740991 : Number.MAX_SAFE_INTEGER;\nconst TWO_TO_THE_POWER_OF_TWENTY_NINE = 536870912;\nconst TWO_TO_THE_POWER_OF_THIRTY = TWO_TO_THE_POWER_OF_TWENTY_NINE * 2;\nexport const createGenerateUniqueNumber = (cache, lastNumberWeakMap) => {\n    return (collection) => {\n        const lastNumber = lastNumberWeakMap.get(collection);\n        /*\n         * Let's try the cheapest algorithm first. It might fail to produce a new\n         * number, but it is so cheap that it is okay to take the risk. Just\n         * increase the last number by one or reset it to 0 if we reached the upper\n         * bound of SMIs (which stands for small integers). When the last number is\n         * unknown it is assumed that the collection contains zero based consecutive\n         * numbers.\n         */\n        let nextNumber = lastNumber === undefined ? collection.size : lastNumber < TWO_TO_THE_POWER_OF_THIRTY ? lastNumber + 1 : 0;\n        if (!collection.has(nextNumber)) {\n            return cache(collection, nextNumber);\n        }\n        /*\n         * If there are less than half of 2 ** 30 numbers stored in the collection,\n         * the chance to generate a new random number in the range from 0 to 2 ** 30\n         * is at least 50%. It's benifitial to use only SMIs because they perform\n         * much better in any environment based on V8.\n         */\n        if (collection.size < TWO_TO_THE_POWER_OF_TWENTY_NINE) {\n            while (collection.has(nextNumber)) {\n                nextNumber = Math.floor(Math.random() * TWO_TO_THE_POWER_OF_THIRTY);\n            }\n            return cache(collection, nextNumber);\n        }\n        // Quickly check if there is a theoretical chance to generate a new number.\n        if (collection.size > MAX_SAFE_INTEGER) {\n            throw new Error('Congratulations, you created a collection of unique numbers which uses all available integers!');\n        }\n        // Otherwise use the full scale of safely usable integers.\n        while (collection.has(nextNumber)) {\n            nextNumber = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n        }\n        return cache(collection, nextNumber);\n    };\n};\n//# sourceMappingURL=generate-unique-number.js.map","import { createAddUniqueNumber } from './factories/add-unique-number';\nimport { createCache } from './factories/cache';\nimport { createGenerateUniqueNumber } from './factories/generate-unique-number';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './types/index';\nconst LAST_NUMBER_WEAK_MAP = new WeakMap();\nconst cache = createCache(LAST_NUMBER_WEAK_MAP);\nconst generateUniqueNumber = createGenerateUniqueNumber(cache, LAST_NUMBER_WEAK_MAP);\nconst addUniqueNumber = createAddUniqueNumber(generateUniqueNumber);\nexport { addUniqueNumber, generateUniqueNumber };\n//# sourceMappingURL=module.js.map","export const createCache = (lastNumberWeakMap) => {\n    return (collection, nextNumber) => {\n        lastNumberWeakMap.set(collection, nextNumber);\n        return nextNumber;\n    };\n};\n//# sourceMappingURL=cache.js.map","import React, { useState } from \"react\";\nimport { ReactMediaRecorder } from \"react-media-recorder\";\n\nconst VideoUploader = () => {\n  const [status, setStatus] = useState(\"idle\");\n  const [mediaBlobUrl, setMediaBlobUrl] = useState(null);\n\n  const onStartRecording = () => {\n    setStatus(\"recording\");\n    setMediaBlobUrl(null); // Reset the mediaBlobUrl\n  };\n\n  const onStopRecording = (blobUrl) => {\n    setStatus(\"stopped\");\n    setMediaBlobUrl(blobUrl); // Save the blobUrl to state\n  };\n\n  const onSaveRecording = () => {\n    setStatus(\"idle\");\n    // Perform any actions needed with the saved mediaBlobUrl, like uploading to a server.\n  };\n\n  const onDiscardRecording = () => {\n    setStatus(\"idle\");\n    // Discard the recording by setting mediaBlobUrl to null\n    setMediaBlobUrl(null);\n  };\n\n  return (\n    <div>\n      <p>{status}</p>\n      {/* Pass the onStopRecording callback to handle blobUrl */}\n      <ReactMediaRecorder\n        video\n        render={({ status, startRecording, stopRecording, mediaBlobUrl }) => (\n          <div>\n            {status === \"idle\" ? (\n              <button onClick={startRecording}>Start Recording</button>\n            ) : (\n              <button onClick={stopRecording}>Stop Recording</button>\n            )}\n            {/* Show the recording preview while recording */}\n            {status === \"recording\" && (\n              <video src={mediaBlobUrl} controls autoPlay loop />\n            )}\n          </div>\n        )}\n        onStop={onStopRecording}\n      />\n      {status === \"stopped\" && (\n        <div>\n          {/* Show the saved video after stopping */}\n          <video src={mediaBlobUrl} controls autoPlay loop />\n          <button onClick={onSaveRecording}>Save</button>\n          <button onClick={onDiscardRecording}>Discard</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default VideoUploader;\n          \n","/*\n * indefinite-article.js v1.0.0, 12-18-2011\n *\n * @author: Rodrigo Neri (@rigoneri)\n *\n * (The MIT License)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar indefiniteArticle = function(phrase) {\n    var i, word;\n\n    // Getting the first word\n    var match = /\\w+/.exec(phrase);\n    if (match)\n        word = match[0];\n    else\n        return \"an\";\n\n    var l_word = word.toLowerCase();\n    // Specific start of words that should be preceeded by 'an'\n    var alt_cases = [\"honest\", \"hour\", \"hono\"];\n    for (i in alt_cases) {\n        if (l_word.indexOf(alt_cases[i]) == 0)\n            return \"an\";\n    }\n\n    // Single letter word which should be preceeded by 'an'\n    if (l_word.length == 1) {\n        if (\"aedhilmnorsx\".indexOf(l_word) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Capital words which should likely be preceeded by 'an'\n    if (word.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/)) {\n        return \"an\";\n    }\n\n    // Special cases where a word that begins with a vowel should be preceeded by 'a'\n    var regexes = [/^e[uw]/, /^onc?e\\b/, /^uni([^nmd]|mo)/, /^u[bcfhjkqrst][aeiou]/];\n    for (i = 0; i < regexes.length; i++) {\n        if (l_word.match(regexes[i]))\n            return \"a\"\n    }\n\n    // Special capital words (UK, UN)\n    if (word.match(/^U[NK][AIEO]/)) {\n        return \"a\";\n    }\n    else if (word == word.toUpperCase()) {\n        if (\"aedhilmnorsx\".indexOf(l_word[0]) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Basic method of words that begin with a vowel being preceeded by 'an'\n    if (\"aeiou\".indexOf(l_word[0]) >= 0)\n        return \"an\";\n\n    // Instances where y follwed by specific letters is preceeded by 'an'\n    if (l_word.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/))\n        return \"an\";\n\n    return \"a\";\n};\n\nif ((typeof module !== 'undefined') && (typeof module.exports !== 'undefined')) {\n    module.exports = indefiniteArticle;\n} else {\n    window.indefiniteArticle = indefiniteArticle;\n}\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.multiBufferDataView = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);\n    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\n    function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n    function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n    function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n    var MultiBufferDataView = /*#__PURE__*/function () {\n      function MultiBufferDataView(buffers) {\n        var byteOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var byteLength = arguments.length > 2 ? arguments[2] : undefined;\n        _classCallCheck__default[\"default\"](this, MultiBufferDataView);\n        if (byteOffset < 0 || byteLength !== undefined && byteLength < 0) {\n          throw new RangeError();\n        }\n        var availableBytes = buffers.reduce(function (length, buffer) {\n          return length + buffer.byteLength;\n        }, 0);\n        if (byteOffset > availableBytes || byteLength !== undefined && byteOffset + byteLength > availableBytes) {\n          throw new RangeError();\n        }\n        var dataViews = [];\n        var effectiveByteLength = byteLength === undefined ? availableBytes - byteOffset : byteLength;\n        var truncatedBuffers = [];\n        var consumedByteLength = 0;\n        var truncatedByteOffset = byteOffset;\n        var _iterator = _createForOfIteratorHelper(buffers),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var buffer = _step.value;\n            if (truncatedBuffers.length === 0) {\n              if (buffer.byteLength > truncatedByteOffset) {\n                consumedByteLength = buffer.byteLength - truncatedByteOffset;\n                var byteLengthOfDataView = consumedByteLength > effectiveByteLength ? effectiveByteLength : consumedByteLength;\n                dataViews.push(new DataView(buffer, truncatedByteOffset, byteLengthOfDataView));\n                truncatedBuffers.push(buffer);\n              } else {\n                truncatedByteOffset -= buffer.byteLength;\n              }\n            } else if (consumedByteLength < effectiveByteLength) {\n              consumedByteLength += buffer.byteLength;\n              var _byteLengthOfDataView = consumedByteLength > effectiveByteLength ? buffer.byteLength - consumedByteLength + effectiveByteLength : buffer.byteLength;\n              dataViews.push(new DataView(buffer, 0, _byteLengthOfDataView));\n              truncatedBuffers.push(buffer);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        this._buffers = truncatedBuffers;\n        this._byteLength = effectiveByteLength;\n        this._byteOffset = truncatedByteOffset;\n        this._dataViews = dataViews;\n        this._internalBuffer = new DataView(new ArrayBuffer(8));\n      }\n      _createClass__default[\"default\"](MultiBufferDataView, [{\n        key: \"buffers\",\n        get: function get() {\n          return this._buffers;\n        }\n      }, {\n        key: \"byteLength\",\n        get: function get() {\n          return this._byteLength;\n        }\n      }, {\n        key: \"byteOffset\",\n        get: function get() {\n          return this._byteOffset;\n        }\n      }, {\n        key: \"getFloat32\",\n        value: function getFloat32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          return this._internalBuffer.getFloat32(0, littleEndian);\n        }\n      }, {\n        key: \"getFloat64\",\n        value: function getFloat64(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          this._internalBuffer.setUint8(4, this.getUint8(byteOffset + 4));\n          this._internalBuffer.setUint8(5, this.getUint8(byteOffset + 5));\n          this._internalBuffer.setUint8(6, this.getUint8(byteOffset + 6));\n          this._internalBuffer.setUint8(7, this.getUint8(byteOffset + 7));\n          return this._internalBuffer.getFloat64(0, littleEndian);\n        }\n      }, {\n        key: \"getInt16\",\n        value: function getInt16(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          return this._internalBuffer.getInt16(0, littleEndian);\n        }\n      }, {\n        key: \"getInt32\",\n        value: function getInt32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          return this._internalBuffer.getInt32(0, littleEndian);\n        }\n      }, {\n        key: \"getInt8\",\n        value: function getInt8(byteOffset) {\n          var _this$_findDataViewWi = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi2 = _slicedToArray__default[\"default\"](_this$_findDataViewWi, 2),\n            dataView = _this$_findDataViewWi2[0],\n            byteOffsetOfDataView = _this$_findDataViewWi2[1];\n          return dataView.getInt8(byteOffset - byteOffsetOfDataView);\n        }\n      }, {\n        key: \"getUint16\",\n        value: function getUint16(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          return this._internalBuffer.getUint16(0, littleEndian);\n        }\n      }, {\n        key: \"getUint32\",\n        value: function getUint32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          return this._internalBuffer.getUint32(0, littleEndian);\n        }\n      }, {\n        key: \"getUint8\",\n        value: function getUint8(byteOffset) {\n          var _this$_findDataViewWi3 = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi4 = _slicedToArray__default[\"default\"](_this$_findDataViewWi3, 2),\n            dataView = _this$_findDataViewWi4[0],\n            byteOffsetOfDataView = _this$_findDataViewWi4[1];\n          return dataView.getUint8(byteOffset - byteOffsetOfDataView);\n        }\n      }, {\n        key: \"setFloat32\",\n        value: function setFloat32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setFloat32(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setFloat64\",\n        value: function setFloat64(byteOffset, value, littleEndian) {\n          this._internalBuffer.setFloat64(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n          this.setUint8(byteOffset + 4, this._internalBuffer.getUint8(4));\n          this.setUint8(byteOffset + 5, this._internalBuffer.getUint8(5));\n          this.setUint8(byteOffset + 6, this._internalBuffer.getUint8(6));\n          this.setUint8(byteOffset + 7, this._internalBuffer.getUint8(7));\n        }\n      }, {\n        key: \"setInt16\",\n        value: function setInt16(byteOffset, value, littleEndian) {\n          this._internalBuffer.setInt16(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        }\n      }, {\n        key: \"setInt32\",\n        value: function setInt32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setInt32(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setInt8\",\n        value: function setInt8(byteOffset, value) {\n          var _this$_findDataViewWi5 = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi6 = _slicedToArray__default[\"default\"](_this$_findDataViewWi5, 2),\n            dataView = _this$_findDataViewWi6[0],\n            byteOffsetOfDataView = _this$_findDataViewWi6[1];\n          dataView.setInt8(byteOffset - byteOffsetOfDataView, value);\n        }\n      }, {\n        key: \"setUint16\",\n        value: function setUint16(byteOffset, value, littleEndian) {\n          this._internalBuffer.setUint16(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        }\n      }, {\n        key: \"setUint32\",\n        value: function setUint32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setUint32(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setUint8\",\n        value: function setUint8(byteOffset, value) {\n          var _this$_findDataViewWi7 = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi8 = _slicedToArray__default[\"default\"](_this$_findDataViewWi7, 2),\n            dataView = _this$_findDataViewWi8[0],\n            byteOffsetOfDataView = _this$_findDataViewWi8[1];\n          dataView.setUint8(byteOffset - byteOffsetOfDataView, value);\n        }\n      }, {\n        key: \"_findDataViewWithOffset\",\n        value: function _findDataViewWithOffset(byteOffset) {\n          var byteOffsetOfDataView = 0;\n          var _iterator2 = _createForOfIteratorHelper(this._dataViews),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var dataView = _step2.value;\n              var byteOffsetOfNextDataView = byteOffsetOfDataView + dataView.byteLength;\n              if (byteOffset >= byteOffsetOfDataView && byteOffset < byteOffsetOfNextDataView) {\n                return [dataView, byteOffsetOfDataView];\n              }\n              byteOffsetOfDataView = byteOffsetOfNextDataView;\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          throw new RangeError();\n        }\n      }]);\n      return MultiBufferDataView;\n    }();\n\n    exports.MultiBufferDataView = MultiBufferDataView;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","module.exports = require(\"./lib\");\n","\"use strict\";var __awaiter=(this&&this.__awaiter)||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}\nreturn new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}\nfunction rejected(value){try{step(generator[\"throw\"](value));}catch(e){reject(e);}}\nfunction step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}\nstep((generator=generator.apply(thisArg,_arguments||[])).next());});};var __generator=(this&&this.__generator)||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),\"throw\":verb(1),\"return\":verb(2)},typeof Symbol===\"function\"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}\nfunction step(op){if(f)throw new TypeError(\"Generator is already executing.\");while(_)try{if(f=1,y&&(t=op[0]&2?y[\"return\"]:op[0]?y[\"throw\"]||((t=y[\"return\"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}\nif(op[0]===3&&(!t||(op[1]>t[0]&&op[1]<t[3]))){_.label=op[1];break;}\nif(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}\nif(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}\nif(t[2])_.ops.pop();_.trys.pop();continue;}\nop=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}\nif(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}};Object.defineProperty(exports,\"__esModule\",{value:true});exports.ReactMediaRecorder=exports.useReactMediaRecorder=exports.RecorderErrors=void 0;var extendable_media_recorder_1=require(\"extendable-media-recorder\");var react_1=require(\"react\");var extendable_media_recorder_wav_encoder_1=require(\"extendable-media-recorder-wav-encoder\");var RecorderErrors;(function(RecorderErrors){RecorderErrors[\"AbortError\"]=\"media_aborted\";RecorderErrors[\"NotAllowedError\"]=\"permission_denied\";RecorderErrors[\"NotFoundError\"]=\"no_specified_media_found\";RecorderErrors[\"NotReadableError\"]=\"media_in_use\";RecorderErrors[\"OverconstrainedError\"]=\"invalid_media_constraints\";RecorderErrors[\"TypeError\"]=\"no_constraints\";RecorderErrors[\"NONE\"]=\"\";RecorderErrors[\"NO_RECORDER\"]=\"recorder_error\";})(RecorderErrors=exports.RecorderErrors||(exports.RecorderErrors={}));function useReactMediaRecorder(_a){var _this=this;var _b=_a.audio,audio=_b===void 0?true:_b,_c=_a.video,video=_c===void 0?false:_c,_d=_a.onStop,onStop=_d===void 0?function(){return null;}:_d,_e=_a.onStart,onStart=_e===void 0?function(){return null;}:_e,blobPropertyBag=_a.blobPropertyBag,_f=_a.screen,screen=_f===void 0?false:_f,_g=_a.mediaRecorderOptions,mediaRecorderOptions=_g===void 0?undefined:_g,_h=_a.customMediaStream,customMediaStream=_h===void 0?null:_h,_j=_a.stopStreamsOnStop,stopStreamsOnStop=_j===void 0?true:_j,_k=_a.askPermissionOnMount,askPermissionOnMount=_k===void 0?false:_k;var mediaRecorder=(0,react_1.useRef)(null);var mediaChunks=(0,react_1.useRef)([]);var mediaStream=(0,react_1.useRef)(null);var _l=(0,react_1.useState)(\"idle\"),status=_l[0],setStatus=_l[1];var _m=(0,react_1.useState)(false),isAudioMuted=_m[0],setIsAudioMuted=_m[1];var _o=(0,react_1.useState)(undefined),mediaBlobUrl=_o[0],setMediaBlobUrl=_o[1];var _p=(0,react_1.useState)(\"NONE\"),error=_p[0],setError=_p[1];(0,react_1.useEffect)(function(){var setup=function(){return __awaiter(_this,void 0,void 0,function(){var _a;return __generator(this,function(_b){switch(_b.label){case 0:_a=extendable_media_recorder_1.register;return[4,(0,extendable_media_recorder_wav_encoder_1.connect)()];case 1:return[4,_a.apply(void 0,[_b.sent()])];case 2:_b.sent();return[2];}});});};setup();},[]);var getMediaStream=(0,react_1.useCallback)(function(){return __awaiter(_this,void 0,void 0,function(){var requiredMedia,stream_1,audioStream,stream,error_1;return __generator(this,function(_a){switch(_a.label){case 0:setStatus(\"acquiring_media\");requiredMedia={audio:typeof audio===\"boolean\"?!!audio:audio,video:typeof video===\"boolean\"?!!video:video,};_a.label=1;case 1:_a.trys.push([1,9,,10]);if(!customMediaStream)return[3,2];mediaStream.current=customMediaStream;return[3,8];case 2:if(!screen)return[3,6];return[4,window.navigator.mediaDevices.getDisplayMedia({video:video||true,})];case 3:stream_1=(_a.sent());stream_1.getVideoTracks()[0].addEventListener(\"ended\",function(){stopRecording();});if(!audio)return[3,5];return[4,window.navigator.mediaDevices.getUserMedia({audio:audio,})];case 4:audioStream=_a.sent();audioStream.getAudioTracks().forEach(function(audioTrack){return stream_1.addTrack(audioTrack);});_a.label=5;case 5:mediaStream.current=stream_1;return[3,8];case 6:return[4,window.navigator.mediaDevices.getUserMedia(requiredMedia)];case 7:stream=_a.sent();mediaStream.current=stream;_a.label=8;case 8:setStatus(\"idle\");return[3,10];case 9:error_1=_a.sent();setError(error_1.name);setStatus(\"idle\");return[3,10];case 10:return[2];}});});},[audio,video,screen]);(0,react_1.useEffect)(function(){if(!window.MediaRecorder){throw new Error(\"Unsupported Browser\");}\nif(screen){if(!window.navigator.mediaDevices.getDisplayMedia){throw new Error(\"This browser doesn\\'t support screen capturing\");}}\nvar checkConstraints=function(mediaType){var supportedMediaConstraints=navigator.mediaDevices.getSupportedConstraints();var unSupportedConstraints=Object.keys(mediaType).filter(function(constraint){return!supportedMediaConstraints[constraint];});if(unSupportedConstraints.length>0){console.error(\"The constraints \".concat(unSupportedConstraints.join(\",\"),\" doesn't support on this browser. Please check your ReactMediaRecorder component.\"));}};if(typeof audio===\"object\"){checkConstraints(audio);}\nif(typeof video===\"object\"){checkConstraints(video);}\nif(mediaRecorderOptions&&mediaRecorderOptions.mimeType){if(!MediaRecorder.isTypeSupported(mediaRecorderOptions.mimeType)){console.error(\"The specified MIME type you supplied for MediaRecorder doesn't support this browser\");}}\nif(!mediaStream.current&&askPermissionOnMount){getMediaStream();}\nreturn function(){if(mediaStream.current){var tracks=mediaStream.current.getTracks();tracks.forEach(function(track){return track.clone().stop();});}};},[audio,screen,video,getMediaStream,mediaRecorderOptions,askPermissionOnMount,]);var startRecording=function(){return __awaiter(_this,void 0,void 0,function(){var isStreamEnded;return __generator(this,function(_a){switch(_a.label){case 0:setError(\"NONE\");if(!!mediaStream.current)return[3,2];return[4,getMediaStream()];case 1:_a.sent();_a.label=2;case 2:if(!mediaStream.current)return[3,5];isStreamEnded=mediaStream.current.getTracks().some(function(track){return track.readyState===\"ended\";});if(!isStreamEnded)return[3,4];return[4,getMediaStream()];case 3:_a.sent();_a.label=4;case 4:if(!mediaStream.current.active){return[2];}\nmediaRecorder.current=new extendable_media_recorder_1.MediaRecorder(mediaStream.current,mediaRecorderOptions||undefined);mediaRecorder.current.ondataavailable=onRecordingActive;mediaRecorder.current.onstop=onRecordingStop;mediaRecorder.current.onstart=onRecordingStart;mediaRecorder.current.onerror=function(){setError(\"NO_RECORDER\");setStatus(\"idle\");};mediaRecorder.current.start();setStatus(\"recording\");_a.label=5;case 5:return[2];}});});};var onRecordingActive=function(_a){var data=_a.data;mediaChunks.current.push(data);};var onRecordingStart=function(){onStart();};var onRecordingStop=function(){var chunk=mediaChunks.current[0];var blobProperty=Object.assign({type:chunk.type},blobPropertyBag||(video?{type:\"video/mp4\"}:{type:\"audio/wav\"}));var blob=new Blob(mediaChunks.current,blobProperty);var url=URL.createObjectURL(blob);setStatus(\"stopped\");setMediaBlobUrl(url);onStop(url,blob);};var muteAudio=function(mute){setIsAudioMuted(mute);if(mediaStream.current){mediaStream.current.getAudioTracks().forEach(function(audioTrack){return(audioTrack.enabled=!mute);});}};var pauseRecording=function(){if(mediaRecorder.current&&mediaRecorder.current.state===\"recording\"){setStatus(\"paused\");mediaRecorder.current.pause();}};var resumeRecording=function(){if(mediaRecorder.current&&mediaRecorder.current.state===\"paused\"){setStatus(\"recording\");mediaRecorder.current.resume();}};var stopRecording=function(){if(mediaRecorder.current){if(mediaRecorder.current.state!==\"inactive\"){setStatus(\"stopping\");mediaRecorder.current.stop();if(stopStreamsOnStop){mediaStream.current&&mediaStream.current.getTracks().forEach(function(track){return track.stop();});}\nmediaChunks.current=[];}}};return{error:RecorderErrors[error],muteAudio:function(){return muteAudio(true);},unMuteAudio:function(){return muteAudio(false);},startRecording:startRecording,pauseRecording:pauseRecording,resumeRecording:resumeRecording,stopRecording:stopRecording,mediaBlobUrl:mediaBlobUrl,status:status,isAudioMuted:isAudioMuted,previewStream:mediaStream.current?new MediaStream(mediaStream.current.getVideoTracks()):null,previewAudioStream:mediaStream.current?new MediaStream(mediaStream.current.getAudioTracks()):null,clearBlobUrl:function(){if(mediaBlobUrl){URL.revokeObjectURL(mediaBlobUrl);}\nsetMediaBlobUrl(undefined);setStatus(\"idle\");},};}\nexports.useReactMediaRecorder=useReactMediaRecorder;var ReactMediaRecorder=function(props){return props.render(useReactMediaRecorder(props));};exports.ReactMediaRecorder=ReactMediaRecorder;","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/toConsumableArray'), require('dashify'), require('indefinite-article')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/toConsumableArray', 'dashify', 'indefinite-article'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.compilerr = {}, global._toConsumableArray, global.dashify, global.indefiniteArticle));\n})(this, (function (exports, _toConsumableArray, dashify, indefiniteArticle) { 'use strict';\n\n    var applyModifiers = function applyModifiers(name, modifiers) {\n      if (modifiers === undefined) {\n        return name;\n      }\n      return modifiers.reduce(function (modifiedName, modifier) {\n        if (modifier === 'capitalize') {\n          var head = modifiedName.charAt(0).toUpperCase();\n          var tail = modifiedName.slice(1);\n          return \"\".concat(head).concat(tail);\n        }\n        if (modifier === 'dashify') {\n          return dashify(modifiedName);\n        }\n        if (modifier === 'prependIndefiniteArticle') {\n          return \"\".concat(indefiniteArticle(modifiedName), \" \").concat(modifiedName);\n        }\n        return modifiedName;\n      }, name);\n    };\n    var buildRegex = function buildRegex(variable) {\n      var expression = variable.name + variable.modifiers.map(function (modifier) {\n        return \"\\\\.\".concat(modifier, \"\\\\(\\\\)\");\n      }).join('');\n      return new RegExp(\"\\\\$\\\\{\".concat(expression, \"}\"), 'g');\n    };\n    var preRenderString = function preRenderString(string, parameters) {\n      var expressionRegex = /\\${([^.}]+)((\\.[^(]+\\(\\))*)}/g;\n      var variables = [];\n      var expressionResult = expressionRegex.exec(string);\n      while (expressionResult !== null) {\n        var variable = {\n          modifiers: [],\n          name: expressionResult[1]\n        };\n        if (expressionResult[3] !== undefined) {\n          var modifiersRegex = /\\.[^(]+\\(\\)/g;\n          var modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n          while (modifiersRegexResult !== null) {\n            variable.modifiers.push(modifiersRegexResult[0].slice(1, -2));\n            modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n          }\n        }\n        variables.push(variable);\n        expressionResult = expressionRegex.exec(string);\n      }\n      var preRenderedParts = variables.reduce(function (parts, variable) {\n        return parts.map(function (part) {\n          if (typeof part === 'string') {\n            return part.split(buildRegex(variable)).reduce(function (prts, prt, index) {\n              if (index === 0) {\n                return [prt];\n              }\n              if (variable.name in parameters) {\n                return [].concat(_toConsumableArray(prts), [applyModifiers(parameters[variable.name], variable.modifiers), prt]);\n              }\n              return [].concat(_toConsumableArray(prts), [function (prmtrs) {\n                return applyModifiers(prmtrs[variable.name], variable.modifiers);\n              }, prt]);\n            }, []);\n          }\n          return [part];\n        }).reduce(function (prts, part) {\n          return [].concat(_toConsumableArray(prts), _toConsumableArray(part));\n        }, []);\n      }, [string]);\n      return function (missingParameters) {\n        return preRenderedParts.reduce(function (renderedParts, preRenderedPart) {\n          if (typeof preRenderedPart === 'string') {\n            return [].concat(_toConsumableArray(renderedParts), [preRenderedPart]);\n          }\n          return [].concat(_toConsumableArray(renderedParts), [preRenderedPart(missingParameters)]);\n        }, []).join('');\n      };\n    };\n    var compile = function compile(template) {\n      var knownParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var renderCode = template.code === undefined ? undefined : preRenderString(template.code, knownParameters);\n      var renderMessage = template.message === undefined ? undefined : preRenderString(template.message, knownParameters);\n      function render() {\n        var causeOrMissingParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var optionalCause = arguments.length > 1 ? arguments[1] : undefined;\n        var hasNoOptionalCause = optionalCause === undefined && (causeOrMissingParameters instanceof Error || causeOrMissingParameters.code !== undefined && causeOrMissingParameters.code.slice(-9) === 'Exception');\n        var _ref = hasNoOptionalCause ? {\n            cause: causeOrMissingParameters,\n            missingParameters: {}\n          } : {\n            cause: optionalCause,\n            missingParameters: causeOrMissingParameters\n          },\n          cause = _ref.cause,\n          missingParameters = _ref.missingParameters;\n        var err = renderMessage === undefined ? new Error() : new Error(renderMessage(missingParameters));\n        if (cause !== null) {\n          err.cause = cause;\n        }\n        if (renderCode !== undefined) {\n          err.code = renderCode(missingParameters);\n        }\n        if (template.status !== undefined) {\n          err.status = template.status;\n        }\n        return err;\n      }\n      return render;\n    };\n\n    exports.compile = compile;\n\n}));\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.fastUniqueNumbers = {}));\n})(this, (function (exports) { 'use strict';\n\n    var createAddUniqueNumber = function createAddUniqueNumber(generateUniqueNumber) {\n      return function (set) {\n        var number = generateUniqueNumber(set);\n        set.add(number);\n        return number;\n      };\n    };\n\n    var createCache = function createCache(lastNumberWeakMap) {\n      return function (collection, nextNumber) {\n        lastNumberWeakMap.set(collection, nextNumber);\n        return nextNumber;\n      };\n    };\n\n    /*\n     * The value of the constant Number.MAX_SAFE_INTEGER equals (2 ** 53 - 1) but it\n     * is fairly new.\n     */\n    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER === undefined ? 9007199254740991 : Number.MAX_SAFE_INTEGER;\n    var TWO_TO_THE_POWER_OF_TWENTY_NINE = 536870912;\n    var TWO_TO_THE_POWER_OF_THIRTY = TWO_TO_THE_POWER_OF_TWENTY_NINE * 2;\n    var createGenerateUniqueNumber = function createGenerateUniqueNumber(cache, lastNumberWeakMap) {\n      return function (collection) {\n        var lastNumber = lastNumberWeakMap.get(collection);\n        /*\n         * Let's try the cheapest algorithm first. It might fail to produce a new\n         * number, but it is so cheap that it is okay to take the risk. Just\n         * increase the last number by one or reset it to 0 if we reached the upper\n         * bound of SMIs (which stands for small integers). When the last number is\n         * unknown it is assumed that the collection contains zero based consecutive\n         * numbers.\n         */\n        var nextNumber = lastNumber === undefined ? collection.size : lastNumber < TWO_TO_THE_POWER_OF_THIRTY ? lastNumber + 1 : 0;\n        if (!collection.has(nextNumber)) {\n          return cache(collection, nextNumber);\n        }\n        /*\n         * If there are less than half of 2 ** 30 numbers stored in the collection,\n         * the chance to generate a new random number in the range from 0 to 2 ** 30\n         * is at least 50%. It's benifitial to use only SMIs because they perform\n         * much better in any environment based on V8.\n         */\n        if (collection.size < TWO_TO_THE_POWER_OF_TWENTY_NINE) {\n          while (collection.has(nextNumber)) {\n            nextNumber = Math.floor(Math.random() * TWO_TO_THE_POWER_OF_THIRTY);\n          }\n          return cache(collection, nextNumber);\n        }\n        // Quickly check if there is a theoretical chance to generate a new number.\n        if (collection.size > MAX_SAFE_INTEGER) {\n          throw new Error('Congratulations, you created a collection of unique numbers which uses all available integers!');\n        }\n        // Otherwise use the full scale of safely usable integers.\n        while (collection.has(nextNumber)) {\n          nextNumber = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n        }\n        return cache(collection, nextNumber);\n      };\n    };\n\n    var LAST_NUMBER_WEAK_MAP = new WeakMap();\n    var cache = createCache(LAST_NUMBER_WEAK_MAP);\n    var generateUniqueNumber = createGenerateUniqueNumber(cache, LAST_NUMBER_WEAK_MAP);\n    var addUniqueNumber = createAddUniqueNumber(generateUniqueNumber);\n\n    exports.addUniqueNumber = addUniqueNumber;\n    exports.generateUniqueNumber = generateUniqueNumber;\n\n}));\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["PORT_MAP","WeakMap","ONGOING_REQUESTS","createBroker","brokerImplementation","fullBrokerImplementation","partialBrokerImplementation","connect","call","async","port1","port2","MessageChannel","portId","port","set","disconnect","get","undefined","Error","isSupported","sender","ongoingRequests","has","Map","createOrGetOngoingRequests","addEventListener","data","message","id","reject","resolve","delete","error","result","start","isMessagePort","method","params","transferables","Promise","postMessage","notify","functions","key","handler","Object","entries","module","exports","str","options","TypeError","trim","replace","m","test","condense","toLowerCase","wrap","characterize","encode","recordingId","timeslice","record","sampleRate","typedArrays","map","buffer","blob","Blob","type","url","URL","createObjectURL","extendableMediaRecorderWavEncoder","worker","Worker","load","revokeObjectURL","encoderIds","Set","encoderId","arrayBuffers","instantiate","mimeType","register","mediaEncoderHost","createInvalidModificationError","DOMException","err","code","name","createNotSupportedError","observable","Symbol","noop","rethrow","emitNotSupportedError","observer","window","wrapSubscribeFunction","patch","toObserver","emptyFunction","innerSubscribe","subscribe","args","unsubscribe","isNextFunction","next","createWrapSubscribeFunction","arg","prototype","complete","bind","mutations","createAnimationFrame","htmlElement","MutationObserver","mutationObserver","records","observe","createMutations","mapSubscribableThing","subscribableThing","value","createMapSubscribableThing","prependSubscribableThing","prependedValue","createPrependSubscribableThing","on","createAttribute","createGeolocation","createIntersections","createMediaDevices","createMediaQueryMatch","createMetrics","createMidiInputs","createMidiOutputs","target","listener","event","removeEventListener","createOn","JSON_RPC_ERROR_CODES","addRecorderAudioWorkletModule","compile","status","blobConstructor","urlConstructor","worklet","addAudioWorkletModule","createAddRecorderAudioWorkletModule","createRecorderAudioWorkletNode","createListener","createPostMessage","validateState","audioWorkletNodeConstructor","context","audioWorkletNode","channelCountMode","numberOfInputs","numberOfOutputs","state","defineProperties","pause","encoderPort","resume","stop","createRecorderAudioWorkletNodeFactory","ongoingRequest","generateUniqueNumber","createPostMessageFactory","expectedStates","currentState","includes","expectedState","join","createExtendedExponentialRampToValueAutomationEvent","endTime","insertTime","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","timeConstant","Math","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","index","defaultValue","length","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","getLinearRampValueAtTime","getValueCurveValueAtTime","theoreticIndex","lowerIndex","floor","upperIndex","ceil","interpolateValue","isSetTargetAutomationEvent","AutomationEventList","constructor","this","_automationEvents","_currenTime","_defaultValue","iterator","add","eventTime","findIndex","removedAutomationEvent","slice","lastAutomationEvent","startValue","truncatedAutomationEvent","push","getValue","ratio","max","fraction","i","factor","previousAutomationEvent","persistentAutomationEvent","splice","flush","remainingAutomationEvents","firstRemainingAutomationEvent","unshift","indexOfNextEvent","indexOfCurrentEvent","ACTIVE_AUDIO_NODE_STORE","WeakSet","AUDIO_NODE_CONNECTIONS_STORE","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","construct","IMPORT_STATEMENT_REGEX","splitImportStatements","source","importStatements","sourceWithoutImportStatements","match","unresolvedUrl","importStatementWithResolvedUrl","toString","verifyParameterDescriptors","parameterDescriptors","Array","isArray","verifyProcessorCtor","processorCtor","constructible","Proxy","isConstructible","getValueForKey","pickElementFromSet","predicate","matchingElements","from","filter","matchingElement","deletePassiveInputConnectionToAudioNode","passiveInputs","output","input","passiveInputConnections","matchingConnection","passiveInputConnection","size","getEventListenersOfAudioNode","audioNode","setInternalStateToActive","forEach","eventListener","isAudioWorkletNode","setInternalStateToPassive","setInternalStateToPassiveWhenNecessary","activeInputs","every","connections","DEFAULT_OPTIONS","channelCount","channelInterpretation","fftSize","maxDecibels","minDecibels","smoothingTimeConstant","isOwnedByContext","nativeAudioNode","nativeContext","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","copyToChannel","Float32Array","createIndexSizeError","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","channel","numberOfChannels","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","isActiveAudioNode","loop","loopEnd","loopStart","playbackRate","getAudioNodeConnections","getAudioParamConnections","audioParam","deactivateActiveAudioNodeInputConnections","trace","audioParams","isAudioBufferSourceNode","parameters","isBiquadFilterNode","Q","detune","frequency","gain","isConstantSourceNode","offset","isGainNode","isOscillatorNode","isStereoPannerNode","pan","audioParamConnections","deactivateAudioGraph","destination","isValidLatencyHint","latencyHint","isAudioNode","audioNodeOrAudioParam","isAudioNodeOutputConnection","outputConnection","insertElementInSet","element","ignoreDuplicates","lmnt","addActiveInputConnectionToAudioParam","activeInputConnection","addPassiveInputConnectionToAudioParam","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","connectNativeAudioNodeToNativeAudioNode","nativeSourceAudioNode","nativeDestinationAudioNode","fakeNativeDestinationAudioNode","inputs","deleteActiveInputConnection","activeInputConnections","deleteEventListenerOfAudioNode","deletePassiveInputConnectionToAudioParam","disconnectNativeAudioNodeFromNativeAudioNode","getNativeAudioNode","getNativeAudioParam","isPartOfACycle","isPassiveAudioNode","testAudioNodeDisconnectMethodSupport","nativeAudioContext","nativeAudioWorkletNodeConstructor","analyzer","createScriptProcessor","dummy","createGain","ones","createBuffer","channelData","createBufferSource","onaudioprocess","chnnlDt","inputBuffer","some","sample","visitEachAudioNodeOnce","cycles","visitor","counts","cycle","count","isNativeAudioNode","nativeAudioNodeOrAudioParam","wrapAudioNodeDisconnectMethod","returnValue","connectionsToDestination","connection","destinationOrOutput","apply","clear","filteredConnections","addConnectionToAudioParamOfAudioContext","isOffline","outputs","eventListeners","isActive","nativeAudioParam","partialConnection","deleteActiveInputConnectionToAudioParam","deleteInputsOfAudioNode","deleteInputConnectionOfAudioNode","deleteInputsOfAudioParam","deleteInputConnectionOfAudioParam","ReadOnlyMap","_map","callback","thisArg","keys","parameterData","processorOptions","copyFromChannel","parent","channelNumber","bufferOffset","byteLength","slicedInput","BYTES_PER_ELEMENT","createNestedArrays","x","y","arrays","array","j","processBuffer","proxy","renderedBuffer","nativeOfflineAudioContext","outputChannelCount","processorConstructor","exposeCurrentFrameAndCurrentTime","numberOfInputChannels","numberOfOutputChannels","reduce","sum","processedBuffer","audioNodeConnections","audioWorkletProcessor","nodeToProcessorMap","nativeAudioWorkletNode","getAudioWorkletProcessor","prmtrs","k","potentiallyEmptyInputs","activeSourceFlag","process","outputChannelSplitterNodeOutput","dispatchEvent","ErrorEvent","colno","filename","lineno","disableNormalization","detachArrayBuffer","arrayBuffer","closeAndResolve","onmessage","close","delayTime","maxDelayTime","getOutputAudioNodeAtIndex","outputAudioNodes","outputAudioNode","attack","knee","release","threshold","createInvalidAccessError","filterBuffer","feedback","feedbackLength","feedforward","feedforwardLength","minLength","xBuffer","yBuffer","bufferIndex","bufferLength","inputLength","testPromiseSupport","uint32Array","Uint32Array","promise","decodeAudioData","catch","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","nativeAnalyserNode","getFloatTimeDomainData","assignNativeAudioNodeAudioParamValue","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","nativeAudioScheduledSourceNode","when","RangeError","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","computeBufferSize","baseLatency","min","pow","round","log2","createAudioWorkletProcessorPromise","audioWorkletNodeOptions","clonedAudioWorkletNodeOptions","onmessageerror","cloneAudioWorkletNodeOptions","createNativeBiquadFilterNode","nativeBiquadFilterNode","createBiquadFilter","createNativeChannelSplitterNode","nativeChannelSplitterNode","createChannelSplitter","channelSplitterNode","defineProperty","wrapChannelSplitterNode","interceptConnections","original","interceptor","createNativeDelayNode","nativeDelayNode","createDelay","createNativeGainNode","nativeGainNode","divide","a","b","denominator","evaluatePolynomial","coefficient","z","createNativeScriptProcessorNode","bufferSize","periodicWave","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationX","orientationY","orientationZ","panningModel","positionX","positionY","positionZ","refDistance","rolloffFactor","createUnknownError","curve","oversample","getFirstSample","isDCCurve","overwriteAccessors","object","property","createGetter","createSetter","hasOwnProperty","getPrototypeOf","getOwnPropertyDescriptor","setValueAtTimeUntilPossible","setValueAtTime","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","nativeAudioBufferSourceNode","createOscillator","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","disconnectGainNode","isStopped","wrapEventListener","descriptor","currentTarget","handleEvent","addActiveInputConnectionToAudioNode","createAddActiveInputConnectionToAudioNode","addPassiveInputConnectionToAudioNode","createAddPassiveInputConnectionToAudioNode","deleteActiveInputConnectionToAudioNode","createDeleteActiveInputConnectionToAudioNode","audioNodeTailTimeStore","getAudioNodeTailTime","_a","createGetAudioNodeTailTime","cacheTestResult","ongoingTests","testResults","tester","cachedTestResult","ongoingTest","synchronousTestResult","then","finalTestResult","createNativeAnalyserNode","createAnalyser","byteTimeDomainData","Uint8Array","getByteTimeDomainData","wrapAnalyserNodeGetFloatTimeDomainDataMethod","createNativeAnalyserNodeFactory","getAudioNodeRenderer","renderer","createGetAudioNodeRenderer","renderInputsOfAudioNode","all","audioNodeRenderer","renderedNativeAudioNode","render","allRenderingPromises","renderingPromises","createRenderInputsOfAudioNode","createAnalyserNodeRenderer","renderedNativeAnalyserNodes","renderedNativeAnalyserNode","createAnalyserNode","createAnalyserNodeRendererFactory","getNativeContext","contextStore","nativeOfflineAudioContextConstructor","OfflineAudioContext","webkitOfflineAudioContext","createNativeOfflineAudioContextConstructor","isNativeOfflineAudioContext","anything","createIsNativeOfflineAudioContext","audioParamAudioNodeStore","eventTargetConstructor","_nativeEventTarget","_listeners","wrappedEventListener","nativeAudioContextConstructor","AudioContext","webkitAudioContext","createNativeAudioContextConstructor","isNativeAudioContext","createIsNativeAudioContext","AudioNode","createIsNativeAudioNode","isNativeAudioParam","AudioParam","createIsNativeAudioParam","AudioWorkletNode","createNativeAudioWorkletNodeConstructor","audioNodeConstructor","addAudioNodeConnections","addConnectionToAudioNode","createIncrementCycleCounter","decrementCycleCounter","detectCycles","super","_context","_nativeAudioNode","isPassive","maxValue","destinations","audioNodeConnectionsOfSource","deleteAnyConnection","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioNodeConstructor","audioNodeConnectionsStore","tailTimeTimeoutIds","tailTime","tailTimeTimeoutId","clearTimeout","setTimeout","createAddConnectionToAudioNode","cycleCounters","cycleCounter","nativeDestinationAudioParam","createIncrementCycleCounterFactory","createDecrementCycleCounter","chain","nextLink","isDelayNode","mergedCycles","nestedCycles","concat","createDetectCycles","analyserNodeConstructor","audionNodeConstructor","mergedOptions","_nativeAnalyserNode","frequencyBinCount","getByteFrequencyData","getFloatFrequencyData","createAnalyserNodeConstructor","audioBufferStore","nativeAudioBufferConstructor","AudioBuffer","createNativeAudioBufferConstructor","convertNumberToUnsignedLong","unit32Array","wrapAudioBufferCopyChannelMethods","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferCopyChannelMethodsOutOfBounds","audioBufferConstructor","testNativeAudioBufferConstructorSupport","hasInstance","instance","createAudioBufferConstructor","createTestAudioBufferConstructorSupport","addSilentConnection","createAddSilentConnection","renderInputsOfAudioParam","createRenderInputsOfAudioParam","connectAudioParam","createConnectAudioParam","createNativeAudioBufferSourceNode","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","isScheduled","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","createNativeAudioBufferSourceNodeFactory","clampedOffset","nullifiedBuffer","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","renderAutomation","getAudioParamRenderer","replay","createRenderAutomation","createGetAudioParamRenderer","createAudioBufferSourceNodeRenderer","renderedNativeAudioBufferSourceNodes","renderedNativeAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","createAudioBufferSourceNode","createAudioBufferSourceNodeRendererFactory","createAudioParam","addAudioParamConnections","audioParamStore","createAudioParamRenderer","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","isAudioParamOfOfflineAudioContext","minValue","automationEventList","audioParamRenderer","currentTime","cancelAndHoldAtTime","previousLastEvent","pop","currentLastEvent","cancelScheduledValues","exponentialRampToValueAtTime","linearRampToValueAtTime","setValueCurveAtTime","Number","isFinite","setTargetAtTime","convertedValues","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","createAudioParamFactory","audioParamConnectionsStore","audioBufferSourceNodeConstructor","createInvalidStateError","audioBufferSourceNodeRenderer","_audioBufferSourceNodeRenderer","_isBufferNullified","_isBufferSet","_nativeAudioBufferSourceNode","_onended","_playbackRate","onended","wrappedListener","nativeOnEnded","resetInternalStateToPassive","createAudioBufferSourceNodeConstructor","audioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","maxChannelCount","createAudioDestinationNodeConstructor","renderedNativeAudioDestinationNodes","renderedNativeAudioDestinationNode","createAudioDestinationNode","isNodeOfNativeOfflineAudioContext","gainNode","createNativeAudioDestinationNodeFactory","createBiquadFilterNodeRenderer","renderedNativeBiquadFilterNodes","renderedNativeBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","createBiquadFilterNode","createBiquadFilterNodeRendererFactory","setAudioNodeTailTime","createSetAudioNodeTailTime","biquadFilterNodeConstructor","_Q","_detune","_frequency","_gain","log10","_nativeBiquadFilterNode","getFrequencyResponse","frequencyHz","magResponse","phaseResponse","createBiquadFilterNodeConstructor","monitorConnections","whenConnected","whenDisconnected","wasDisconnected","wasConnected","isDisconnected","createMonitorConnections","wrapChannelMergerNode","channelMergerNode","audioBufferSourceNode","createWrapChannelMergerNode","createNativeChannelMergerNode","nativeChannelMergerNode","createChannelMerger","createNativeChannelMergerNodeFactory","createChannelMergerNodeRenderer","renderedNativeAudioNodes","createAudioNode","createChannelMergerNodeRendererFactory","channelMergerNodeConstructor","createChannelMergerNodeConstructor","createChannelSplitterNodeRenderer","createChannelSplitterNodeRendererFactory","channelSplitterNodeConstructor","sanitizeChannelSplitterOptions","createChannelSplitterNodeConstructor","createNativeConstantSourceNodeFaker","audioNodeOptions","nativeConstantSourceNodeFaker","createNativeConstantSourceNodeFakerFactory","createNativeConstantSourceNode","createConstantSource","nativeConstantSourceNode","createNativeConstantSourceNodeFactory","createConstantSourceNodeRenderer","renderedNativeConstantSourceNodes","renderedNativeConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","createConstantSourceNode","createConstantSourceNodeRendererFactory","constantSourceNodeConstructor","constantSourceNodeRenderer","_constantSourceNodeRenderer","_nativeConstantSourceNode","_offset","createConstantSourceNodeConstructor","createNativeConvolverNode","nativeConvolverNode","createConvolver","normalize","createNativeConvolverNodeFactory","createConvolverNodeRenderer","renderedNativeConvolverNodes","renderedNativeConvolverNode","createConvolverNode","createConvolverNodeRendererFactory","convolverNodeConstructor","_nativeConvolverNode","createConvolverNodeConstructor","createDelayNodeRenderer","renderedNativeDelayNodes","renderedNativeDelayNode","nativeDelayNodeIsOwnedByContext","createDelayNode","createDelayNodeRendererFactory","delayNodeConstructor","_delayTime","createDelayNodeConstructor","createNativeDynamicsCompressorNode","nativeDynamicsCompressorNode","createDynamicsCompressor","createNativeDynamicsCompressorNodeFactory","createDynamicsCompressorNodeRenderer","renderedNativeDynamicsCompressorNodes","renderedNativeDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","createDynamicsCompressorNode","createDynamicsCompressorNodeRendererFactory","dynamicsCompressorNodeConstructor","_attack","_knee","_nativeDynamicsCompressorNode","_ratio","_release","_threshold","previousChannelCount","reduction","createDynamicsCompressorNodeConstructor","createGainNodeRenderer","renderedNativeGainNodes","renderedNativeGainNode","nativeGainNodeIsOwnedByContext","createGainNode","createGainNodeRendererFactory","gainNodeConstructor","createGainNodeConstructor","createNativeIIRFilterNodeFaker","convertedFeedback","Float64Array","convertedFeedforward","scriptProcessorNode","bufferIndexes","xBuffers","yBuffers","fill","outputBuffer","nyquist","omega","PI","cos","sin","response","sqrt","atan2","createNativeIIRFilterNodeFakerFactory","renderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","oncomplete","startRendering","createRenderNativeOfflineAudioContext","createTestOfflineAudioContextCurrentTimeSupport","createIIRFilterNodeRenderer","filteredBufferPromise","nativeIIRFilterNode","nativeIIRFilterNodeIsOwnedByContext","createIIRFilter","partialOfflineAudioContext","filteredBuffer","filterFullBuffer","createIIRFilterNodeRendererFactory","createNativeIIRFilterNode","createNativeIIRFilterNodeFactory","iIRFilterNodeConstructor","wrapIIRFilterNodeGetFrequencyResponseMethod","_nativeIIRFilterNode","createIIRFilterNodeConstructor","createAudioListener","nativeListener","forwardX","forwardY","forwardZ","upX","upY","upZ","isScriptProcessorNodeCreated","lastOrientation","lastPosition","createScriptProcessorNode","orientation","setOrientation","positon","setPosition","createSetOrientation","createSetPosition","createFakeAudioParam","initialValue","setValue","constantSourceNode","createFakeAudioParams","createAudioListenerFactory","unrenderedAudioWorkletNodeStore","minimalBaseAudioContextConstructor","_nativeContext","_destination","_listener","_onstatechange","onstatechange","nativeOnStateChange","createMinimalBaseAudioContextConstructor","createNativeOscillatorNode","nativeOscillatorNode","setPeriodicWave","createNativeOscillatorNodeFactory","createOscillatorNodeRenderer","renderedNativeOscillatorNodes","renderedNativeOscillatorNode","nativeOscillatorNodeIsOwnedByContext","createOscillatorNode","createOscillatorNodeRendererFactory","oscillatorNodeConstructor","oscillatorNodeRenderer","_nativeOscillatorNode","_oscillatorNodeRenderer","createOscillatorNodeConstructor","createConnectedNativeAudioBufferSourceNode","createConnectedNativeAudioBufferSourceNodeFactory","createNativeWaveShaperNodeFaker","negativeWaveShaperNode","createWaveShaper","positiveWaveShaperNode","inputGainNode","invertGainNode","outputGainNode","revertGainNode","disconnectNativeAudioBufferSourceNode","isConnected","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","centerIndex","createNativeWaveShaperNodeFakerFactory","createNativeWaveShaperNode","nativeWaveShaperNode","automationRate","createNativeWaveShaperNodeFactory","createNativePannerNodeFaker","pannerNode","createPanner","SINGLE_CHANNEL_OPTIONS","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","nativePannerNodeFaker","createNativePannerNodeFakerFactory","createNativePannerNode","nativePannerNode","createNativePannerNodeFactory","createPannerNodeRenderer","renderedBufferPromise","renderedNativeGainNodeOrNativePannerNode","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","createPannerNodeRendererFactory","pannerNodeConstructor","_nativePannerNode","_orientationX","_orientationY","_orientationZ","_positionX","_positionY","_positionZ","createPannerNodeConstructor","createNativePeriodicWave","imag","real","convertedImag","convertedReal","nativePeriodicWave","createPeriodicWave","createNativePeriodicWaveFactory","periodicWaveConstructor","periodicWaveStore","sanitizePeriodicWaveOptions","PeriodicWave","createPeriodicWaveConstructor","nativeStereoPannerNodeFakerFactory","CURVE_SIZE","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraph","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","connectGraph","disconnectGraph","buildInternalGraphForMono","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","buildInternalGraphForStereo","createNativeStereoPannerNodeFakerFactory","createNativeStereoPannerNode","createNativeStereoPannerNodeFaker","createStereoPanner","nativeStereoPannerNode","createNativeStereoPannerNodeFactory","createStereoPannerNodeRenderer","renderedNativeStereoPannerNodes","renderedNativeStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","createStereoPannerNode","createStereoPannerNodeRendererFactory","stereoPannerNodeConstructor","_pan","createStereoPannerNodeConstructor","createWaveShaperNodeRenderer","renderedNativeWaveShaperNodes","renderedNativeWaveShaperNode","createWaveShaperNode","createWaveShaperNodeRendererFactory","waveShaperNodeConstructor","_isCurveNullified","_nativeWaveShaperNode","createWaveShaperNodeConstructor","isSecureContext","createIsSecureContext","fn","currentFrame","configurable","createExposeCurrentFrameAndCurrentTime","backupOfflineAudioContextStore","getOrCreateBackupOfflineAudioContext","backupOfflineAudioContext","createGetOrCreateBackupOfflineAudioContext","evaluateSource","fetchSource","resolvedRequests","testAudioWorkletProcessorPostMessageSupport","moduleURL","credentials","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","audioWorklet","absoluteUrl","evaluateAudioWorkletGlobalScope","_AWGS","SyntaxError","nodeNameToProcessorConstructorMap","isSupportingPostMessage","currentIndex","addModule","nativeContextOrBackupOfflineAudioContext","finally","updatedResolvedRequestsOfContext","updatedOngoingRequestsOfContext","createAddAudioWorkletModule","head","document","script","createElement","originalOnErrorHandler","onerror","removeErrorEventListenerAndRevokeUrl","src","location","href","onload","appendChild","createEvaluateSource","createAbortError","fetch","ok","text","createFetchSource","offlineAudioContext","isEmittingMessageEvents","isEmittingProcessorErrorEvents","oscillator","onprocessorerror","createTestAudioWorkletProcessorPostMessageSupport","isNativeContext","createIsNativeContext","createDataCloneError","createEncodingError","detachedArrayBuffers","anyContext","audioData","fail","createDecodeAudioData","baseAudioContextConstructor","_audioWorklet","constraints","successCallback","errorCallback","createBaseAudioContextConstructor","mediaElementAudioSourceNodeConstructor","createNativeMediaElementAudioSourceNode","nativeMediaElementAudioSourceNode","_nativeMediaElementAudioSourceNode","mediaElement","createMediaElementAudioSourceNodeConstructor","createMediaElementSource","mediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioDestinationNode","nativeMediaStreamAudioDestinationNode","_nativeMediaStreamAudioDestinationNode","stream","createMediaStreamAudioDestinationNodeConstructor","createMediaStreamDestination","mediaStreamAudioSourceNodeConstructor","createNativeMediaStreamAudioSourceNode","nativeMediaStreamAudioSourceNode","_nativeMediaStreamAudioSourceNode","mediaStream","createMediaStreamAudioSourceNodeConstructor","audioStreamTracks","getAudioTracks","sort","filteredAudioStreamTracks","createMediaStreamSource","MediaStream","createNativeMediaStreamTrackAudioSourceNode","mediaStreamTrack","createMediaStreamTrackSource","kind","createNativeMediaStreamTrackAudioSourceNodeFactory","mediaStreamTrackAudioSourceNodeConstructor","createMediaStreamTrackAudioSourceNodeConstructor","getUnrenderedAudioWorkletNodes","createAudioContextConstructor","unrenderedAudioWorkletNodes","createGetUnrenderedAudioWorkletNodes","addUnrenderedAudioWorkletNode","createAddUnrenderedAudioWorkletNode","connectMultipleOutputs","createConnectMultipleOutputs","deleteUnrenderedAudioWorkletNode","createDeleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","createDisconnectMultipleOutputs","activeAudioWorkletNodeInputsStore","getActiveAudioWorkletNodeInputs","createGetActiveAudioWorkletNodeInputs","createNativeAudioWorkletNodeFaker","numberOfParameters","messageChannel","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","outputChannelSplitterNode","outputChannelMergerNodes","parameterMap","nativeAudioWorkletNodeFaker","_","patchedEventListeners","unpatchedEventListener","patchedEventListener","audioWorkletProcessorPromise","createAudioWorkletProcessor","dWrkltPrcssr","disconnectOutputsGraph","outputChannelMergerNode","activeInputIndexes","disconnectFakeGraph","connectFakeGraph","createNativeAudioWorkletNodeFakerFactory","createNativeAudioWorkletNode","testClonabilityOfAudioWorkletNodeOptions","createNativeAudioWorkletNodeFactory","createAudioWorkletNodeRenderer","processedBufferPromise","renderedNativeAudioWorkletNodeOrGainNode","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","renderBuffer","nm","createAudioWorkletNodeRendererFactory","getBackupOfflineAudioContext","createGetBackupOfflineAudioContext","setActiveAudioWorkletNodeInputs","createSetActiveAudioWorkletNodeInputs","sanitizeAudioWorkletNodeOptions","testAudioWorkletNodeOptionsClonability","_nativeAudioWorkletNode","_onprocessorerror","_parameters","nativeOnProcessorError","createAudioWorkletNodeConstructor","minimalAudioContextConstructor","_baseLatency","_nativeAudioContext","_nativeGainNode","_state","revokeState","resolvePromise","suspend","createMinimalAudioContextConstructor","createNativeOfflineAudioContext","createCreateNativeOfflineAudioContext","createStartRendering","ERROR_MESSAGE","createMinimalOfflineAudioContextConstructor","createOfflineAudioContextConstructor","createIsAnyAudioContext","audioNodeStore","createIsAnyAudioNode","createIsAnyAudioParam","createIsAnyOfflineAudioContext","readVariableSizeIntegerLength","dataView","byte","getUint8","encoderRegexes","createBlobEvent","nativeBlobEventConstructor","blobEventInit","eventInit","fakeBlobEvent","Event","createBlobEventFactory","BlobEvent","createNativeBlobEventConstructor","createWebAudioMediaRecorder","eventTarget","getSettings","audioContext","bufferedArrayBuffers","promisedAudioWorkletModule","abortRecording","intervalId","promisedAudioNodesAndEncoderId","promisedPartialRecording","isAudioContextRunning","dispatchDataAvailableEvent","requestNextPartialRecording","mediaStreamAudioSourceNode","recorderAudioWorkletNode","getVideoTracks","audioTracks","createPromisedAudioNodesEncoderIdAndPort","tracks","getTracks","setInterval","currentTracks","track","createWebAudioMediaRecorderFactory","readVariableSizeInteger","firstDataByteOffset","createReadVariableSizeInteger","readElementContent","lengthAndValue","content","numberOfSamples","elementOffset","getFloat32","createReadElementContent","readElementType","createReadElementType","decodeWebMChunk","elementType","contents","currentElementType","lengthAndType","contentAndLength","createDecodeWebMChunk","createWebmPcmMediaRecorder","nativeMediaRecorderConstructor","nativeMediaRecorder","stopRecording","isRecording","pendingInvocations","promisedDataViewElementTypeEncoderIdAndPort","currentDataView","MultiBufferDataView","buffers","byteOffset","remainingDataView","createWebmPcmMediaRecorderFactory","createEventTarget","createEventTargetFactory","MediaRecorder","createNativeMediaRecorderConstructor","createNativeMediaRecorder","mediaRecorderOptions","bufferedBlobs","dataAvailableListeners","errorListeners","stopListeners","wasActive","dataAvailableListener","errorListener","stopListener","startsWith","createNativeMediaRecorderFactory","mediaRecorderConstructor","isTypeSupported","internalMediaRecorder","_internalMediaRecorder","regex","_ondataavailable","_onerror","_onpause","_onresume","_onstart","_onstop","ondataavailable","boundListener","onpause","onresume","onstart","onstop","createMediaRecorderConstructor","nativeEventTarget","createEventTargetConstructor","canvasElement","getContext","captureStream","mediaRecorder","MAX_SAFE_INTEGER","TWO_TO_THE_POWER_OF_TWENTY_NINE","TWO_TO_THE_POWER_OF_THIRTY","LAST_NUMBER_WEAK_MAP","lastNumberWeakMap","cache","collection","lastNumber","nextNumber","random","createGenerateUniqueNumber","addUniqueNumber","number","createAddUniqueNumber","VideoUploader","setStatus","useState","mediaBlobUrl","setMediaBlobUrl","React","ReactMediaRecorder","video","_ref","startRecording","onClick","controls","autoPlay","onStop","blobUrl","onSaveRecording","onDiscardRecording","indefiniteArticle","phrase","word","exec","l_word","alt_cases","indexOf","regexes","toUpperCase","_slicedToArray","_classCallCheck","_createClass","_interopDefaultLegacy","e","_slicedToArray__default","_classCallCheck__default","_createClass__default","_createForOfIteratorHelper","o","allowArrayLike","it","_unsupportedIterableToArray","F","s","n","done","_e","f","normalCompletion","didErr","step","_e2","minLen","_arrayLikeToArray","arr","len","arr2","arguments","availableBytes","_step","dataViews","effectiveByteLength","truncatedBuffers","consumedByteLength","truncatedByteOffset","_iterator","byteLengthOfDataView","DataView","_byteLengthOfDataView","_buffers","_byteLength","_byteOffset","_dataViews","_internalBuffer","ArrayBuffer","littleEndian","setUint8","getFloat64","getInt16","getInt32","_this$_findDataViewWi","_findDataViewWithOffset","_this$_findDataViewWi2","byteOffsetOfDataView","getInt8","getUint16","getUint32","_this$_findDataViewWi3","_this$_findDataViewWi4","setFloat32","setFloat64","setInt16","setInt32","_this$_findDataViewWi5","_this$_findDataViewWi6","setInt8","setUint16","setUint32","_this$_findDataViewWi7","_this$_findDataViewWi8","_step2","_iterator2","byteOffsetOfNextDataView","factory","__awaiter","_arguments","P","generator","fulfilled","rejected","__generator","body","t","g","label","sent","trys","ops","verb","v","op","useReactMediaRecorder","RecorderErrors","extendable_media_recorder_1","react_1","extendable_media_recorder_wav_encoder_1","_this","_b","audio","_c","_d","onStart","blobPropertyBag","_f","screen","_g","_h","customMediaStream","_j","stopStreamsOnStop","_k","askPermissionOnMount","useRef","mediaChunks","_l","_m","isAudioMuted","setIsAudioMuted","_o","_p","setError","useEffect","getMediaStream","useCallback","requiredMedia","stream_1","error_1","current","navigator","mediaDevices","getDisplayMedia","getUserMedia","audioTrack","addTrack","checkConstraints","mediaType","supportedMediaConstraints","getSupportedConstraints","unSupportedConstraints","constraint","console","clone","onRecordingActive","onRecordingStart","onRecordingStop","chunk","blobProperty","assign","muteAudio","mute","enabled","unMuteAudio","readyState","active","pauseRecording","resumeRecording","previewStream","previewAudioStream","clearBlobUrl","props","_toConsumableArray","dashify","applyModifiers","modifiers","modifiedName","modifier","charAt","tail","buildRegex","variable","expression","RegExp","preRenderString","string","expressionRegex","variables","expressionResult","modifiersRegex","modifiersRegexResult","preRenderedParts","parts","part","split","prts","prt","missingParameters","renderedParts","preRenderedPart","template","knownParameters","renderCode","renderMessage","causeOrMissingParameters","optionalCause","cause","createCache","__esModule","arrayLikeToArray","Constructor","toPropertyKey","_defineProperties","enumerable","writable","protoProps","staticProps","iter","_i","_s","_x","_r","_arr","_n","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","_typeof","hint","prim","toPrimitive","res","String","obj"],"sourceRoot":""}