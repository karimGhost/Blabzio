{"version":3,"file":"component---src-pages-news-video-recorder-js-950d448b57e89bb1b6b8.js","mappings":"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","sources":["webpack://blabzio/./src/pages/news/VideoRecorder.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nconst VideoRecorder = () => {\n    const mimeType = \"video/webm\";\n    \nconst [permission, setPermission] = useState(false);\nconst mediaRecorder = useRef(null);\nconst liveVideoFeed = useRef(null);\nconst [recordingStatus, setRecordingStatus] = useState(\"inactive\");\nconst [stream, setStream] = useState(null);\nconst [videoChunks, setVideoChunks] = useState([]);\nconst [recordedVideo, setRecordedVideo] = useState(null);\n  \n\nconst [facingMode, setFacingMode] = useState(\"user\"); // \"user\" for front camera, \"environment\" for back camera\n\n  \n\n    \nconst getCameraPermission = async () => {\n  setRecordedVideo(null);\n  if (\"MediaRecorder\" in window) {\n    try {\n      const videoConstraints = {\n        audio: false,\n        video: {\n          facingMode: facingMode, // Use the current facingMode state here\n        },\n      };\n      const audioConstraints = { audio: true };\n      // create audio and video streams separately\n      const audioStream = await navigator.mediaDevices.getUserMedia(\n        audioConstraints\n      );\n      const videoStream = await navigator.mediaDevices.getUserMedia(\n        videoConstraints\n      );\n      setPermission(true);\n      // combine both audio and video streams\n      const combinedStream = new MediaStream([\n        ...videoStream.getVideoTracks(),\n        ...audioStream.getAudioTracks(),\n      ]);\n      setStream(combinedStream);\n    } catch (err) {\n      alert(err.message);\n    }\n  } else {\n    alert(\"The MediaRecorder API is not supported in your browser.\");\n  }\n};\n\n\n    useEffect(() => {\n        if (permission && liveVideoFeed.current && stream) {\n            liveVideoFeed.current.srcObject = stream;\n        }\n    }, [permission, stream]);\n    \nconst switchCamera = async () => {\n    if (stream) {\n      stream.getTracks().forEach((track) => track.stop());\n    }\n\n    const newFacingMode = facingMode === \"user\" ? \"environment\" : \"user\";\n    setFacingMode(newFacingMode);\n\n    await getCameraPermission();\n  };\n\nconst startRecording = async () => {\n    setRecordingStatus(\"recording\");\n    const media = new MediaRecorder(stream, { mimeType });\n    mediaRecorder.current = media;\n    mediaRecorder.current.start();\n    let localVideoChunks = [];\n    mediaRecorder.current.ondataavailable = (event) => {\n        if (typeof event.data === \"undefined\") return;\n        if (event.data.size === 0) return;\n        localVideoChunks.push(event.data);\n    };\n    setVideoChunks(localVideoChunks);\n};\n\nconst stopRecording = () => {\n    setPermission(false);\n    setRecordingStatus(\"inactive\");\n    mediaRecorder.current.stop();\n    mediaRecorder.current.onstop = () => {\n        const videoBlob = new Blob(videoChunks, { type: mimeType });\n        const videoUrl = URL.createObjectURL(videoBlob);\n        setRecordedVideo(videoUrl);\n        setVideoChunks([]);\n    };\n};\n    \n    return (\n        <div>\n   <h2>The WALL</h2>\n    <main>\n        <div className=\"video-controls\">\n            {!permission ? (\n            <button onClick={getCameraPermission} type=\"button\">\n               open camera\n            </button>\n            ) : null}\n            \n        </div>\n\n                {permission && liveVideoFeed ? (\n    <div style={{position:'relative' }}  className=\"video-player\">\n        {  recordingStatus === 'recording' &&  <span style={{color:'red'}} > <ul><li style={{color:'red', position:'absolute',zIndex:'20'}} className='recordmode'>{recordingStatus}</li></ul></span>}\n\n    \n    \n    <video  className='live-player' ref={liveVideoFeed} autoPlay playsInline>\n    \n    \n    </video>\n    {permission && recordingStatus === \"inactive\" ? (\n            <button style={{zIndex:'20', position:'absolute', bottom:'0', color:'red' ,borderRadius:'50%',width:'2.5rem',height:'2.5rem', background:'transparent',border:'2px solid green',marginLeft:'auto',marginRight:'auto'}} onClick={startRecording} type=\"button\">\n               <i style={{marginLeft:'auto',marginRight:'auto', width:'2rem', height:'2rem',padding:'4px',background:'green',borderRadius:'50%'}}>s</i>\n            </button>\n            ) : null}\n            {recordingStatus === \"recording\" ? (\n            <button style={{zIndex:'20', position:'absolute', bottom:'0', color:'red' ,borderRadius:'50%',width:'2rem',height:'2rem', background:'transparent',border:'2px solid red',marginLeft:'auto',marginRight:'auto'}} onClick={stopRecording} type=\"button\">\n                <i style={{marginLeft:'auto',marginRight:'auto', width:'1.8rem', height:'1.8rem',padding:'4px',background:'green',borderRadius:'50%'}}>p</i>\n            </button>\n            ) : null}\n{ recordingStatus === \"inactive\"  && <button style={{position:'absolute',zIndex:'20', top:'0', right:'0'}} type='button' onClick={switchCamera}> switchcam </button> }\n    </div>\n) : null}\n                    \n                { !permission && recordedVideo ? (\n        <div className=\"video-player\">\n            <video className='recorded-player' src={recordedVideo} controls autoPlay></video>\n            <a download href={recordedVideo}>\n                Download Recording\n            </a>\n        </div>\n        ) : null}\n    </main>\n</div>\n\n    );\n};\nexport default VideoRecorder;\n"],"names":["VideoRecorder","mimeType","permission","setPermission","useState","mediaRecorder","useRef","liveVideoFeed","recordingStatus","setRecordingStatus","stream","setStream","videoChunks","setVideoChunks","recordedVideo","setRecordedVideo","facingMode","setFacingMode","getCameraPermission","async","window","videoConstraints","audio","video","audioConstraints","audioStream","navigator","mediaDevices","getUserMedia","videoStream","combinedStream","MediaStream","concat","_toConsumableArray","getVideoTracks","getAudioTracks","err","alert","message","useEffect","current","srcObject","React","className","onClick","type","style","position","color","zIndex","ref","autoPlay","playsInline","bottom","borderRadius","width","height","background","border","marginLeft","marginRight","media","MediaRecorder","start","localVideoChunks","ondataavailable","event","data","size","push","padding","stopRecording","stop","onstop","videoBlob","Blob","videoUrl","URL","createObjectURL","top","right","getTracks","forEach","track","src","controls","download","href"],"sourceRoot":""}