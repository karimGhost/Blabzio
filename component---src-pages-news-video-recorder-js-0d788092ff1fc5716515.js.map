{"version":3,"file":"component---src-pages-news-video-recorder-js-0d788092ff1fc5716515.js","mappings":"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","sources":["webpack://blabzio/./src/Accounts/useAuth.js","webpack://blabzio/./src/pages/news/VideoRecorder.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport 'firebase/auth';\n\nimport 'firebase/database';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/database';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nconst firebaseConfig2 = {\n\n  apiKey: \"AIzaSyAM5p7O6YuAvCxfDCbR48Duz019qkoVp0Y\",\n\n  authDomain: \"itsmynodezena.firebaseapp.com\",\n\n  databaseURL: \"https://itsmynodezena-default-rtdb.firebaseio.com\",\n\n  projectId: \"itsmynodezena\",\n\n  storageBucket: \"itsmynodezena.appspot.com\",\n\n  messagingSenderId: \"299392955521\",\n\n  appId: \"1:299392955521:web:ef5671ad2702d441304980\"\n\n};\n\nexport function useAuth() {\n\n\n  firebase.initializeApp(firebaseConfig2, 'app05');\n  const app05 = firebase.app('app05');\nconst apps = app05;\n\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState();\n\n  useEffect(() => {\n    const unsubscribe = app05.auth().onAuthStateChanged((firebaseUser) => {\n      if (firebaseUser) {\n        setUser(firebaseUser);\n        setLoading(true);\n      } else {\n        setUser(null);\n        setLoading(false);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n\n\n  function signInWithEmailAndPassword(email, password) {\n    return app05.auth().signInWithEmailAndPassword(email, password);\n  }\n\n  function signOut() {\n   setUser(\"\")\n    return app05.auth().signOut();\n    \n  }\n\n  return { apps, user,setUser, app05, loading, signInWithEmailAndPassword, signOut };\n}","import React, { useEffect, useState, useRef } from \"react\";\nimport { useAuth } from \"../../Accounts/useAuth\";\nconst VideoRecorder = (props) => {\n    const mimeType = \"video/webm\";\n   const {user} = useAuth();\nconst [recordingStatus, setRecordingStatus] = useState(\"inactive\");\nconst [videoChunks, setVideoChunks] = useState([]);\n  \nconst facingMode = props.facingMode;\nconst setFacingMode = props.setFacingMode;\n\nconst stream = props.stream;\nconst  setStream  = props.setStream;\nconst liveVideoFeed = props.liveVideoFeed;\nconst permission  = props.permission;\nconst  setPermission = props.setPermission;\nconst recordedVideo = props.recordedVideo ;\nconst setRecordedVideo = props.setRecordedVideo;\n\nconst mediaRecorder =  props.mediaRecorder ;\n\n\n\n\n\n\n\n\n\n  \n\n\n    useEffect(() => {\n        if (permission && liveVideoFeed.current && stream) {\n            liveVideoFeed.current.srcObject = stream;\n        }\n    }, [permission, stream]);\n    \nconst switchCamera = async () => {\n    if (stream) {\n      stream.getTracks().forEach((track) => track.stop());\n    }\n\n    const newFacingMode = facingMode === \"user\" ? \"environment\" : \"user\";\n    setFacingMode(newFacingMode);\n\n    await getCameraPermission();\n  };\n\n\n\nconst startRecording = async () => {\n    setRecordingStatus(\"recording\");\n    const media = new MediaRecorder(stream, { mimeType });\n    mediaRecorder.current = media;\n    mediaRecorder.current.start();\n    let localVideoChunks = [];\n    mediaRecorder.current.ondataavailable = (event) => {\n        if (typeof event.data === \"undefined\") return;\n        if (event.data.size === 0) return;\n        localVideoChunks.push(event.data);\n    };\n    setVideoChunks(localVideoChunks);\n};\n\nconst stopRecording = () => {\n    setPermission(false);\n    setRecordingStatus(\"inactive\");\n    mediaRecorder.current.stop();\n    mediaRecorder.current.onstop = () => {\n        const videoBlob = new Blob(videoChunks, { type: mimeType });\n        const videoUrl = URL.createObjectURL(videoBlob);\n        setRecordedVideo(videoUrl);\n        setVideoChunks([]);\n    };\n};\n\nconst recordedVideos = props.recordedVideos;\nconst  setRecordedVideos = props.setRecordedVideos;\n\n    const addRecordedVideo = (recordedVideo) => {\n        const newRecordedVideo = { user: user.uid, id: nanoid(), recordedVideo: recordedVideo };\n        setRecordedVideos(prevState => [...prevState, newRecordedVideo]);\n\n\n        props.setShowVid(false)\n\n      };\n\n    \n    return (\n        <div>\n   \n    <main className= { props.showVid &&' boxmain'}>\n        <div className=\"video-controls\">\n            { /*!permission ? (\n            <button onClic={getCameraPermission} type=\"button\">\n               open camera\n            </button>\n            ) : null */}\n            \n        </div>\n\n                {permission && liveVideoFeed ? (\n    <div style={{position:'relative' }}  className=\"video-player\">\n        {  recordingStatus === 'recording' &&  <span style={{color:'red'}} > <ul><li style={{color:'red', position:'absolute',zIndex:'20'}} className='recordmode'>{recordingStatus}</li></ul></span>}\n\n    \n    \n    <video  className='live-player  m-50' ref={liveVideoFeed} autoPlay playsInline>\n    \n    \n    </video>\n    {permission && recordingStatus === \"inactive\" ? (\n           <button style={{ zIndex: '20', position: 'absolute', bottom: '40px', left: '50%', transform: 'translateX(-50%)', background: 'transparent', border: '2px solid green', borderRadius: '50%', width: '3rem', height: '3rem' }} onClick={startRecording} type=\"button\">\n           <i style={{ display: 'block', width: '2rem', height: '2rem', padding: '4px', background: 'red', borderRadius: '50%', margin: '1px auto' }}>s</i>\n       </button>\n            ) : null}\n            {recordingStatus === \"recording\" ? (\n           <button style={{ zIndex: '20', position: 'absolute', bottom: '40px', left: '50%', transform: 'translateX(-50%)', background: 'transparent', border: '2px solid red', borderRadius: '50%', width: '3rem', height: '3rem' }} onClick={stopRecording} type=\"button\">\n           <i style={{ display: 'block', width: '2rem', height: '2rem', padding: '4px', background: 'green', borderRadius: '50%', margin: '1px auto' }}>p</i>\n       </button>\n       \n            ) : null}\n{ recordingStatus === \"inactive\"  && <button style={{position:'absolute',zIndex:'20', top:'0', right:'0'}} type='button' onClick={switchCamera}> switchcam </button> }\n    </div>\n) : null}\n                    \n                { !permission && recordedVideo ? (\n        <div className=\"video-player\">\n            <video className='recorded-player' src={recordedVideo} controls autoPlay></video>\n         <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\", width:\"100%\"}}>\n      \n            <button onClick={() => addRecordedVideo(recordedVideo)}>\n                post Video\n            </button>\n\n            <button onClick={props.getCameraPermission}>\n             retake video\n            </button>\n</div>\n        </div>\n        ) : null}\n    </main>\n</div>\n\n    );\n};\nexport default VideoRecorder;\n"],"names":["firebaseConfig2","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","useAuth","firebase","initializeApp","app05","app","apps","user","setUser","useState","loading","setLoading","useEffect","unsubscribe","auth","onAuthStateChanged","firebaseUser","signInWithEmailAndPassword","email","password","signOut","props","mimeType","recordingStatus","setRecordingStatus","videoChunks","setVideoChunks","facingMode","setFacingMode","stream","liveVideoFeed","setStream","permission","setPermission","recordedVideo","setRecordedVideo","mediaRecorder","current","srcObject","recordedVideos","setRecordedVideos","React","className","showVid","style","position","color","zIndex","ref","autoPlay","playsInline","bottom","left","transform","background","border","borderRadius","width","height","onClick","async","media","MediaRecorder","start","localVideoChunks","ondataavailable","event","data","size","push","type","display","padding","margin","stopRecording","stop","onstop","videoBlob","Blob","videoUrl","URL","createObjectURL","top","right","getTracks","forEach","track","getCameraPermission","src","controls","flexDirection","justifyContent","newRecordedVideo","uid","id","nanoid","prevState","concat","_toConsumableArray","setShowVid","addRecordedVideo"],"sourceRoot":""}