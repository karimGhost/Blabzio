{"version":3,"file":"component---src-pages-news-video-recorder-js-952a8a3b2352ccf617ca.js","mappings":"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","sources":["webpack://blabzio/./src/pages/news/VideoRecorder.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nconst VideoRecorder = (props) => {\n    const mimeType = \"video/webm\";\n    \n    const liveVideoFeed = useRef(null);\nconst [recordingStatus, setRecordingStatus] = useState(\"inactive\");\nconst [videoChunks, setVideoChunks] = useState([]);\n  \n\nconst stream = props.stream;\nconst  setStream  = props.setStream;\n\nconst permission  = props.permission;\nconst  setPermission = props.setPermission;\nconst recordedVideo = props.recordedVideo ;\nconst setRecordedVideo = props.setRecordedVideo;\n\nconst mediaRecorder =  props.mediaRecorder ;\n\n\n\n\n\n\n\n\nconst [facingMode, setFacingMode] = useState(\"user\"); // \"user\" for front camera, \"environment\" for back camera\n\n  \n\n\n    useEffect(() => {\n        if (permission && liveVideoFeed.current && stream) {\n            liveVideoFeed.current.srcObject = stream;\n        }\n    }, [permission, stream]);\n    \nconst switchCamera = async () => {\n    if (stream) {\n      stream.getTracks().forEach((track) => track.stop());\n    }\n\n    const newFacingMode = facingMode === \"user\" ? \"environment\" : \"user\";\n    setFacingMode(newFacingMode);\n\n    await getCameraPermission();\n  };\n\nconst startRecording = async () => {\n    setRecordingStatus(\"recording\");\n    const media = new MediaRecorder(stream, { mimeType });\n    mediaRecorder.current = media;\n    mediaRecorder.current.start();\n    let localVideoChunks = [];\n    mediaRecorder.current.ondataavailable = (event) => {\n        if (typeof event.data === \"undefined\") return;\n        if (event.data.size === 0) return;\n        localVideoChunks.push(event.data);\n    };\n    setVideoChunks(localVideoChunks);\n};\n\nconst stopRecording = () => {\n    setPermission(false);\n    setRecordingStatus(\"inactive\");\n    mediaRecorder.current.stop();\n    mediaRecorder.current.onstop = () => {\n        const videoBlob = new Blob(videoChunks, { type: mimeType });\n        const videoUrl = URL.createObjectURL(videoBlob);\n        setRecordedVideo(videoUrl);\n        setVideoChunks([]);\n    };\n};\n    \n    return (\n        <div>\n   \n    <main>\n        <div className=\"video-controls\">\n            { /*!permission ? (\n            <button onClick={getCameraPermission} type=\"button\">\n               open camera\n            </button>\n            ) : null */}\n            \n        </div>\n\n                {permission && liveVideoFeed ? (\n    <div style={{position:'relative' }}  className=\"video-player\">\n        {  recordingStatus === 'recording' &&  <span style={{color:'red'}} > <ul><li style={{color:'red', position:'absolute',zIndex:'20'}} className='recordmode'>{recordingStatus}</li></ul></span>}\n\n    \n    \n    <video  className='live-player w-100 m-50' ref={liveVideoFeed} autoPlay playsInline>\n    \n    \n    </video>\n    {permission && recordingStatus === \"inactive\" ? (\n            <button style={{zIndex:'20', position:'absolute', bottom:'0', color:'red' ,borderRadius:'50%',width:'3rem',height:'3rem', background:'transparent',border:'2px solid green',marginLeft:'50%',marginRight:'50%'}} onClick={startRecording} type=\"button\">\n               <i style={{marginLeft:'50%',marginRight:'50%', width:'5rem', height:'5rem',padding:'4px',background:'green',borderRadius:'50%'}}>s</i>\n            </button>\n            ) : null}\n            {recordingStatus === \"recording\" ? (\n            <button style={{zIndex:'20', position:'absolute', bottom:'0', color:'red' ,borderRadius:'50%',width:'3rem',height:'3rem', background:'transparent',border:'2px solid red',marginLeft:'50%',marginRight:'50%'}} onClick={stopRecording} type=\"button\">\n                <i style={{marginLeft:'50%',marginRight:'50%', width:'5rem', height:'5rem',padding:'4px',background:'green',borderRadius:'50%'}}>p</i>\n            </button>\n            ) : null}\n{ recordingStatus === \"inactive\"  && <button style={{position:'absolute',zIndex:'20', top:'0', right:'0'}} type='button' onClick={switchCamera}> switchcam </button> }\n    </div>\n) : null}\n                    \n                { !permission && recordedVideo ? (\n        <div className=\"video-player\">\n            <video className='recorded-player' src={recordedVideo} controls autoPlay></video>\n            <a download href={recordedVideo}>\n                Download Recording\n            </a>\n        </div>\n        ) : null}\n    </main>\n</div>\n\n    );\n};\nexport default VideoRecorder;\n"],"names":["props","mimeType","liveVideoFeed","useRef","recordingStatus","setRecordingStatus","useState","videoChunks","setVideoChunks","stream","permission","setStream","setPermission","recordedVideo","setRecordedVideo","mediaRecorder","facingMode","setFacingMode","useEffect","current","srcObject","React","className","style","position","color","zIndex","ref","autoPlay","playsInline","bottom","borderRadius","width","height","background","border","marginLeft","marginRight","onClick","async","media","MediaRecorder","start","localVideoChunks","ondataavailable","event","data","size","push","type","padding","stopRecording","stop","onstop","videoBlob","Blob","videoUrl","URL","createObjectURL","top","right","getTracks","forEach","track","getCameraPermission","src","controls","download","href"],"sourceRoot":""}