{"version":3,"file":"component---src-pages-profile-page-notifications-js-97a0588898b5e02f3e0a.js","mappings":"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","sources":["webpack://blabzio/./node_modules/primereact/checkbox/checkbox.esm.js","webpack://blabzio/./src/pages/ProfilePage/Notifications.js"],"sourcesContent":["import * as React from 'react';\nimport { useUpdateEffect, useMountEffect } from 'primereact/hooks';\nimport { CheckIcon } from 'primereact/icons/check';\nimport { Tooltip } from 'primereact/tooltip';\nimport { ObjectUtils, DomHandler, classNames, IconUtils } from 'primereact/utils';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar CheckboxBase = {\n  defaultProps: {\n    __TYPE: 'Checkbox',\n    autoFocus: false,\n    checked: false,\n    className: null,\n    disabled: false,\n    falseValue: false,\n    icon: null,\n    id: null,\n    inputId: null,\n    inputRef: null,\n    name: null,\n    onChange: null,\n    onClick: null,\n    onContextMenu: null,\n    onMouseDown: null,\n    readOnly: false,\n    required: false,\n    style: null,\n    tabIndex: null,\n    tooltip: null,\n    tooltipOptions: null,\n    trueValue: true,\n    value: null,\n    children: undefined\n  },\n  getProps: function getProps(props) {\n    return ObjectUtils.getMergedProps(props, CheckboxBase.defaultProps);\n  },\n  getOtherProps: function getOtherProps(props) {\n    return ObjectUtils.getDiffProps(props, CheckboxBase.defaultProps);\n  }\n};\n\nvar Checkbox = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var props = CheckboxBase.getProps(inProps);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    focusedState = _React$useState2[0],\n    setFocusedState = _React$useState2[1];\n  var elementRef = React.useRef(null);\n  var inputRef = React.useRef(props.inputRef);\n  var onClick = function onClick(event) {\n    if (props.disabled || props.readOnly) {\n      return;\n    }\n    if (props.onChange || props.onClick) {\n      var _checked = isChecked();\n      var checkboxClicked = event.target instanceof HTMLDivElement || event.target instanceof HTMLSpanElement || event.target instanceof Object;\n      var isInputToggled = event.target === inputRef.current;\n      var isCheckboxToggled = checkboxClicked && event.target.checked !== _checked;\n      if (isInputToggled || isCheckboxToggled) {\n        var value = _checked ? props.falseValue : props.trueValue;\n        var eventData = {\n          originalEvent: event,\n          value: props.value,\n          checked: value,\n          stopPropagation: function stopPropagation() {\n            event.stopPropagation();\n          },\n          preventDefault: function preventDefault() {\n            event.preventDefault();\n          },\n          target: {\n            type: 'checkbox',\n            name: props.name,\n            id: props.id,\n            value: props.value,\n            checked: value\n          }\n        };\n        props.onClick && props.onClick(eventData);\n\n        // do not continue if the user defined click wants to prevent\n        if (event.defaultPrevented) {\n          return;\n        }\n        props.onChange && props.onChange(eventData);\n      }\n      DomHandler.focus(inputRef.current);\n      event.preventDefault();\n    }\n  };\n  var onFocus = function onFocus() {\n    setFocusedState(true);\n  };\n  var onBlur = function onBlur() {\n    setFocusedState(false);\n  };\n  var onKeyDown = function onKeyDown(event) {\n    if (event.code === 'Space' || event.key === ' ') {\n      // event.key is for Android support\n      onClick(event);\n    }\n  };\n  var isChecked = function isChecked() {\n    return props.checked === props.trueValue;\n  };\n  React.useImperativeHandle(ref, function () {\n    return {\n      props: props,\n      focus: function focus() {\n        return DomHandler.focus(inputRef.current);\n      },\n      getElement: function getElement() {\n        return elementRef.current;\n      },\n      getInput: function getInput() {\n        return inputRef.current;\n      }\n    };\n  });\n  React.useEffect(function () {\n    ObjectUtils.combinedRefs(inputRef, props.inputRef);\n  }, [inputRef, props.inputRef]);\n  useUpdateEffect(function () {\n    inputRef.current.checked = isChecked();\n  }, [props.checked, props.trueValue]);\n  useMountEffect(function () {\n    if (props.autoFocus) {\n      DomHandler.focus(inputRef.current, props.autoFocus);\n    }\n  });\n  var checked = isChecked();\n  var hasTooltip = ObjectUtils.isNotEmpty(props.tooltip);\n  var otherProps = CheckboxBase.getOtherProps(props);\n  var ariaProps = ObjectUtils.reduceKeys(otherProps, DomHandler.ARIA_PROPS);\n  var className = classNames('p-checkbox p-component', {\n    'p-checkbox-checked': checked,\n    'p-checkbox-disabled': props.disabled,\n    'p-checkbox-focused': focusedState\n  }, props.className);\n  var boxClass = classNames('p-checkbox-box', {\n    'p-highlight': checked,\n    'p-disabled': props.disabled,\n    'p-focus': focusedState\n  });\n  var iconClassName = 'p-checkbox-icon p-c';\n  var icon = checked ? props.icon || /*#__PURE__*/React.createElement(CheckIcon, {\n    className: iconClassName\n  }) : null;\n  var checkboxIcon = IconUtils.getJSXIcon(icon, {\n    className: iconClassName\n  }, {\n    props: props,\n    checked: checked\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: elementRef,\n    id: props.id,\n    className: className,\n    style: props.style\n  }, otherProps, {\n    onClick: onClick,\n    onContextMenu: props.onContextMenu,\n    onMouseDown: props.onMouseDown\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-hidden-accessible\"\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({\n    ref: inputRef,\n    type: \"checkbox\",\n    id: props.inputId,\n    name: props.name,\n    tabIndex: props.tabIndex,\n    defaultChecked: checked,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onKeyDown: onKeyDown,\n    disabled: props.disabled,\n    readOnly: props.readOnly,\n    required: props.required\n  }, ariaProps))), /*#__PURE__*/React.createElement(\"div\", {\n    className: boxClass\n  }, checkboxIcon)), hasTooltip && /*#__PURE__*/React.createElement(Tooltip, _extends({\n    target: elementRef,\n    content: props.tooltip\n  }, props.tooltipOptions)));\n}));\nCheckbox.displayName = 'Checkbox';\n\nexport { Checkbox };\n","import React, { useEffect, useState, useRef } from 'react';\nimport * as pro from '../../styles/profile.module.css';\nimport firebase from 'firebase/compat/app';\nimport { useAuth } from '../../Accounts/useAuth';\nimport im from '../../images/proxy.jpeg';\n//import { initializeApp } from \"firebase/app\";\n//import Language from '../Language';\n//import { useTranslation , Trans} from 'react-i18next';\nimport { Link } from 'gatsby';\nimport { Password } from 'primereact/password';\nimport { Toast } from 'primereact/toast';\nimport {confirmDialog, ConfirmDialog} from 'primereact/confirmdialog';\nimport {RadioButton} from \"primereact/radiobutton\";\nimport {Checkbox} from \"primereact/checkbox\";\nimport Navbar from './Navbared';\n\nimport {InputNumber} from \"primereact/inputnumber\";\nimport { event } from 'jquery';\nimport {ProgressSpinner} from 'primereact/progressspinner';\nconst firebaseConfig2 = {\n  apiKey: \"AIzaSyAM5p7O6YuAvCxfDCbR48Duz019qkoVp0Y\",\n\n  authDomain: \"itsmynodezena.firebaseapp.com\",\n\n  databaseURL: \"https://itsmynodezena-default-rtdb.firebaseio.com\",\n\n  projectId: \"itsmynodezena\",\n\n  storageBucket: \"itsmynodezena.appspot.com\",\n\n  messagingSenderId: \"299392955521\",\n\n  appId: \"1:299392955521:web:ef5671ad2702d441304980\"\n  \n  };\n  \n  \n\n\n\nexport default function Notifications() {\n\n    const toast = useRef(null)\n\n    function isActive({ isCurrent }) {\n        return isCurrent ? { classNameName: 'active'} : null;\n      }\n      \n\n      firebase.initializeApp(firebaseConfig2, 'app012');\n\n      const app4 = firebase.app('app012');\n      const { user,setUser, loading,signOut } = useAuth();\n      const auth = app4.auth();\n      const database = app4.database();\n      \nconst [disable, setdisabled] = useState(true)\nconst [emaildisable, setEmaildisable] = useState(true)\n\n      const [notifications, setNotifications] = useState({\n       \n        ChangesMadeToAcc: false,\n        ChangesMadeToGroup: false,\n       SecurityAlert: false,\n\n  somoneComments :false,\n  somoneshares:false,\nUserfollows: false,\nnewPostMadeinGroup:false,\nReciveMessage: false,\n\nAutoSubscribeGroupnotif: false,\nAutoSubscribetonews: false,\nsetSms: 12\n})\n    \n\n\nconst handleNotificationsChange = (event) => {\n    const { name, value, checked } = event.target;\n    setNotifications((prevState) => ({\n      ...prevState,\n      [name]: !prevState[name],\n    }));\n  \n\n  };\n async function dataIsSet() {\n            if(user && user.uid){\n            const userRef = app4.database().ref('profile/' + user.uid);\n            \n            try {\n              await userRef.update({\n                ChangesMadeToAcc: notifications.ChangesMadeToAcc,\n                ChangesMadeToGroup: notifications.ChangesMadeToGroup,\n               SecurityAlert: notifications.SecurityAlert,\n        \n          somoneComments :notifications.somoneComments,\n          somoneshares:notifications.somoneshares,\n        Userfollows: notifications.Userfollows,\n        newPostMadeinGroup:notifications.newPostMadeinGroup,\n        ReciveMessage: notifications.ReciveMessage,\n        \n        AutoSubscribeGroupnotif:notifications.AutoSubscribeGroupnotif,\n        AutoSubscribetonews: notifications.AutoSubscribetonews,\n              });\n            \n            } catch (error) {\n              console.log(error);\n              toast.current.show({\n                severity: 'error',\n                summary: 'Error',\n                detail: 'Error is as: ' + error.message,\n                life: 9000,\n              });\n            }\n        }\n        }\n    \n\n  \n \n\n    console.log(notifications.Userfollows)\n\n\n\n\n\n\n\n\n \n      \n     \nuseEffect(() => {\n    dataIsSet()\n\n}, [notifications])\n\nconst  [clear, setClear] = useState(false)\nconst [Darks, setDarks] = useState(false)\n\n\nuseEffect(() => {\n    if (user && user.email) {\n        app4\n        .database()\n        .ref('prof')\n        .orderByChild('email')\n        .equalTo(user.email)\n        .once('value')\n        .then((snapshot) => {\n          if (snapshot.exists()) {\n            const userId = Object.keys(snapshot.val());\n          const snapshotval = snapshot.val()[userId];\nsetClear(true);\nsnapshotval.darkmode && setDarks(snapshotval.darkmode)\n          setNotifications((prevState) => ({\n            ...prevState,\n            ChangesMadeToAcc: snapshotval?.ChangesMadeToAcc || false,\n            ChangesMadeToGroup: snapshotval?.ChangesMadeToGroup || false,\n            SecurityAlert: snapshotval?.SecurityAlert || false,\n            somoneComments: snapshotval?.somoneComments || false,\n            somoneshares: snapshotval?.somoneshares || false,\n            Userfollows: snapshotval?.Userfollows || false,\n            newPostMadeinGroup: snapshotval?.newPostMadeinGroup || false,\n            ReciveMessage: snapshotval?.ReciveMessage || false,\n            AutoSubscribeGroupnotif: snapshotval?.AutoSubscribeGroupnotif || false,\n            AutoSubscribetonews: snapshotval?.AutoSubscribetonews || false,\n            setSms: snapshotval.sms,\n          }));\n\n          \n            \n            // setSms(snapshotvals.sms); // make sure this function is defined\n          }\n\n        })\n        .catch((error) => {\n          console.log(error);\n          toast.current.show({\n            severity: 'error',\n            summary: 'Error',\n            detail: 'Error: ' + error.message,\n            life: 3000,\n          });\n        });\n    } else {\n      // handle the case where user is not defined or does not have a uid property\n    //  toast.current.show({\n      //  severity: 'info',\n        //summary: 'info',\n        //detail: 'Auto confirm',\n        //life: 6000,\n      //});\n    }\n  }, [user]);\n\n\n\n  useEffect(() => {\n    notifications.somoneshares === true  ? setdisabled(false) : \n\n    notifications.somoneComments === true ? setdisabled(false) :\n    notifications.Userfollows === true ? setdisabled(false) :\n      notifications.newPostMadeinGroup === true  ? setdisabled(false) :\n       notifications.ReciveMessage === true  ? setdisabled(false) : setdisabled(true) \n\n\n\n       notifications.ChangesMadeToAcc === true  ? setButton(false) : \n       notifications.ChangesMadeToGroup === true ? setButton(false) :\n     notifications.SecurityAlert  === true ? setButton(false) :\n  \n  notifications.somoneComments === true ? setButton(false) :\n  notifications.somoneshares === true ? setButton(false) :\n   notifications.Userfollows === true ? setButton(false) :\n  notifications.newPostMadeinGroup === true ? setButton(false) :\n  notifications.ReciveMessage === true ? setButton(false) :\n  \n  notifications.AutoSubscribeGroupnotif === true ? setButton(false) :\n   notifications.AutoSubscribetonews === true ? setButton(false) :  setButton(true)\n\n\n\n  }, [notifications])\n\nconst [Button, setButton] = useState(false)\nconst Unsub = () => {\n\n\n    setNotifications((prevState) => ({\n        ...prevState,\n        ChangesMadeToAcc: false,\n        ChangesMadeToGroup:  false,\n        SecurityAlert:  false,\n        somoneComments: false,\n        somoneshares:  false,\n        Userfollows: false,\n        newPostMadeinGroup: false,\n        ReciveMessage: false,\n        AutoSubscribeGroupnotif:  false,\n        AutoSubscribetonews:  false,\n        \n      }));\n      toast.current.show({\n        severity: 'Success',\n        summary: 'Success',\n        detail: 'You have been successfuly unsubscribed',\n        life: 6000,\n      });\n\n\n      \n}\n\n\n\nif(clear){\nreturn(\n    <div style={{alignItems:\"center\", justifyItems: \"center\", paddingTop: \"25%\"}} className='card flex justify-content-center align-content-center '>\n      { /*  <ProgressSpinner className='text-dark'> <h1>zena </h1> </ProgressSpinner>* /}\n{/* style={{width: '50px', height: '50px'}}  strokeWidth=\"8\" fill=\"var(--surface-ground)\" animationDuration= \".5s\" */}\n    </div>\n)\n}\n\n  return (\n\n<div style={{background: Darks && \"#141515\"}}>\n<Toast ref = {toast} />\n\n  <div className={`container-xl px-4 mt-4 ${Darks && 'darken'}`}>\n    <Navbar setDarks={setDarks}/>\n    <div className={`${Darks && 'darken'}row`}>\n        <div className=\"col-lg-8\">\n            {/* Email notifications preferences card */}\n            <div className=\"card card-header-actions mb-4\">\n                <div className=\"card-header\"  style={{background: Darks && \"#141515\"}}>\n               \n\n                    <div className=\"form-check form-switch\"   style={{background: Darks && \"#141515\",marginBottom:\"15px\" }}>\n                 \n   \n<label htmlFor=\"emailNotifications\"     style={{color: \"orange\", marginTop:\"-10px\",fontSize:\"-20px\", fontWeight:\"bold\"   }}>Email notifications</label>\n\n                    </div>\n                </div>\n                <div className=\"card-body\"  style={{background: Darks && \"#141515\"}}>\n                    <>\n                        {/* Form Group (default email) */}\n                        <div className=\"mb-3\"  style={{background: Darks && \"#141515\"}}>\n\n                            <label className=\"small mb-1\" htmlFor=\"inputNotificationEmail\">Default notification email</label>\n                            <input className=\"form-control\" id=\"inputNotificationEmail\" type=\"email\" value={user && user.email}  onChange={handleNotificationsChange} disabled={true}/>\n                        </div>\n                        {/* Form Group (email updates checkboxes) */}\n                        <div className=\"mb-0\">\n                            <div className=' mb-3 pb-3'>\n                            <label className=\"small papol\" style={{color: \"purple\"}}>Choose which types of email updates you receive</label>\n                          </div>\n                           <div className=\"form-check mb-6 mt-6\" style={{marginBottom:\"15px\"}}>\n                           <Checkbox  inputId='ChangesMadeToAcc'  name='ChangesMadeToAcc'  value={true} className=\"mr-1  p-success P-button-success p-checkbox-success\" id=\"flexSwitchCheckChecked\"   onChange={handleNotificationsChange }   checked = {notifications.ChangesMadeToAcc === true}/>\n                                <label className=\"form-check-label\" style={{color: Darks && \"silver\"}} htmlFor=\"ChangesMadeToAcc\">Changes made to your account</label>\n                            </div>\n                            <div className=\"form-check mb-4\" style={{marginBottom:\"15px\"}}>\n                            <Checkbox inputId='ChangesMadeToGroup'  name='ChangesMadeToGroup'    value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"   onChange={handleNotificationsChange} checked = {notifications.ChangesMadeToGroup === true}/>\n                                <label className=\"form-check-label\"  style={{color: Darks && \"silver\"}} htmlFor=\"ChangesMadeToGroup\">Changes are made to groups you're part of</label>\n                            </div>\n\n   \n                   \n                            <div className=\"form-check\" style={{marginBottom:\"15px\"}}>\n                            <Checkbox name='SecurityAlert' inputId='checkSecurity'   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  onChange={handleNotificationsChange}   checked = {notifications.SecurityAlert === true}/>\n                                <label  style={{color: Darks && \"silver\"}} className=\"form-check-label\" htmlFor=\"checkSecurity\">Security alerts</label>\n                            </div>\n                        </div>\n                    </>\n                </div>\n            </div>\n            {/* SMS push notifications card */}\n            <div className=\"card card-header-actions mb-4\">\n                <div className=\"card-header\"  style={{background: Darks && \"#141515\"}}>\n\n                    <div className=\"form-check form-switch\"  style={{background: Darks && \"#141515\", marginBottom:\"15px\"}}>\n                        <label  style={{color: \"orange\", marginTop:\"-10px\",fontSize:\"-20px\", fontWeight:\"bold\"   }} className=\"form-check-label ml-4\" htmlFor=\"smsToggleSwitch\"> Push Notifications</label>\n                    </div>\n                </div>\n                <div className=\"card-body\"  style={{background: Darks && \"#141515\"}}>\n                    <form>\n                        {/* Form Group (default SMS number) */}\n                        <div className=\"mb-2\">\n                            <label  style={{color: Darks && \"silver\"}} className=\"small mb-1\" htmlFor=\"inputNotificationSms\">Default SMS number</label>\n                            <InputNumber label='default-sms-Number' disabled={true}   id=\"number-input\" value={notifications.setSms} onValueChange={handleNotificationsChange} />\n                        </div>\n                        {/* Form Group (SMS updates checkboxes) */}\n                        <div className=\"mb-0\">\n                            <div className='mb-5 pb-2'>\n         <label className=\"small mb-2 pupol\"  style={{color: Darks && \"silver\"}}>Choose which types of push notifications you receive</label>\n                   \n                                       </div>\n                            <div className=\"form-check mb-3\"  style={{background: Darks && \"#141515\", marginBottom:\"15px\"}}>\n                            <Checkbox  inputId='somoneComments'   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  name=\"somoneComments\"  onChange={handleNotificationsChange}  checked = {notifications.somoneComments === true}/>\n                                <label className=\"form-check-label\"  style={{color: Darks && \"silver\"}} htmlFor=\"somoneComments\">Someone comments on your post</label>\n                            </div>\n                            <div className=\"form-check mb-3\" style={{marginBottom:\"15px\"}}>\n                            <Checkbox  inputId='somoneshares'   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  name=\"somoneshares\"  onChange={handleNotificationsChange }  checked = {notifications.somoneshares === true}/>\n                                <label  style={{color: Darks && \"silver\"}} className=\"form-check-label\" htmlFor=\"somoneshares\">Someone shares your post</label>\n                            </div>\n                            <div className=\"form-check mb-3\" style={{marginBottom:\"15px\"}}>\n                            <Checkbox  inputId=\"userfollow\"   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  name=\"Userfollows\"  onChange={handleNotificationsChange}  checked = {notifications.Userfollows === true}/>\n                                <label  style={{color: Darks && \"silver\"}} className=\"form-check-label\" htmlFor=\"userfollow\">A user follows your account</label>\n                            </div>\n                            <div className=\"form-check mb-3\" style={{marginBottom:\"15px\"}}>\n                            <Checkbox  inputId='newPostMadeinGroup'   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  name=\"newPostMadeinGroup\" onChange={handleNotificationsChange}   checked = {notifications.newPostMadeinGroup === true}/>\n                                <label  style={{color: Darks && \"silver\"}} className=\"form-check-label\" htmlFor=\"newPostMadeinGroup\">New posts are made in groups you're part of</label>\n                            </div>\n                            <div className=\"form-check\" style={{marginBottom:\"15px\"}}>\n                            <Checkbox  inputId='ReciveMessage'   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  name=\"ReciveMessage\" onChange={handleNotificationsChange}  checked = {notifications.ReciveMessage === true}/>\n                                <label  style={{color: Darks && \"silver\"}} className=\"form-check-label\" htmlFor=\"ReciveMessage\">You receive a  message</label>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div className=\"col-lg-4\">\n            {/* Notifications preferences card */}\n            <div className=\"card\"  style={{background: Darks && \"#141515\"}}>\n                <div style={{color: \"orange\", fontSize:\"-20px\", fontWeight:\"bold\"   }} className=\"card-header\">Notification Preferences</div>\n                <div className=\"card-body\">\n                    <>\n                        {/* Form Group (notification preference checkboxes) */}\n                        <div className=\"form-chec mb-7 \"  style={{background: Darks && \"#141515\", marginBottom:\"38px\"}}>\n                        <Checkbox  inputId='AutoSubscribeGroupnotif'   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  name=\"AutoSubscribeGroupnotif\" onChange={handleNotificationsChange}   checked = {notifications.AutoSubscribeGroupnotif === true}/>\n                            <label   style={{fontSize:\"1rem\", color: Darks && \"silver\"}} className=\"form-check-label mb-4\" htmlFor=\"AutoSubscribeGroupnotif\">Automatically subscribe to group notifications</label>\n                        </div>\n  \n                        <div className=\"form-chec mb-6 mt-7\"  style={{background: Darks && \"#141515\", marginBottom:\"25px\"}}>\n                        <Checkbox  inputId='AutoSubscribetonews'   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  name=\"AutoSubscribetonews\" onChange={handleNotificationsChange }   checked = {notifications.AutoSubscribetonews === true}/>\n                            <label  style={{color: Darks && \"silver\"}} className=\"form-check-label mb-4 mt-\" htmlFor=\"AutoSubscribetonews\">Automatically subscribe to new notifications</label>\n                        </div>\n                        {/* Submit button */}\n                        <button disabled={Button} onClick={Unsub} className=\"btn btn-danger-soft btn-dark text-white mb-4 mt-6\">Unsubscribe from all notifications</button>\n                    </>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n   </div>\n  )\n}\n\nexport const Head = () => <title>Notifications</title>\n"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","_iterableToArrayLimit","o","minLen","n","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","CheckboxBase","defaultProps","__TYPE","autoFocus","checked","className","disabled","falseValue","icon","id","inputId","inputRef","onChange","onClick","onContextMenu","onMouseDown","readOnly","required","style","tabIndex","tooltip","tooltipOptions","trueValue","children","undefined","getProps","props","getMergedProps","getOtherProps","getDiffProps","Checkbox","inProps","ref","_React$useState2","focusedState","setFocusedState","elementRef","event","_checked","isChecked","checkboxClicked","HTMLDivElement","HTMLSpanElement","isInputToggled","current","isCheckboxToggled","eventData","originalEvent","stopPropagation","preventDefault","type","defaultPrevented","focus","getElement","getInput","combinedRefs","hasTooltip","isNotEmpty","otherProps","ariaProps","reduceKeys","ARIA_PROPS","boxClass","iconClassName","checkboxIcon","getJSXIcon","defaultChecked","onFocus","onBlur","onKeyDown","code","content","displayName","firebaseConfig2","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Notifications","toast","useRef","firebase","initializeApp","app4","app","user","setUser","loading","signOut","useAuth","disable","setdisabled","auth","database","useState","emaildisable","setEmaildisable","notifications","setNotifications","ChangesMadeToAcc","ChangesMadeToGroup","SecurityAlert","somoneComments","somoneshares","Userfollows","newPostMadeinGroup","ReciveMessage","AutoSubscribeGroupnotif","AutoSubscribetonews","setSms","handleNotificationsChange","prevState","console","log","useEffect","async","uid","userRef","update","error","show","severity","summary","detail","message","life","dataIsSet","clear","setClear","Darks","setDarks","email","orderByChild","equalTo","once","then","snapshot","exists","userId","keys","val","snapshotval","darkmode","sms","catch","setButton","Button","React","alignItems","justifyItems","paddingTop","background","Toast","Navbar","marginBottom","htmlFor","color","marginTop","fontSize","fontWeight","InputNumber","label","onValueChange","Unsub","Head"],"sourceRoot":""}