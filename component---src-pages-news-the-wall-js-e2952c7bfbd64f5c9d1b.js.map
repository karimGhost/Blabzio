{"version":3,"file":"component---src-pages-news-the-wall-js-e2952c7bfbd64f5c9d1b.js","mappings":"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","sources":["webpack://blabzio/./src/pages/news/TheWall.js","webpack://blabzio/./src/pages/news/VideoRecorder.js","webpack://blabzio/./src/images/anim.mp4","webpack://blabzio/./src/pages/news/Videoplayer.js","webpack://blabzio/./node_modules/primereact/inputtextarea/inputtextarea.esm.js"],"sourcesContent":["import React, {useEffect, useState, useRef} from 'react';\nimport { nanoid } from 'nanoid';\nimport VideoPlayer from './Videoplayer';\nimport VideoRecorder from './VideoRecorder';\nimport Layout from '../../components/Layout';\nimport Navbar from '../../components/Navbar';\nimport { useAuth } from '../../Accounts/useAuth';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nexport default function TheWall() {\n  const [stream, setStream] = useState(null);\n  const liveVideoFeed = useRef(null);\n  const [recordedVideos, setRecordedVideos] = useState([]);\n  const [permission, setPermission] = useState(false);\n  const [recordedVideo, setRecordedVideo] = useState(null);\n  const mediaRecorder = useRef(null);\n\nconst [showVid, setShowVid] = useState(false)\nconst [facingMode, setFacingMode] = useState(\"user\");\n\n\nuseEffect(() =>{\nconsole.log(\"these are the recorded videos \",recordedVideos)\n}, [recordedVideos])\n\nconst getCameraPermission = async () => {\n  setRecordedVideo(null);\n  if (\"MediaRecorder\" in window) {\n    try {\n      const videoConstraints = {\n        audio: true,\n        video: {\n          facingMode: facingMode, // Use the current facingMode state here\n        },\n      };\n      const audioConstraints = { audio: true };\n      // create audio and video streams separately\n      const audioStream = await navigator.mediaDevices.getUserMedia(\n        audioConstraints\n      );\n      const videoStream = await navigator.mediaDevices.getUserMedia(\n        videoConstraints\n      );\n      setPermission(true);\n      // combine both audio and video streams\n      const combinedStream = new MediaStream([\n       ...audioStream.getAudioTracks(),\n          ...videoStream.getVideoTracks()\n     \n      ]);\n      setStream(combinedStream);\n      setShowVid(true);\n    } catch (err) {\n      alert(err.message);\n    }\n  } else {\n    alert(\"The MediaRecorder API is not supported in your browser.\");\n    setShowVid(false)\n  }\n};\n\n\n\nconst stopCameraStream = () => {\n  if (stream) {\n    stream.getTracks().forEach((track) => track.stop());\n    setStream(null);\n    setPermission(false);\n    setShowVid(false);\n  }\n};\n  \n      useEffect(() => {\n          if (permission && liveVideoFeed.current && stream) {\n              liveVideoFeed.current.srcObject = stream;\n          }\n      }, [permission, stream]);\n\n  return (\n\n\n\n  <main className={showVid && 'boxmain'} style={{marginTop:\"150px\"}} >  \n\n    <Navbar />\n    <button onClick={getCameraPermission} style={{position:\"fixed\", top:\"110px\",zIndex:\"5\", margin:\"0 20%\", left:\"0\", right: \"0\", borderRadius:\"15px\" }} >Record Video +</button>\n   \n    \n    { showVid &&\n    <div style={{zIndex:\"50\", height:\"100vh\", width: \"100vw\", position:\"absolute\", top:\"0\", bottom:\"0\",left:\"0\", right:\"0\", background:\"white\"}}>\n  <VideoRecorder \n   setShowVid = {setShowVid}\n  recordedVideos = {recordedVideos}\n   setRecordedVideos = {setRecordedVideos}\n  getCameraPermission = {getCameraPermission}\n stream = {stream}\n  setStream  = {setStream}\n  showVid = {showVid}\n permission  = {permission}\n  setPermission = {setPermission}\n recordedVideo = {recordedVideo }\n setRecordedVideo = {setRecordedVideo} \n mediaRecorder =  {mediaRecorder}\n facingMode = {facingMode}\n setFacingMode = {setFacingMode}\n liveVideoFeed ={liveVideoFeed}\n stopCameraStream = {stopCameraStream}\n />\n \n \n </div>}\n \n {recordedVideos && recordedVideos.map(vid => (\n  <div key={vid.id} className='mtop width:\"fit-content \", height:\"fit-content \", marginTop:\"50px\"'>\n    <VideoPlayer\n     videoplay={ vid.recordedVideo && vid.recordedVideo }\n     user={ vid.user && vid.user}\n     setRecordedVideo = {setRecordedVideos}\n     likes = {vid.likes}\n     shares= {vid.shares}\n     comments= {vid.comments}\n     id={vid.id}\n     recordedVideos = {recordedVideos} \n    />\n  </div>\n))}\n\n\n\n    </main>\n\n  )\n}\n\n\n\nexport const Head = () => <title>TheWall</title>\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useAuth } from \"../../Accounts/useAuth\";\nimport { nanoid } from \"nanoid\";\n\nconst VideoRecorder = (props) => {\n    const mimeType = \"video/webm\";\n   const {user} = useAuth();\nconst [recordingStatus, setRecordingStatus] = useState(\"inactive\");\nconst [videoChunks, setVideoChunks] = useState([]);\n  \nconst facingMode = props.facingMode;\nconst setFacingMode = props.setFacingMode;\n\nconst stream = props.stream;\nconst  setStream  = props.setStream;\nconst liveVideoFeed = props.liveVideoFeed;\nconst permission  = props.permission;\nconst  setPermission = props.setPermission;\nconst recordedVideo = props.recordedVideo ;\nconst setRecordedVideo = props.setRecordedVideo;\n\nconst mediaRecorder =  props.mediaRecorder ;\n\n\n\n\n\n\n\n\n\n  \n\n\n    useEffect(() => {\n        if (permission && liveVideoFeed.current && stream) {\n            liveVideoFeed.current.srcObject = stream;\n        }\n    }, [permission, stream]);\n    \nconst switchCamera = async () => {\n    if (stream) {\n      stream.getTracks().forEach((track) => track.stop());\n    }\n\n    const newFacingMode = facingMode === \"user\" ? \"environment\" : \"user\";\n    setFacingMode(newFacingMode);\n\n    await getCameraPermission();\n  };\n\n\n\nconst startRecording = async () => {\n    setRecordingStatus(\"recording\");\n    const media = new MediaRecorder(stream, { mimeType });\n    mediaRecorder.current = media;\n    mediaRecorder.current.start();\n    let localVideoChunks = [];\n    mediaRecorder.current.ondataavailable = (event) => {\n        if (typeof event.data === \"undefined\") return;\n        if (event.data.size === 0) return;\n        localVideoChunks.push(event.data);\n    };\n    setVideoChunks(localVideoChunks);\n};\n\nconst stopRecording = () => {\n    setPermission(false);\n    setRecordingStatus(\"inactive\");\n    mediaRecorder.current.stop();\n    mediaRecorder.current.onstop = () => {\n        const videoBlob = new Blob(videoChunks, { type: mimeType });\n        const videoUrl = URL.createObjectURL(videoBlob);\n        setRecordedVideo(videoUrl);\n        setVideoChunks([]);\n    };\n};\n\nconst recordedVideos = props.recordedVideos;\nconst  setRecordedVideos = props.setRecordedVideos;\n\n\n\n\n    const addRecordedVideo = () => {\n        const newRecordedVideo = {\n             user: user.uid,\n             id: nanoid(),\n              recordedVideo: recordedVideo,\n            likes: \"\",\n            shares: \"\",\n            comments: []\n            };\n        setRecordedVideos(prevState => [...prevState, newRecordedVideo]);\n\nsetRecordedVideo([])\nprops.stopCameraStream();\n        props.setShowVid(false)\n       setStream(null)\n\n\n      };\n\n    \n    return (\n        <div>\n   \n    <main className= { props.showVid &&' boxmain'}>\n        <div className=\"video-controls\">\n            { /*!permission ? (\n            <button onClic={getCameraPermission} type=\"button\">\n               open camera\n            </button>\n            ) : null */}\n            \n        </div>\n\n                {permission && liveVideoFeed ? (\n    <div style={{position:'relative' }}  className=\"video-player\">\n        {  recordingStatus === 'recording' &&  <span style={{color:'red'}} > <ul><li style={{color:'red', position:'absolute',zIndex:'20'}} className='recordmode'>{recordingStatus}</li></ul></span>}\n\n    \n    \n    <video  className='live-player  m-50' ref={liveVideoFeed} autoPlay playsInline>\n    \n    \n    </video>\n    {permission && recordingStatus === \"inactive\" ? (\n           <button style={{ zIndex: '20', position: 'absolute', bottom: '40px', left: '50%', transform: 'translateX(-50%)', background: 'transparent', border: '2px solid green', borderRadius: '50%', width: '3rem', height: '3rem' }} onClick={startRecording} type=\"button\">\n           <i style={{ display: 'block', width: '2rem', height: '2rem', padding: '4px', background: 'red', borderRadius: '50%', margin: '1px auto' }}>s</i>\n       </button>\n            ) : null}\n            {recordingStatus === \"recording\" ? (\n           <button style={{ zIndex: '20', position: 'absolute', bottom: '40px', left: '50%', transform: 'translateX(-50%)', background: 'transparent', border: '2px solid red', borderRadius: '50%', width: '3rem', height: '3rem' }} onClick={stopRecording} type=\"button\">\n           <i style={{ display: 'block', width: '2rem', height: '2rem', padding: '4px', background: 'green', borderRadius: '50%', margin: '1px auto' }}>p</i>\n       </button>\n       \n            ) : null}\n{ recordingStatus === \"inactive\"  && <button style={{position:'absolute',zIndex:'20', top:'0', right:'0'}} type='button' onClick={switchCamera}> switchcam </button> }\n    </div>\n) : null}\n                    \n                { !permission && recordedVideo ? (\n        <div className=\"video-player\">\n            <video className='recorded-player' src={recordedVideo} controls autoPlay></video>\n         <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\", width:\"100%\"}}>\n      \n            <button onClick={addRecordedVideo}>\n                post Video\n            </button>\n\n            <button onClick={props.getCameraPermission}>\n             retake video\n            </button>\n</div>\n        </div>\n        ) : null}\n    </main>\n</div>\n\n    );\n};\nexport default VideoRecorder;\n","export default __webpack_public_path__ + \"static/anim-2877f7c1d2fa20696631a61f9a4aa97c.mp4\";","import React, { useState, useEffect, useRef } from 'react';\nimport { FaPlay, FaPause, FaHeart, FaThumbsUp, FaThumbsDown, FaComment, FaShare } from 'react-icons/fa';\nimport { nanoid } from 'nanoid';\nimport video from \"../../images/anim.mp4\";\nimport * as Video from \"../../styles/Video.scss\";\nimport '../../styles/Video.scss';\nimport { navigate } from 'gatsby';\nimport { Avatar } from 'primereact/avatar';\nimport { InputTextarea } from \"primereact/inputtextarea\";\n\nimport { useAuth } from '../../Accounts/useAuth';\n  function VideoPlayer(props) {\n\n    const {user} = useAuth();\n\nconst  videos= props.videoplay ;\nconst  usered= props.user;\n\n \n\n    const [likesAmount, setLikesAmount] = useState('');\n  \n    const videoRef = useRef(null);\n    const barRef = useRef(null);\n    const durationRef = useRef(null);\n    const rangeRef = useRef(null);\n    const commentsCountRef = useRef(null);\n    const commentsCount2Ref = useRef(null);\n    const commentsListRef = useRef(null);\n    const overlayRef = useRef(null);\n    const closeOverlayRef = useRef(null);\n    const commentsContainerRef = useRef(null);\n    const closeCommentsRef = useRef(null);\n    const likesRef = useRef(null);\n    const likesIconRef = useRef(null);\nconst setRecordedVideo = props.setRecordedVideo;\n    const [showNull, setShowNull] = useState(null)\n    useEffect(() => {\n      loadComments();\n\n    if(showNull === null){\n      setShowNull(true);\n    }else{\n      setShowNull(false);\n\n    }\n\n\n\n    videoRef.current.addEventListener('timeupdate', updateProgress);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      videoRef.current.removeEventListener('timeupdate', updateProgress);\n    };\n\n\n\n    }, []);\n  \n\nfunction setNull(){\n\n  setShowNull(false);\n\n}\n\n\n\n\n   \n    const displayTime = (time) => {\n      const mins = Math.floor(time / 60);\n      let seconds = Math.floor(time % 60);\n      seconds = seconds <= 9 ? `0${seconds}` : seconds;\n      return `${mins}:${seconds}`;\n    };  \n  \n\n\n    const updateProgress = () => {\n      if (videoRef.current && barRef.current && durationRef.current) {\n        barRef.current.style.width = `${(videoRef.current.currentTime / videoRef.current.duration) * 100}%`;\n     \n        if (durationRef.current && durationRef.current.textContent) {\n          durationRef.current.textContent = `${displayTime(videoRef.current.currentTime)} : ${displayTime(videoRef.current.duration)}`;\n        }\n     \n      }\n    };\n  \n    const setProgress = (e) => {\n      const time = e.nativeEvent.offsetX / rangeRef.current.offsetWidth;\n      videoRef.current.currentTime = time * videoRef.current.duration;\n    };\n  \n    const activateComments = () => {\n      commentsContainerRef.current.classList.add(\"comments-active\");\n      videoRef.current.pause();\n      if (videoRef.current.pause) {\n        videoRef.current.style.cursor = \"pointer\";\n      }\n    };\n  \n    const deactivateComments = () => {\n      if (videoRef.current.pause) {\n        commentsContainerRef.current.classList.remove(\"comments-active\");\n        videoRef.current.play();\n        videoRef.current.style.cursor = \"default\";\n      }\n    };\n\n    const [loadedComments, setLoadedComments] = useState([]);\n\nconst loadComments = () => {\n  setLoadedComments(props.comments);\n};\n   \n    const updateLikes = (id) => {\n      setRecordedVideo(prevRecordedVideo =>\n        prevRecordedVideo.map(video => {\n          if (video.id === id) {\n            let updatedLikes = { ...video.likes };\n            \n            // Initialize likes.keys array if it doesn't exist\n            updatedLikes.keys = updatedLikes.keys || [];\n            \n            if (updatedLikes.keys.includes(user.uid)) {\n              // If user has already liked, remove their ID from keys\n              const index = updatedLikes.keys.indexOf(user.uid);\n              if (index !== -1) {\n                updatedLikes.keys.splice(index, 1);\n                if (likesIconRef.current) {\n                  likesIconRef.current.src = \"\";\n                }              }\n            } else {\n              // If user hasn't liked, add their ID to keys and increment likes count\n              likesIconRef.current.src = \"https://assets.codepen.io/2629920/heart+%281%29.png\";\n              updatedLikes.keys.push(user.uid);\n              updatedLikes[user.uid] = (updatedLikes[user.uid] || 0) + 1;\n            }\n      \n            return {\n              ...video,\n              likes: updatedLikes\n            };\n          }\n          return video;\n        })\n      );\n    };\n    \n\n\n\n    const darkmode = useRef(null)\n    \n    const [value, setValue] = useState({\n      userName: \"mr305\",\n      timePosted: \"2hrs ago\",\n      profilePhoto:\"https://www.extremecustoms.com/inc.store/images/gallery/2008-gmc-sierra-2500-hd-with-leveling-kit-gear-alloy-big-block-726mb-22x12--44-offset-22-by-12-inch-wide-wheel-toyo-proxes-st-305-40r22-tire-pic4.jpg\",\n      comment: \"\",\n      userid : user ? user.uid : \"\" ,\n      id: nanoid()\n    });\n\nfunction Comment(id){\n  setRecordedVideo(prevRecordedVideo => \n    prevRecordedVideo.map(video => {\n      if (video.id === id) {\n        return {\n          ...video,\n          comments: [...video.comments, value]\n        };\n      }\n      return video;\n    })\n  );\nconsole.log(\"values as is \", props.recordedVideos )\n  // After adding the comment, reset the value state to clear the comment field\n  setValue(prevValue => ({ ...prevValue, comment: '' }));\n}\nconst [isPlaying, setIsPlaying] = useState(true);\n\nconst togglePlay = () => {\n  if (videoRef.current) {\n    if (isPlaying) {\n      videoRef.current.pause();\n    } else {\n      videoRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  }\n};\n\n\n    return (\n      <div style={{ background: darkmode.current   ? \"black\" : \"white\"}} className=\"ConBod \" >\n        <div className=\"containered\">\n         {showNull &&     <div className=\"overlay\"  ref={overlayRef}>\n          <div className=\"howto\">\n              <div className=\"explain\">\n                <ul className=\"explain-list\">\n                  <li className=\"explain-details\">\n                    <h2 className=\"explain-details-head\">Likes</h2>\n                    <span className=\"icocolor explain-details-desc\">Click the <span className=\"icon\">\n                      <img src=\"https://assets.codepen.io/2629920/heart.png\" alt=\"\"/>\n                    </span> to set a like on the video.</span>\n                  </li>\n                  <li className=\"explain-details\">\n                    <h2 className=\"explain-details-head\">Comments</h2>\n                    <span className=\"explain-details-desc icocolor\">Click the <span className=\"icon\">\n                      <img src=\"https://assets.codepen.io/2629920/chat.png\" alt=\"\"/>\n                    </span>view comments.</span>\n                  </li>\n                </ul>\n                <div className=\"explain-video\">\n                  <h2 className=\"explain-details-head explain-video\">Video</h2>\n                  <div className=\"explain-video-bar\">\n                    <div className=\"explain-video-bar-w\"></div>\n                  </div>\n                  <span className=\"explain-details-desc icocolor\">Click through the video to navigate to a specific timeline.</span>\n                </div>\n              </div>\n              <button onClick={setNull} className=\"howto-close\" ref={closeOverlayRef}>Got it</button>\n            </div>\n      \n          </div> }\n          <div className=\"comments-container\" ref={commentsContainerRef}>\n            <div className=\"comments-head\">\n              <span className=\"comments-head-label\" ref={commentsCountRef}></span>\n              <span onClick={deactivateComments} className=\"comments-head-close\" ref={closeCommentsRef}>\n                &#10005;\n              </span>\n            </div>\n<div className=\"comments-list\"> \n\n\n  <span ref={commentsCountRef}>Comments: {props.comments && props.comments.length}</span>\n  <div ref={commentsListRef}>\n    {props.comments && props.comments.map((comment) => (\n      <div key={comment.id} className=\"comments-item\">\n        <span className=\"comment-top\">\n          <span className=\"comment-top-logo\" style={{ backgroundImage: `url(${comment.profilePhoto})` }}></span>\n          <span className=\"comment-top-details\">\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <Avatar image={\"https://www.gravatar.com/avatar/05dfd4b41340d09cae045235eb0893c3?d=mp\"} className=\"flex align-items-center bg-transparent justify-content-center mr-2\" shape=\"circle\" />\n              <span className=\"user-name\">{comment.userName && comment.userName}</span>\n            </div>\n\n            <span style={{ fontSize: \"0.80rem\" }} className=\"user-time \">{comment.timePosted && comment.timePosted}</span>\n            <span className=\"user-comment\">{comment.comment && comment.comment}</span>\n          </span>\n        </span>\n      </div>\n    ))}\n  </div>\n\n </div>\n            <div style={{ position:\"relative\",height: \"fit-content\", width:\"fit-content\"}}>\n            <InputTextarea\n  value={value.comment}\n  onChange={(e) => setValue(prevValue => ({ ...prevValue, comment: e.target.value }))}\n  rows={3}\n  cols={70}\n/>\n\n<button onClick={() => Comment(props.id)} style={{position:\"absolute\", bottom:\"0\", right:\"0\"}}>comment</button>\n</div>\n          </div>\n          <video\n            src={videos}\n            className=\"video\"\n            playsInline\n            autoPlay\n            loop\n           onClick={togglePlay}\n            ref={videoRef}\n          ></video>\n  \n          <div style={{position: \"absolute\", top:\"10px\", left: \"50px\"}} className=\"flex-auto float-left ml-auto top \">\n                   \n                    <Avatar image={\"https://www.gravatar.com/avatar/05dfd4b41340d09cae045235eb0893c3?d=mp\"} className=\"flex align-items-center bg-transparent  justify-content-center mr-2\" size=\"large\" shape=\"circle\" />\n                    <h5>{usered}</h5>\n                </div>\n         \n          <div className=\"right\">\n            <div  onClick={() => updateLikes(props.id)} className=\"icons-item right-icon\">\n              <span className=\"icon\">\n                <img src=\"https://assets.codepen.io/2629920/heart.png\" alt=\"\" id=\"likes-icon\" ref={likesIconRef} />\n              </span>\n              <span className=\"icon-label likes right-label\" data-likes={props.likes} ref={likesRef}>{props.likes}</span>\n            </div>\n            <div  onClick={activateComments} className=\"icons-item right-icon\">\n              <span className=\"icon\">\n                <img src=\"https://assets.codepen.io/2629920/chat.png\" alt=\"\" id=\"comments-icon\"/>\n              </span>\n              <span className=\"icon-label comments right-label\"></span>\n            </div>\n            <div className=\"icons-item right-icon\">\n              <span className=\"icon\">\n                <img src=\"https://assets.codepen.io/2629920/share.png\" alt=\"\"/>\n              </span>\n              <span className=\"icon-label shares right-label\">94</span>\n            </div> \n          </div>\n          <div className=\"bottom\">\n            <span className=\"progress-duration\" ref={durationRef}></span>\n            <div className=\"progress-range\" title=\"seek\" ref={rangeRef} onClick={setProgress}>\n              <div className=\"progress-bar\" ref={barRef}></div>\n            </div>\n            <div className=\"icons\">\n              <div  onClick={ () => navigate('/')}  className=\"icons-item\">\n                <span className=\"icon\">\n                  <img src=\"https://assets.codepen.io/2629920/home.png\" alt=\"\"/>\n                </span>\n                <span  className=\"icon-label\">Home</span>\n              </div>\n              <div className=\"icons-item\">\n                <span className=\"icon\">\n                  <img src=\"https://assets.codepen.io/2629920/search_1.png\" alt=\"\"/>\n                </span>\n                <span className=\"icon-label\">Discover</span>\n              </div>\n              <div className=\"icons-item\">\n                <div className=\"icons-item-add\">\n                  <span className=\"icon\" style={{ display: \"flex\" }}>\n                    <img src=\"https://assets.codepen.io/2629920/add.png\" alt=\"\"/>\n                  </span>\n                </div>\n              </div>\n              <div className=\"icons-item\">\n                <span className=\"icon\">\n                  <img src=\"https://assets.codepen.io/2629920/comment.png\" alt=\"\"/>\n                </span>\n                <span className=\"icon-label\">Inbox</span>\n              </div>\n              <div onClick={ () => navigate('/profileComponents/Myprofile')} className=\"icons-item\">\n                <span className=\"icon\">\n                  <img src=\"https://assets.codepen.io/2629920/user+%281%29.png\" alt=\"\"/>\n                </span>\n                <span className=\"icon-label\">Me</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  export default VideoPlayer;\n  \n    \n\n","import * as React from 'react';\nimport { KeyFilter } from 'primereact/keyfilter';\nimport { Tooltip } from 'primereact/tooltip';\nimport { ObjectUtils, classNames, mergeProps, DomHandler } from 'primereact/utils';\nimport { ComponentBase } from 'primereact/componentbase';\nimport { PrimeReactContext } from 'primereact/api';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar InputTextareaBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'InputTextarea',\n    autoResize: false,\n    keyfilter: null,\n    onBlur: null,\n    onFocus: null,\n    onBeforeInput: null,\n    onInput: null,\n    onKeyDown: null,\n    onKeyUp: null,\n    onPaste: null,\n    tooltip: null,\n    tooltipOptions: null,\n    validateOnly: false,\n    children: undefined\n  }\n});\n\nvar InputTextarea = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var context = React.useContext(PrimeReactContext);\n  var props = InputTextareaBase.getProps(inProps, context);\n  var elementRef = React.useRef(ref);\n  var cachedScrollHeight = React.useRef(0);\n  var _InputTextareaBase$se = InputTextareaBase.setMetaData({\n      props: props\n    }),\n    ptm = _InputTextareaBase$se.ptm;\n  var onFocus = function onFocus(event) {\n    if (props.autoResize) {\n      resize();\n    }\n    props.onFocus && props.onFocus(event);\n  };\n  var onBlur = function onBlur(event) {\n    if (props.autoResize) {\n      resize();\n    }\n    props.onBlur && props.onBlur(event);\n  };\n  var onKeyUp = function onKeyUp(event) {\n    if (props.autoResize) {\n      resize();\n    }\n    props.onKeyUp && props.onKeyUp(event);\n  };\n  var onKeyDown = function onKeyDown(event) {\n    props.onKeyDown && props.onKeyDown(event);\n    if (props.keyfilter) {\n      KeyFilter.onKeyPress(event, props.keyfilter, props.validateOnly);\n    }\n  };\n  var onBeforeInput = function onBeforeInput(event) {\n    props.onBeforeInput && props.onBeforeInput(event);\n    if (props.keyfilter) {\n      KeyFilter.onBeforeInput(event, props.keyfilter, props.validateOnly);\n    }\n  };\n  var onPaste = function onPaste(event) {\n    props.onPaste && props.onPaste(event);\n    if (props.keyfilter) {\n      KeyFilter.onPaste(event, props.keyfilter, props.validateOnly);\n    }\n  };\n  var onInput = function onInput(event) {\n    var target = event.target;\n    if (props.autoResize) {\n      resize(ObjectUtils.isEmpty(target.value));\n    }\n    props.onInput && props.onInput(event);\n    ObjectUtils.isNotEmpty(target.value) ? DomHandler.addClass(target, 'p-filled') : DomHandler.removeClass(target, 'p-filled');\n  };\n  var resize = function resize(initial) {\n    var inputEl = elementRef.current;\n    if (inputEl && DomHandler.isVisible(inputEl)) {\n      if (!cachedScrollHeight.current) {\n        cachedScrollHeight.current = inputEl.scrollHeight;\n        inputEl.style.overflow = 'hidden';\n      }\n      if (cachedScrollHeight.current !== inputEl.scrollHeight || initial) {\n        inputEl.style.height = '';\n        inputEl.style.height = inputEl.scrollHeight + 'px';\n        if (parseFloat(inputEl.style.height) >= parseFloat(inputEl.style.maxHeight)) {\n          inputEl.style.overflowY = 'scroll';\n          inputEl.style.height = inputEl.style.maxHeight;\n        } else {\n          inputEl.style.overflow = 'hidden';\n        }\n        cachedScrollHeight.current = inputEl.scrollHeight;\n      }\n    }\n  };\n  React.useEffect(function () {\n    ObjectUtils.combinedRefs(elementRef, ref);\n  }, [elementRef, ref]);\n  React.useEffect(function () {\n    if (props.autoResize) {\n      resize(true);\n    }\n  }, [props.autoResize]);\n  var isFilled = React.useMemo(function () {\n    return ObjectUtils.isNotEmpty(props.value) || ObjectUtils.isNotEmpty(props.defaultValue);\n  }, [props.value, props.defaultValue]);\n  var hasTooltip = ObjectUtils.isNotEmpty(props.tooltip);\n  var className = classNames('p-inputtextarea p-inputtext p-component', {\n    'p-disabled': props.disabled,\n    'p-filled': isFilled,\n    'p-inputtextarea-resizable': props.autoResize\n  }, props.className);\n  var rootProps = mergeProps({\n    ref: elementRef,\n    className: className,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onKeyUp: onKeyUp,\n    onKeyDown: onKeyDown,\n    onBeforeInput: onBeforeInput,\n    onInput: onInput,\n    onPaste: onPaste\n  }, InputTextareaBase.getOtherProps(props), ptm('root'));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", rootProps), hasTooltip && /*#__PURE__*/React.createElement(Tooltip, _extends({\n    target: elementRef,\n    content: props.tooltip\n  }, props.tooltipOptions, {\n    pt: ptm('tooltip')\n  })));\n}));\nInputTextarea.displayName = 'InputTextarea';\n\nexport { InputTextarea };\n"],"names":["TheWall","stream","setStream","useState","liveVideoFeed","useRef","recordedVideos","setRecordedVideos","permission","setPermission","recordedVideo","setRecordedVideo","mediaRecorder","showVid","setShowVid","facingMode","setFacingMode","useEffect","console","log","getCameraPermission","async","window","videoConstraints","audio","video","audioConstraints","audioStream","navigator","mediaDevices","getUserMedia","videoStream","combinedStream","MediaStream","concat","_toConsumableArray","getAudioTracks","getVideoTracks","err","alert","message","current","srcObject","React","className","style","marginTop","Navbar","onClick","position","top","zIndex","margin","left","right","borderRadius","height","width","bottom","background","VideoRecorder","stopCameraStream","getTracks","forEach","track","stop","map","vid","key","id","VideoPlayer","videoplay","user","likes","shares","comments","Head","props","mimeType","useAuth","recordingStatus","setRecordingStatus","videoChunks","setVideoChunks","color","ref","autoPlay","playsInline","transform","border","media","MediaRecorder","start","localVideoChunks","ondataavailable","event","data","size","push","type","display","padding","stopRecording","onstop","videoBlob","Blob","videoUrl","URL","createObjectURL","src","controls","flexDirection","justifyContent","addRecordedVideo","newRecordedVideo","uid","nanoid","prevState","videos","usered","likesAmount","setLikesAmount","videoRef","barRef","durationRef","rangeRef","commentsCountRef","commentsListRef","overlayRef","closeOverlayRef","commentsContainerRef","closeCommentsRef","likesRef","likesIconRef","showNull","setShowNull","loadComments","addEventListener","updateProgress","removeEventListener","displayTime","time","mins","Math","floor","seconds","currentTime","duration","textContent","loadedComments","setLoadedComments","darkmode","value","setValue","userName","timePosted","profilePhoto","comment","userid","isPlaying","setIsPlaying","alt","deactivateComments","pause","classList","remove","play","cursor","length","backgroundImage","Avatar","image","shape","fontSize","InputTextarea","onChange","e","prevValue","target","rows","cols","Comment","prevRecordedVideo","loop","togglePlay","updateLikes","updatedLikes","keys","includes","index","indexOf","splice","activateComments","add","title","nativeEvent","offsetX","offsetWidth","navigate","_extends","Object","assign","bind","i","arguments","source","prototype","hasOwnProperty","call","apply","this","InputTextareaBase","extend","defaultProps","__TYPE","autoResize","keyfilter","onBlur","onFocus","onBeforeInput","onInput","onKeyDown","onKeyUp","onPaste","tooltip","tooltipOptions","validateOnly","children","undefined","inProps","context","getProps","elementRef","cachedScrollHeight","ptm","setMetaData","resize","initial","inputEl","isVisible","scrollHeight","overflow","parseFloat","maxHeight","overflowY","combinedRefs","isFilled","isNotEmpty","defaultValue","hasTooltip","disabled","rootProps","onKeyPress","isEmpty","addClass","removeClass","getOtherProps","content","pt","displayName"],"sourceRoot":""}