{"version":3,"file":"component---src-pages-news-video-uploader-js-0e34caaaefa742dcda1b.js","mappings":"uIAyCA,UApCsBA,KACpB,MAAMC,EAAYC,EAAAA,OAAa,MA0B/B,OACEA,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,WAAK,oBACLA,EAAAA,cAACC,EAAAA,QAAO,CAACC,QA3BU,CACrBC,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,OAAO,EACPC,QAAS,CAAC,CACRC,IAAK,qBACLC,KAAM,eAoB4BC,QAhBXC,IACzBZ,EAAUa,QAAUD,EAGpBA,EAAOE,GAAG,WAAW,KACnBC,QAAQC,IAAI,oBAAoB,IAGlCJ,EAAOE,GAAG,WAAW,KACnBC,QAAQC,IAAI,sBAAsB,GAClC,IAOAf,EAAAA,cAAA,WAAK,oBACJ,C","sources":["webpack://blabzio/./src/pages/news/VideoUploader.js"],"sourcesContent":["import React from 'react';\n\n// This imports the functional component from the previous sample.\nimport VideoJS from './VideoJS'\n\nconst VideoUploader = () => {\n  const playerRef = React.useRef(null);\n\n  const videoJsOptions = {\n    autoplay: true,\n    controls: true,\n    responsive: true,\n    fluid: true,\n    sources: [{\n      src: '/path/to/video.mp4',\n      type: 'video/mp4'\n    }]\n  };\n\n  const handlePlayerReady = (player) => {\n    playerRef.current = player;\n\n    // You can handle player events here, for example:\n    player.on('waiting', () => {\n      videojs.log('player is waiting');\n    });\n\n    player.on('dispose', () => {\n      videojs.log('player will dispose');\n    });\n  };\n\n  return (\n    <>\n      <div>Rest of app here</div>\n      <VideoJS options={videoJsOptions} onReady={handlePlayerReady} />\n      <div>Rest of app here</div>\n    </>\n  );\n}\n\nexport default VideoUploader;"],"names":["VideoUploader","playerRef","React","VideoJS","options","autoplay","controls","responsive","fluid","sources","src","type","onReady","player","current","on","videojs","log"],"sourceRoot":""}