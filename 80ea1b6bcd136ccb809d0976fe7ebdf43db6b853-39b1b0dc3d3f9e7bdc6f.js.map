{"version":3,"file":"80ea1b6bcd136ccb809d0976fe7ebdf43db6b853-39b1b0dc3d3f9e7bdc6f.js","mappings":"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","sources":["webpack://blabzio/./node_modules/@firebase/auth/dist/esm2017/internal.js","webpack://blabzio/./node_modules/@firebase/auth-compat/dist/index.esm2017.js","webpack://blabzio/./node_modules/@firebase/database-compat/dist/index.esm2017.js"],"sourcesContent":["import { as as debugAssert, at as _isIOS, au as _isAndroid, av as _fail, aw as _getRedirectUrl, ax as _getProjectConfig, ay as _isIOS7Or8, az as _createError, aA as _assert, aB as AuthEventManager, aC as _getInstance, b as browserLocalPersistence, aD as _persistenceKeyName, a as browserSessionPersistence, aE as _getRedirectResult, aF as _overrideRedirectResult, aG as _clearRedirectOutcomes, aH as _castAuth } from './index-e3d5d3f4.js';\nexport { A as ActionCodeOperation, ag as ActionCodeURL, J as AuthCredential, G as AuthErrorCodes, aJ as AuthImpl, aM as AuthPopup, K as EmailAuthCredential, Q as EmailAuthProvider, U as FacebookAuthProvider, F as FactorId, aN as FetchProvider, W as GithubAuthProvider, V as GoogleAuthProvider, L as OAuthCredential, X as OAuthProvider, O as OperationType, M as PhoneAuthCredential, P as PhoneAuthProvider, m as PhoneMultiFactorGenerator, p as ProviderId, R as RecaptchaVerifier, aO as SAMLAuthCredential, Y as SAMLAuthProvider, S as SignInMethod, T as TotpMultiFactorGenerator, n as TotpSecret, Z as TwitterAuthProvider, aI as UserImpl, aA as _assert, aH as _castAuth, av as _fail, aL as _generateEventId, aK as _getClientVersion, aC as _getInstance, aE as _getRedirectResult, aF as _overrideRedirectResult, aD as _persistenceKeyName, a5 as applyActionCode, w as beforeAuthStateChanged, b as browserLocalPersistence, k as browserPopupRedirectResolver, a as browserSessionPersistence, a6 as checkActionCode, a4 as confirmPasswordReset, I as connectAuthEmulator, a8 as createUserWithEmailAndPassword, D as debugErrorMap, C as deleteUser, ad as fetchSignInMethodsForEmail, ao as getAdditionalUserInfo, o as getAuth, al as getIdToken, am as getIdTokenResult, aq as getMultiFactorResolver, j as getRedirectResult, N as inMemoryPersistence, i as indexedDBLocalPersistence, H as initializeAuth, t as initializeRecaptchaConfig, ab as isSignInWithEmailLink, a0 as linkWithCredential, l as linkWithPhoneNumber, d as linkWithPopup, g as linkWithRedirect, ar as multiFactor, x as onAuthStateChanged, v as onIdTokenChanged, ah as parseActionCodeURL, E as prodErrorMap, a1 as reauthenticateWithCredential, r as reauthenticateWithPhoneNumber, e as reauthenticateWithPopup, h as reauthenticateWithRedirect, ap as reload, ae as sendEmailVerification, a3 as sendPasswordResetEmail, aa as sendSignInLinkToEmail, q as setPersistence, _ as signInAnonymously, $ as signInWithCredential, a2 as signInWithCustomToken, a9 as signInWithEmailAndPassword, ac as signInWithEmailLink, s as signInWithPhoneNumber, c as signInWithPopup, f as signInWithRedirect, B as signOut, an as unlink, z as updateCurrentUser, aj as updateEmail, ak as updatePassword, u as updatePhoneNumber, ai as updateProfile, y as useDeviceLanguage, af as verifyBeforeUpdateEmail, a7 as verifyPasswordResetCode } from './index-e3d5d3f4.js';\nimport { querystringDecode } from '@firebase/util';\nimport '@firebase/app';\nimport 'tslib';\nimport '@firebase/logger';\nimport '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _cordovaWindow() {\r\n    return window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait after the app comes back into focus before concluding that\r\n * the user closed the sign in tab.\r\n */\r\nconst REDIRECT_TIMEOUT_MS = 2000;\r\n/**\r\n * Generates the URL for the OAuth handler.\r\n */\r\nasync function _generateHandlerUrl(auth, event, provider) {\r\n    var _a;\r\n    // Get the cordova plugins\r\n    const { BuildInfo } = _cordovaWindow();\r\n    debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\r\n    const sessionDigest = await computeSha256(event.sessionId);\r\n    const additionalParams = {};\r\n    if (_isIOS()) {\r\n        // iOS app identifier\r\n        additionalParams['ibi'] = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        // Android app identifier\r\n        additionalParams['apn'] = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Add the display name if available\r\n    if (BuildInfo.displayName) {\r\n        additionalParams['appDisplayName'] = BuildInfo.displayName;\r\n    }\r\n    // Attached the hashed session ID\r\n    additionalParams['sessionId'] = sessionDigest;\r\n    return _getRedirectUrl(auth, provider, event.type, undefined, (_a = event.eventId) !== null && _a !== void 0 ? _a : undefined, additionalParams);\r\n}\r\n/**\r\n * Validates that this app is valid for this project configuration\r\n */\r\nasync function _validateOrigin(auth) {\r\n    const { BuildInfo } = _cordovaWindow();\r\n    const request = {};\r\n    if (_isIOS()) {\r\n        request.iosBundleId = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        request.androidPackageName = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Will fail automatically if package name is not authorized\r\n    await _getProjectConfig(auth, request);\r\n}\r\nfunction _performRedirect(handlerUrl) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    return new Promise(resolve => {\r\n        cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\r\n            let iabRef = null;\r\n            if (browserTabIsAvailable) {\r\n                cordova.plugins.browsertab.openUrl(handlerUrl);\r\n            }\r\n            else {\r\n                // TODO: Return the inappbrowser ref that's returned from the open call\r\n                iabRef = cordova.InAppBrowser.open(handlerUrl, _isIOS7Or8() ? '_blank' : '_system', 'location=yes');\r\n            }\r\n            resolve(iabRef);\r\n        });\r\n    });\r\n}\r\n/**\r\n * This function waits for app activity to be seen before resolving. It does\r\n * this by attaching listeners to various dom events. Once the app is determined\r\n * to be visible, this promise resolves. AFTER that resolution, the listeners\r\n * are detached and any browser tabs left open will be closed.\r\n */\r\nasync function _waitForAppResume(auth, eventListener, iabRef) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    let cleanup = () => { };\r\n    try {\r\n        await new Promise((resolve, reject) => {\r\n            let onCloseTimer = null;\r\n            // DEFINE ALL THE CALLBACKS =====\r\n            function authEventSeen() {\r\n                var _a;\r\n                // Auth event was detected. Resolve this promise and close the extra\r\n                // window if it's still open.\r\n                resolve();\r\n                const closeBrowserTab = (_a = cordova.plugins.browsertab) === null || _a === void 0 ? void 0 : _a.close;\r\n                if (typeof closeBrowserTab === 'function') {\r\n                    closeBrowserTab();\r\n                }\r\n                // Close inappbrowser emebedded webview in iOS7 and 8 case if still\r\n                // open.\r\n                if (typeof (iabRef === null || iabRef === void 0 ? void 0 : iabRef.close) === 'function') {\r\n                    iabRef.close();\r\n                }\r\n            }\r\n            function resumed() {\r\n                if (onCloseTimer) {\r\n                    // This code already ran; do not rerun.\r\n                    return;\r\n                }\r\n                onCloseTimer = window.setTimeout(() => {\r\n                    // Wait two seeconds after resume then reject.\r\n                    reject(_createError(auth, \"redirect-cancelled-by-user\" /* AuthErrorCode.REDIRECT_CANCELLED_BY_USER */));\r\n                }, REDIRECT_TIMEOUT_MS);\r\n            }\r\n            function visibilityChanged() {\r\n                if ((document === null || document === void 0 ? void 0 : document.visibilityState) === 'visible') {\r\n                    resumed();\r\n                }\r\n            }\r\n            // ATTACH ALL THE LISTENERS =====\r\n            // Listen for the auth event\r\n            eventListener.addPassiveListener(authEventSeen);\r\n            // Listen for resume and visibility events\r\n            document.addEventListener('resume', resumed, false);\r\n            if (_isAndroid()) {\r\n                document.addEventListener('visibilitychange', visibilityChanged, false);\r\n            }\r\n            // SETUP THE CLEANUP FUNCTION =====\r\n            cleanup = () => {\r\n                eventListener.removePassiveListener(authEventSeen);\r\n                document.removeEventListener('resume', resumed, false);\r\n                document.removeEventListener('visibilitychange', visibilityChanged, false);\r\n                if (onCloseTimer) {\r\n                    window.clearTimeout(onCloseTimer);\r\n                }\r\n            };\r\n        });\r\n    }\r\n    finally {\r\n        cleanup();\r\n    }\r\n}\r\n/**\r\n * Checks the configuration of the Cordova environment. This has no side effect\r\n * if the configuration is correct; otherwise it throws an error with the\r\n * missing plugin.\r\n */\r\nfunction _checkCordovaConfiguration(auth) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\r\n    const win = _cordovaWindow();\r\n    // Check all dependencies installed.\r\n    // https://github.com/nordnet/cordova-universal-links-plugin\r\n    // Note that cordova-universal-links-plugin has been abandoned.\r\n    // A fork with latest fixes is available at:\r\n    // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\r\n    _assert(typeof ((_a = win === null || win === void 0 ? void 0 : win.universalLinks) === null || _a === void 0 ? void 0 : _a.subscribe) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-universal-links-plugin-fix'\r\n    });\r\n    // https://www.npmjs.com/package/cordova-plugin-buildinfo\r\n    _assert(typeof ((_b = win === null || win === void 0 ? void 0 : win.BuildInfo) === null || _b === void 0 ? void 0 : _b.packageName) !== 'undefined', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-buildInfo'\r\n    });\r\n    // https://github.com/google/cordova-plugin-browsertab\r\n    _assert(typeof ((_e = (_d = (_c = win === null || win === void 0 ? void 0 : win.cordova) === null || _c === void 0 ? void 0 : _c.plugins) === null || _d === void 0 ? void 0 : _d.browsertab) === null || _e === void 0 ? void 0 : _e.openUrl) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    _assert(typeof ((_h = (_g = (_f = win === null || win === void 0 ? void 0 : win.cordova) === null || _f === void 0 ? void 0 : _f.plugins) === null || _g === void 0 ? void 0 : _g.browsertab) === null || _h === void 0 ? void 0 : _h.isAvailable) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\r\n    _assert(typeof ((_k = (_j = win === null || win === void 0 ? void 0 : win.cordova) === null || _j === void 0 ? void 0 : _j.InAppBrowser) === null || _k === void 0 ? void 0 : _k.open) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-inappbrowser'\r\n    });\r\n}\r\n/**\r\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\r\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\r\n * protocol).\r\n */\r\nasync function computeSha256(sessionId) {\r\n    const bytes = stringToArrayBuffer(sessionId);\r\n    // TODO: For IE11 crypto has a different name and this operation comes back\r\n    //       as an object, not a promise. This is the old proposed standard that\r\n    //       is used by IE11:\r\n    // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\r\n    const buf = await crypto.subtle.digest('SHA-256', bytes);\r\n    const arr = Array.from(new Uint8Array(buf));\r\n    return arr.map(num => num.toString(16).padStart(2, '0')).join('');\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    // This function is only meant to deal with an ASCII charset and makes\r\n    // certain simplifying assumptions.\r\n    debugAssert(/[0-9a-zA-Z]+/.test(str), 'Can only convert alpha-numeric strings');\r\n    if (typeof TextEncoder !== 'undefined') {\r\n        return new TextEncoder().encode(str);\r\n    }\r\n    const buff = new ArrayBuffer(str.length);\r\n    const view = new Uint8Array(buff);\r\n    for (let i = 0; i < str.length; i++) {\r\n        view[i] = str.charCodeAt(i);\r\n    }\r\n    return view;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SESSION_ID_LENGTH = 20;\r\n/** Custom AuthEventManager that adds passive listeners to events */\r\nclass CordovaAuthEventManager extends AuthEventManager {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.passiveListeners = new Set();\r\n        this.initPromise = new Promise(resolve => {\r\n            this.resolveInialized = resolve;\r\n        });\r\n    }\r\n    addPassiveListener(cb) {\r\n        this.passiveListeners.add(cb);\r\n    }\r\n    removePassiveListener(cb) {\r\n        this.passiveListeners.delete(cb);\r\n    }\r\n    // In a Cordova environment, this manager can live through multiple redirect\r\n    // operations\r\n    resetRedirect() {\r\n        this.queuedRedirectEvent = null;\r\n        this.hasHandledPotentialRedirect = false;\r\n    }\r\n    /** Override the onEvent method */\r\n    onEvent(event) {\r\n        this.resolveInialized();\r\n        this.passiveListeners.forEach(cb => cb(event));\r\n        return super.onEvent(event);\r\n    }\r\n    async initialized() {\r\n        await this.initPromise;\r\n    }\r\n}\r\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\r\nfunction _generateNewEvent(auth, type, eventId = null) {\r\n    return {\r\n        type,\r\n        eventId,\r\n        urlResponse: null,\r\n        sessionId: generateSessionId(),\r\n        postBody: null,\r\n        tenantId: auth.tenantId,\r\n        error: _createError(auth, \"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\r\n    };\r\n}\r\nfunction _savePartialEvent(auth, event) {\r\n    return storage()._set(persistenceKey(auth), event);\r\n}\r\nasync function _getAndRemoveEvent(auth) {\r\n    const event = (await storage()._get(persistenceKey(auth)));\r\n    if (event) {\r\n        await storage()._remove(persistenceKey(auth));\r\n    }\r\n    return event;\r\n}\r\nfunction _eventFromPartialAndUrl(partialEvent, url) {\r\n    var _a, _b;\r\n    // Parse the deep link within the dynamic link URL.\r\n    const callbackUrl = _getDeepLinkFromCallback(url);\r\n    // Confirm it is actually a callback URL.\r\n    // Currently the universal link will be of this format:\r\n    // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\r\n    // This is a fake URL but is not intended to take the user anywhere\r\n    // and just redirect to the app.\r\n    if (callbackUrl.includes('/__/auth/callback')) {\r\n        // Check if there is an error in the URL.\r\n        // This mechanism is also used to pass errors back to the app:\r\n        // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\r\n        const params = searchParamsOrEmpty(callbackUrl);\r\n        // Get the error object corresponding to the stringified error if found.\r\n        const errorObject = params['firebaseError']\r\n            ? parseJsonOrNull(decodeURIComponent(params['firebaseError']))\r\n            : null;\r\n        const code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];\r\n        const error = code ? _createError(code) : null;\r\n        if (error) {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                error,\r\n                urlResponse: null,\r\n                sessionId: null,\r\n                postBody: null\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                sessionId: partialEvent.sessionId,\r\n                urlResponse: callbackUrl,\r\n                postBody: null\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction generateSessionId() {\r\n    const chars = [];\r\n    const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    for (let i = 0; i < SESSION_ID_LENGTH; i++) {\r\n        const idx = Math.floor(Math.random() * allowedChars.length);\r\n        chars.push(allowedChars.charAt(idx));\r\n    }\r\n    return chars.join('');\r\n}\r\nfunction storage() {\r\n    return _getInstance(browserLocalPersistence);\r\n}\r\nfunction persistenceKey(auth) {\r\n    return _persistenceKeyName(\"authEvent\" /* KeyName.AUTH_EVENT */, auth.config.apiKey, auth.name);\r\n}\r\nfunction parseJsonOrNull(json) {\r\n    try {\r\n        return JSON.parse(json);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\r\n// Exported for testing\r\nfunction _getDeepLinkFromCallback(url) {\r\n    const params = searchParamsOrEmpty(url);\r\n    const link = params['link'] ? decodeURIComponent(params['link']) : undefined;\r\n    // Double link case (automatic redirect)\r\n    const doubleDeepLink = searchParamsOrEmpty(link)['link'];\r\n    // iOS custom scheme links.\r\n    const iOSDeepLink = params['deep_link_id']\r\n        ? decodeURIComponent(params['deep_link_id'])\r\n        : undefined;\r\n    const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\r\n    return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\r\n}\r\n/**\r\n * Optimistically tries to get search params from a string, or else returns an\r\n * empty search params object.\r\n */\r\nfunction searchParamsOrEmpty(url) {\r\n    if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {\r\n        return {};\r\n    }\r\n    const [_, ...rest] = url.split('?');\r\n    return querystringDecode(rest.join('?'));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait for the initial auth event before concluding no\r\n * redirect pending\r\n */\r\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\r\nclass CordovaPopupRedirectResolver {\r\n    constructor() {\r\n        this._redirectPersistence = browserSessionPersistence;\r\n        this._shouldInitProactively = true; // This is lightweight for Cordova\r\n        this.eventManagers = new Map();\r\n        this.originValidationPromises = {};\r\n        this._completeRedirectFn = _getRedirectResult;\r\n        this._overrideRedirectResult = _overrideRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        const key = auth._key();\r\n        let manager = this.eventManagers.get(key);\r\n        if (!manager) {\r\n            manager = new CordovaAuthEventManager(auth);\r\n            this.eventManagers.set(key, manager);\r\n            this.attachCallbackListeners(auth, manager);\r\n        }\r\n        return manager;\r\n    }\r\n    _openPopup(auth) {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        _checkCordovaConfiguration(auth);\r\n        const manager = await this._initialize(auth);\r\n        await manager.initialized();\r\n        // Reset the persisted redirect states. This does not matter on Web where\r\n        // the redirect always blows away application state entirely. On Cordova,\r\n        // the app maintains control flow through the redirect.\r\n        manager.resetRedirect();\r\n        _clearRedirectOutcomes();\r\n        await this._originValidation(auth);\r\n        const event = _generateNewEvent(auth, authType, eventId);\r\n        await _savePartialEvent(auth, event);\r\n        const url = await _generateHandlerUrl(auth, event, provider);\r\n        const iabRef = await _performRedirect(url);\r\n        return _waitForAppResume(auth, manager, iabRef);\r\n    }\r\n    _isIframeWebStorageSupported(_auth, _cb) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    _originValidation(auth) {\r\n        const key = auth._key();\r\n        if (!this.originValidationPromises[key]) {\r\n            this.originValidationPromises[key] = _validateOrigin(auth);\r\n        }\r\n        return this.originValidationPromises[key];\r\n    }\r\n    attachCallbackListeners(auth, manager) {\r\n        // Get the global plugins\r\n        const { universalLinks, handleOpenURL, BuildInfo } = _cordovaWindow();\r\n        const noEventTimeout = setTimeout(async () => {\r\n            // We didn't see that initial event. Clear any pending object and\r\n            // dispatch no event\r\n            await _getAndRemoveEvent(auth);\r\n            manager.onEvent(generateNoEvent());\r\n        }, INITIAL_EVENT_TIMEOUT_MS);\r\n        const universalLinksCb = async (eventData) => {\r\n            // We have an event so we can clear the no event timeout\r\n            clearTimeout(noEventTimeout);\r\n            const partialEvent = await _getAndRemoveEvent(auth);\r\n            let finalEvent = null;\r\n            if (partialEvent && (eventData === null || eventData === void 0 ? void 0 : eventData['url'])) {\r\n                finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\r\n            }\r\n            // If finalEvent is never filled, trigger with no event\r\n            manager.onEvent(finalEvent || generateNoEvent());\r\n        };\r\n        // Universal links subscriber doesn't exist for iOS, so we need to check\r\n        if (typeof universalLinks !== 'undefined' &&\r\n            typeof universalLinks.subscribe === 'function') {\r\n            universalLinks.subscribe(null, universalLinksCb);\r\n        }\r\n        // iOS 7 or 8 custom URL schemes.\r\n        // This is also the current default behavior for iOS 9+.\r\n        // For this to work, cordova-plugin-customurlscheme needs to be installed.\r\n        // https://github.com/EddyVerbruggen/Custom-URL-scheme\r\n        // Do not overwrite the existing developer's URL handler.\r\n        const existingHandleOpenURL = handleOpenURL;\r\n        const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\r\n        _cordovaWindow().handleOpenURL = async (url) => {\r\n            if (url.toLowerCase().startsWith(packagePrefix)) {\r\n                // We want this intentionally to float\r\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                universalLinksCb({ url });\r\n            }\r\n            // Call the developer's handler if it is present.\r\n            if (typeof existingHandleOpenURL === 'function') {\r\n                try {\r\n                    existingHandleOpenURL(url);\r\n                }\r\n                catch (e) {\r\n                    // This is a developer error. Don't stop the flow of the SDK.\r\n                    console.error(e);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\r\n * based applications.\r\n *\r\n * @public\r\n */\r\nconst cordovaPopupRedirectResolver = CordovaPopupRedirectResolver;\r\nfunction generateNoEvent() {\r\n    return {\r\n        type: \"unknown\" /* AuthEventType.UNKNOWN */,\r\n        eventId: null,\r\n        sessionId: null,\r\n        urlResponse: null,\r\n        postBody: null,\r\n        tenantId: null,\r\n        error: _createError(\"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\r\n// of autogenerated documentation pages to reduce accidental misuse.\r\nfunction addFrameworkForLogging(auth, framework) {\r\n    _castAuth(auth)._logFramework(framework);\r\n}\n\nexport { addFrameworkForLogging, cordovaPopupRedirectResolver };\n//# sourceMappingURL=internal.js.map\n","import firebase from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport { Component } from '@firebase/component';\nimport { isBrowserExtension, getUA, isReactNative, isNode, isIndexedDBAvailable, isIE, FirebaseError } from '@firebase/util';\n\nvar name = \"@firebase/auth-compat\";\nvar version = \"0.4.2\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\r\nfunction _getCurrentScheme() {\r\n    var _a;\r\n    return ((_a = self === null || self === void 0 ? void 0 : self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;\r\n}\r\n/**\r\n * @return {boolean} Whether the current environment is http or https.\r\n */\r\nfunction _isHttpOrHttps() {\r\n    return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\r\n}\r\n/**\r\n * @param {?string=} ua The user agent.\r\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\r\n *     Cordova environment.\r\n */\r\nfunction _isAndroidOrIosCordovaScheme(ua = getUA()) {\r\n    return !!((_getCurrentScheme() === 'file:' ||\r\n        _getCurrentScheme() === 'ionic:' ||\r\n        _getCurrentScheme() === 'capacitor:') &&\r\n        ua.toLowerCase().match(/iphone|ipad|ipod|android/));\r\n}\r\n/**\r\n * @return {boolean} Whether the environment is a native environment, where\r\n *     CORS checks do not apply.\r\n */\r\nfunction _isNativeEnvironment() {\r\n    return isReactNative() || isNode();\r\n}\r\n/**\r\n * Checks whether the user agent is IE11.\r\n * @return {boolean} True if it is IE11.\r\n */\r\nfunction _isIe11() {\r\n    return isIE() && (document === null || document === void 0 ? void 0 : document.documentMode) === 11;\r\n}\r\n/**\r\n * Checks whether the user agent is Edge.\r\n * @param {string} userAgent The browser user agent string.\r\n * @return {boolean} True if it is Edge.\r\n */\r\nfunction _isEdge(ua = getUA()) {\r\n    return /Edge\\/\\d+/.test(ua);\r\n}\r\n/**\r\n * @param {?string=} opt_userAgent The navigator user agent.\r\n * @return {boolean} Whether local storage is not synchronized between an iframe\r\n *     and a popup of the same domain.\r\n */\r\nfunction _isLocalStorageNotSynchronized(ua = getUA()) {\r\n    return _isIe11() || _isEdge(ua);\r\n}\r\n/** @return {boolean} Whether web storage is supported. */\r\nfunction _isWebStorageSupported() {\r\n    try {\r\n        const storage = self.localStorage;\r\n        const key = exp._generateEventId();\r\n        if (storage) {\r\n            // setItem will throw an exception if we cannot access WebStorage (e.g.,\r\n            // Safari in private mode).\r\n            storage['setItem'](key, '1');\r\n            storage['removeItem'](key);\r\n            // For browsers where iframe web storage does not synchronize with a popup\r\n            // of the same domain, indexedDB is used for persistent storage. These\r\n            // browsers include IE11 and Edge.\r\n            // Make sure it is supported (IE11 and Edge private mode does not support\r\n            // that).\r\n            if (_isLocalStorageNotSynchronized()) {\r\n                // In such browsers, if indexedDB is not supported, an iframe cannot be\r\n                // notified of the popup sign in result.\r\n                return isIndexedDBAvailable();\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // localStorage is not available from a worker. Test availability of\r\n        // indexedDB.\r\n        return _isWorker() && isIndexedDBAvailable();\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @param {?Object=} global The optional global scope.\r\n * @return {boolean} Whether current environment is a worker.\r\n */\r\nfunction _isWorker() {\r\n    // WorkerGlobalScope only defined in worker environment.\r\n    return (typeof global !== 'undefined' &&\r\n        'WorkerGlobalScope' in global &&\r\n        'importScripts' in global);\r\n}\r\nfunction _isPopupRedirectSupported() {\r\n    return ((_isHttpOrHttps() ||\r\n        isBrowserExtension() ||\r\n        _isAndroidOrIosCordovaScheme()) &&\r\n        // React Native with remote debugging reports its location.protocol as\r\n        // http.\r\n        !_isNativeEnvironment() &&\r\n        // Local storage has to be supported for browser popup and redirect\r\n        // operations to work.\r\n        _isWebStorageSupported() &&\r\n        // DOM, popups and redirects are not supported within a worker.\r\n        !_isWorker());\r\n}\r\n/** Quick check that indicates the platform *may* be Cordova */\r\nfunction _isLikelyCordova() {\r\n    return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\r\n}\r\nasync function _isCordova() {\r\n    if (!_isLikelyCordova()) {\r\n        return false;\r\n    }\r\n    return new Promise(resolve => {\r\n        const timeoutId = setTimeout(() => {\r\n            // We've waited long enough; the telltale Cordova event didn't happen\r\n            resolve(false);\r\n        }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\r\n        document.addEventListener('deviceready', () => {\r\n            clearTimeout(timeoutId);\r\n            resolve(true);\r\n        });\r\n    });\r\n}\r\nfunction _getSelfWindow() {\r\n    return typeof window !== 'undefined' ? window : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst Persistence = {\r\n    LOCAL: 'local',\r\n    NONE: 'none',\r\n    SESSION: 'session'\r\n};\r\nconst _assert$3 = exp._assert;\r\nconst PERSISTENCE_KEY = 'persistence';\r\n/**\r\n * Validates that an argument is a valid persistence value. If an invalid type\r\n * is specified, an error is thrown synchronously.\r\n */\r\nfunction _validatePersistenceArgument(auth, persistence) {\r\n    _assert$3(Object.values(Persistence).includes(persistence), auth, \"invalid-persistence-type\" /* exp.AuthErrorCode.INVALID_PERSISTENCE */);\r\n    // Validate if the specified type is supported in the current environment.\r\n    if (isReactNative()) {\r\n        // This is only supported in a browser.\r\n        _assert$3(persistence !== Persistence.SESSION, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (isNode()) {\r\n        // Only none is supported in Node.js.\r\n        _assert$3(persistence === Persistence.NONE, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (_isWorker()) {\r\n        // In a worker environment, either LOCAL or NONE are supported.\r\n        // If indexedDB not supported and LOCAL provided, throw an error\r\n        _assert$3(persistence === Persistence.NONE ||\r\n            (persistence === Persistence.LOCAL && isIndexedDBAvailable()), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    // This is restricted by what the browser supports.\r\n    _assert$3(persistence === Persistence.NONE || _isWebStorageSupported(), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n}\r\nasync function _savePersistenceForRedirect(auth) {\r\n    await auth._initializationPromise;\r\n    const session = getSessionStorageIfAvailable();\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, auth.config.apiKey, auth.name);\r\n    if (session) {\r\n        session.setItem(key, auth._getPersistence());\r\n    }\r\n}\r\nfunction _getPersistencesFromRedirect(apiKey, appName) {\r\n    const session = getSessionStorageIfAvailable();\r\n    if (!session) {\r\n        return [];\r\n    }\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\r\n    const persistence = session.getItem(key);\r\n    switch (persistence) {\r\n        case Persistence.NONE:\r\n            return [exp.inMemoryPersistence];\r\n        case Persistence.LOCAL:\r\n            return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\r\n        case Persistence.SESSION:\r\n            return [exp.browserSessionPersistence];\r\n        default:\r\n            return [];\r\n    }\r\n}\r\n/** Returns session storage, or null if the property access errors */\r\nfunction getSessionStorageIfAvailable() {\r\n    var _a;\r\n    try {\r\n        return ((_a = _getSelfWindow()) === null || _a === void 0 ? void 0 : _a.sessionStorage) || null;\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$2 = exp._assert;\r\n/** Platform-agnostic popup-redirect resolver */\r\nclass CompatPopupRedirectResolver {\r\n    constructor() {\r\n        // Create both resolvers for dynamic resolution later\r\n        this.browserResolver = exp._getInstance(exp.browserPopupRedirectResolver);\r\n        this.cordovaResolver = exp._getInstance(exp.cordovaPopupRedirectResolver);\r\n        // The actual resolver in use: either browserResolver or cordovaResolver.\r\n        this.underlyingResolver = null;\r\n        this._redirectPersistence = exp.browserSessionPersistence;\r\n        this._completeRedirectFn = exp._getRedirectResult;\r\n        this._overrideRedirectResult = exp._overrideRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._initialize(auth);\r\n    }\r\n    async _openPopup(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openPopup(auth, provider, authType, eventId);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openRedirect(auth, provider, authType, eventId);\r\n    }\r\n    _isIframeWebStorageSupported(auth, cb) {\r\n        this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\r\n    }\r\n    _originValidation(auth) {\r\n        return this.assertedUnderlyingResolver._originValidation(auth);\r\n    }\r\n    get _shouldInitProactively() {\r\n        return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\r\n    }\r\n    get assertedUnderlyingResolver() {\r\n        _assert$2(this.underlyingResolver, \"internal-error\" /* exp.AuthErrorCode.INTERNAL_ERROR */);\r\n        return this.underlyingResolver;\r\n    }\r\n    async selectUnderlyingResolver() {\r\n        if (this.underlyingResolver) {\r\n            return;\r\n        }\r\n        // We haven't yet determined whether or not we're in Cordova; go ahead\r\n        // and determine that state now.\r\n        const isCordova = await _isCordova();\r\n        this.underlyingResolver = isCordova\r\n            ? this.cordovaResolver\r\n            : this.browserResolver;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction unwrap(object) {\r\n    return object.unwrap();\r\n}\r\nfunction wrapped(object) {\r\n    return object.wrapped();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction credentialFromResponse(userCredential) {\r\n    return credentialFromObject(userCredential);\r\n}\r\nfunction attachExtraErrorFields(auth, e) {\r\n    var _a;\r\n    // The response contains all fields from the server which may or may not\r\n    // actually match the underlying type\r\n    const response = (_a = e.customData) === null || _a === void 0 ? void 0 : _a._tokenResponse;\r\n    if ((e === null || e === void 0 ? void 0 : e.code) === 'auth/multi-factor-auth-required') {\r\n        const mfaErr = e;\r\n        mfaErr.resolver = new MultiFactorResolver(auth, exp.getMultiFactorResolver(auth, e));\r\n    }\r\n    else if (response) {\r\n        const credential = credentialFromObject(e);\r\n        const credErr = e;\r\n        if (credential) {\r\n            credErr.credential = credential;\r\n            credErr.tenantId = response.tenantId || undefined;\r\n            credErr.email = response.email || undefined;\r\n            credErr.phoneNumber = response.phoneNumber || undefined;\r\n        }\r\n    }\r\n}\r\nfunction credentialFromObject(object) {\r\n    const { _tokenResponse } = (object instanceof FirebaseError ? object.customData : object);\r\n    if (!_tokenResponse) {\r\n        return null;\r\n    }\r\n    // Handle phone Auth credential responses, as they have a different format\r\n    // from other backend responses (i.e. no providerId). This is also only the\r\n    // case for user credentials (does not work for errors).\r\n    if (!(object instanceof FirebaseError)) {\r\n        if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\r\n            return exp.PhoneAuthProvider.credentialFromResult(object);\r\n        }\r\n    }\r\n    const providerId = _tokenResponse.providerId;\r\n    // Email and password is not supported as there is no situation where the\r\n    // server would return the password to the client.\r\n    if (!providerId || providerId === exp.ProviderId.PASSWORD) {\r\n        return null;\r\n    }\r\n    let provider;\r\n    switch (providerId) {\r\n        case exp.ProviderId.GOOGLE:\r\n            provider = exp.GoogleAuthProvider;\r\n            break;\r\n        case exp.ProviderId.FACEBOOK:\r\n            provider = exp.FacebookAuthProvider;\r\n            break;\r\n        case exp.ProviderId.GITHUB:\r\n            provider = exp.GithubAuthProvider;\r\n            break;\r\n        case exp.ProviderId.TWITTER:\r\n            provider = exp.TwitterAuthProvider;\r\n            break;\r\n        default:\r\n            const { oauthIdToken, oauthAccessToken, oauthTokenSecret, pendingToken, nonce } = _tokenResponse;\r\n            if (!oauthAccessToken &&\r\n                !oauthTokenSecret &&\r\n                !oauthIdToken &&\r\n                !pendingToken) {\r\n                return null;\r\n            }\r\n            // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\r\n            if (pendingToken) {\r\n                if (providerId.startsWith('saml.')) {\r\n                    return exp.SAMLAuthCredential._create(providerId, pendingToken);\r\n                }\r\n                else {\r\n                    // OIDC and non-default providers excluding Twitter.\r\n                    return exp.OAuthCredential._fromParams({\r\n                        providerId,\r\n                        signInMethod: providerId,\r\n                        pendingToken,\r\n                        idToken: oauthIdToken,\r\n                        accessToken: oauthAccessToken\r\n                    });\r\n                }\r\n            }\r\n            return new exp.OAuthProvider(providerId).credential({\r\n                idToken: oauthIdToken,\r\n                accessToken: oauthAccessToken,\r\n                rawNonce: nonce\r\n            });\r\n    }\r\n    return object instanceof FirebaseError\r\n        ? provider.credentialFromError(object)\r\n        : provider.credentialFromResult(object);\r\n}\r\nfunction convertCredential(auth, credentialPromise) {\r\n    return credentialPromise\r\n        .catch(e => {\r\n        if (e instanceof FirebaseError) {\r\n            attachExtraErrorFields(auth, e);\r\n        }\r\n        throw e;\r\n    })\r\n        .then(credential => {\r\n        const operationType = credential.operationType;\r\n        const user = credential.user;\r\n        return {\r\n            operationType,\r\n            credential: credentialFromResponse(credential),\r\n            additionalUserInfo: exp.getAdditionalUserInfo(credential),\r\n            user: User.getOrCreate(user)\r\n        };\r\n    });\r\n}\r\nasync function convertConfirmationResult(auth, confirmationResultPromise) {\r\n    const confirmationResultExp = await confirmationResultPromise;\r\n    return {\r\n        verificationId: confirmationResultExp.verificationId,\r\n        confirm: (verificationCode) => convertCredential(auth, confirmationResultExp.confirm(verificationCode))\r\n    };\r\n}\r\nclass MultiFactorResolver {\r\n    constructor(auth, resolver) {\r\n        this.resolver = resolver;\r\n        this.auth = wrapped(auth);\r\n    }\r\n    get session() {\r\n        return this.resolver.session;\r\n    }\r\n    get hints() {\r\n        return this.resolver.hints;\r\n    }\r\n    resolveSignIn(assertion) {\r\n        return convertCredential(unwrap(this.auth), this.resolver.resolveSignIn(assertion));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass User {\r\n    constructor(_delegate) {\r\n        this._delegate = _delegate;\r\n        this.multiFactor = exp.multiFactor(_delegate);\r\n    }\r\n    static getOrCreate(user) {\r\n        if (!User.USER_MAP.has(user)) {\r\n            User.USER_MAP.set(user, new User(user));\r\n        }\r\n        return User.USER_MAP.get(user);\r\n    }\r\n    delete() {\r\n        return this._delegate.delete();\r\n    }\r\n    reload() {\r\n        return this._delegate.reload();\r\n    }\r\n    toJSON() {\r\n        return this._delegate.toJSON();\r\n    }\r\n    getIdTokenResult(forceRefresh) {\r\n        return this._delegate.getIdTokenResult(forceRefresh);\r\n    }\r\n    getIdToken(forceRefresh) {\r\n        return this._delegate.getIdToken(forceRefresh);\r\n    }\r\n    linkAndRetrieveDataWithCredential(credential) {\r\n        return this.linkWithCredential(credential);\r\n    }\r\n    async linkWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.linkWithCredential(this._delegate, credential));\r\n    }\r\n    async linkWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async linkWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.linkWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async linkWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.linkWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    reauthenticateAndRetrieveDataWithCredential(credential) {\r\n        return this.reauthenticateWithCredential(credential);\r\n    }\r\n    async reauthenticateWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithCredential(this._delegate, credential));\r\n    }\r\n    reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.reauthenticateWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    reauthenticateWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async reauthenticateWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.reauthenticateWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    sendEmailVerification(actionCodeSettings) {\r\n        return exp.sendEmailVerification(this._delegate, actionCodeSettings);\r\n    }\r\n    async unlink(providerId) {\r\n        await exp.unlink(this._delegate, providerId);\r\n        return this;\r\n    }\r\n    updateEmail(newEmail) {\r\n        return exp.updateEmail(this._delegate, newEmail);\r\n    }\r\n    updatePassword(newPassword) {\r\n        return exp.updatePassword(this._delegate, newPassword);\r\n    }\r\n    updatePhoneNumber(phoneCredential) {\r\n        return exp.updatePhoneNumber(this._delegate, phoneCredential);\r\n    }\r\n    updateProfile(profile) {\r\n        return exp.updateProfile(this._delegate, profile);\r\n    }\r\n    verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\r\n        return exp.verifyBeforeUpdateEmail(this._delegate, newEmail, actionCodeSettings);\r\n    }\r\n    get emailVerified() {\r\n        return this._delegate.emailVerified;\r\n    }\r\n    get isAnonymous() {\r\n        return this._delegate.isAnonymous;\r\n    }\r\n    get metadata() {\r\n        return this._delegate.metadata;\r\n    }\r\n    get phoneNumber() {\r\n        return this._delegate.phoneNumber;\r\n    }\r\n    get providerData() {\r\n        return this._delegate.providerData;\r\n    }\r\n    get refreshToken() {\r\n        return this._delegate.refreshToken;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    get displayName() {\r\n        return this._delegate.displayName;\r\n    }\r\n    get email() {\r\n        return this._delegate.email;\r\n    }\r\n    get photoURL() {\r\n        return this._delegate.photoURL;\r\n    }\r\n    get providerId() {\r\n        return this._delegate.providerId;\r\n    }\r\n    get uid() {\r\n        return this._delegate.uid;\r\n    }\r\n    get auth() {\r\n        return this._delegate.auth;\r\n    }\r\n}\r\n// Maintain a map so that there's always a 1:1 mapping between new User and\r\n// legacy compat users\r\nUser.USER_MAP = new WeakMap();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$1 = exp._assert;\r\nclass Auth {\r\n    constructor(app, provider) {\r\n        this.app = app;\r\n        if (provider.isInitialized()) {\r\n            this._delegate = provider.getImmediate();\r\n            this.linkUnderlyingAuth();\r\n            return;\r\n        }\r\n        const { apiKey } = app.options;\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // Only use a popup/redirect resolver in browser environments\r\n        const resolver = typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\r\n        this._delegate = provider.initialize({\r\n            options: {\r\n                persistence: buildPersistenceHierarchy(apiKey, app.name),\r\n                popupRedirectResolver: resolver\r\n            }\r\n        });\r\n        this._delegate._updateErrorMap(exp.debugErrorMap);\r\n        this.linkUnderlyingAuth();\r\n    }\r\n    get emulatorConfig() {\r\n        return this._delegate.emulatorConfig;\r\n    }\r\n    get currentUser() {\r\n        if (!this._delegate.currentUser) {\r\n            return null;\r\n        }\r\n        return User.getOrCreate(this._delegate.currentUser);\r\n    }\r\n    get languageCode() {\r\n        return this._delegate.languageCode;\r\n    }\r\n    set languageCode(languageCode) {\r\n        this._delegate.languageCode = languageCode;\r\n    }\r\n    get settings() {\r\n        return this._delegate.settings;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    set tenantId(tid) {\r\n        this._delegate.tenantId = tid;\r\n    }\r\n    useDeviceLanguage() {\r\n        this._delegate.useDeviceLanguage();\r\n    }\r\n    signOut() {\r\n        return this._delegate.signOut();\r\n    }\r\n    useEmulator(url, options) {\r\n        exp.connectAuthEmulator(this._delegate, url, options);\r\n    }\r\n    applyActionCode(code) {\r\n        return exp.applyActionCode(this._delegate, code);\r\n    }\r\n    checkActionCode(code) {\r\n        return exp.checkActionCode(this._delegate, code);\r\n    }\r\n    confirmPasswordReset(code, newPassword) {\r\n        return exp.confirmPasswordReset(this._delegate, code, newPassword);\r\n    }\r\n    async createUserWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.createUserWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    fetchProvidersForEmail(email) {\r\n        return this.fetchSignInMethodsForEmail(email);\r\n    }\r\n    fetchSignInMethodsForEmail(email) {\r\n        return exp.fetchSignInMethodsForEmail(this._delegate, email);\r\n    }\r\n    isSignInWithEmailLink(emailLink) {\r\n        return exp.isSignInWithEmailLink(this._delegate, emailLink);\r\n    }\r\n    async getRedirectResult() {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        const credential = await exp.getRedirectResult(this._delegate, CompatPopupRedirectResolver);\r\n        if (!credential) {\r\n            return {\r\n                credential: null,\r\n                user: null\r\n            };\r\n        }\r\n        return convertCredential(this._delegate, Promise.resolve(credential));\r\n    }\r\n    // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n    // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\r\n    // out of autogenerated documentation pages to reduce accidental misuse.\r\n    addFrameworkForLogging(framework) {\r\n        exp.addFrameworkForLogging(this._delegate, framework);\r\n    }\r\n    onAuthStateChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onAuthStateChanged(next, error, complete);\r\n    }\r\n    onIdTokenChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onIdTokenChanged(next, error, complete);\r\n    }\r\n    sendSignInLinkToEmail(email, actionCodeSettings) {\r\n        return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\r\n    }\r\n    sendPasswordResetEmail(email, actionCodeSettings) {\r\n        return exp.sendPasswordResetEmail(this._delegate, email, actionCodeSettings || undefined);\r\n    }\r\n    async setPersistence(persistence) {\r\n        _validatePersistenceArgument(this._delegate, persistence);\r\n        let converted;\r\n        switch (persistence) {\r\n            case Persistence.SESSION:\r\n                converted = exp.browserSessionPersistence;\r\n                break;\r\n            case Persistence.LOCAL:\r\n                // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\r\n                const isIndexedDBFullySupported = await exp\r\n                    ._getInstance(exp.indexedDBLocalPersistence)\r\n                    ._isAvailable();\r\n                converted = isIndexedDBFullySupported\r\n                    ? exp.indexedDBLocalPersistence\r\n                    : exp.browserLocalPersistence;\r\n                break;\r\n            case Persistence.NONE:\r\n                converted = exp.inMemoryPersistence;\r\n                break;\r\n            default:\r\n                return exp._fail(\"argument-error\" /* exp.AuthErrorCode.ARGUMENT_ERROR */, {\r\n                    appName: this._delegate.name\r\n                });\r\n        }\r\n        return this._delegate.setPersistence(converted);\r\n    }\r\n    signInAndRetrieveDataWithCredential(credential) {\r\n        return this.signInWithCredential(credential);\r\n    }\r\n    signInAnonymously() {\r\n        return convertCredential(this._delegate, exp.signInAnonymously(this._delegate));\r\n    }\r\n    signInWithCredential(credential) {\r\n        return convertCredential(this._delegate, exp.signInWithCredential(this._delegate, credential));\r\n    }\r\n    signInWithCustomToken(token) {\r\n        return convertCredential(this._delegate, exp.signInWithCustomToken(this._delegate, token));\r\n    }\r\n    signInWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    signInWithEmailLink(email, emailLink) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailLink(this._delegate, email, emailLink));\r\n    }\r\n    signInWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this._delegate, exp.signInWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async signInWithPopup(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        return convertCredential(this._delegate, exp.signInWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async signInWithRedirect(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        await _savePersistenceForRedirect(this._delegate);\r\n        return exp.signInWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    updateCurrentUser(user) {\r\n        // remove ts-ignore once overloads are defined for exp functions to accept compat objects\r\n        // @ts-ignore\r\n        return this._delegate.updateCurrentUser(user);\r\n    }\r\n    verifyPasswordResetCode(code) {\r\n        return exp.verifyPasswordResetCode(this._delegate, code);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n    _delete() {\r\n        return this._delegate._delete();\r\n    }\r\n    linkUnderlyingAuth() {\r\n        this._delegate.wrapped = () => this;\r\n    }\r\n}\r\nAuth.Persistence = Persistence;\r\nfunction wrapObservers(nextOrObserver, error, complete) {\r\n    let next = nextOrObserver;\r\n    if (typeof nextOrObserver !== 'function') {\r\n        ({ next, error, complete } = nextOrObserver);\r\n    }\r\n    // We know 'next' is now a function\r\n    const oldNext = next;\r\n    const newNext = (user) => oldNext(user && User.getOrCreate(user));\r\n    return {\r\n        next: newNext,\r\n        error: error,\r\n        complete\r\n    };\r\n}\r\nfunction buildPersistenceHierarchy(apiKey, appName) {\r\n    // Note this is slightly different behavior: in this case, the stored\r\n    // persistence is checked *first* rather than last. This is because we want\r\n    // to prefer stored persistence type in the hierarchy. This is an empty\r\n    // array if window is not available or there is no pending redirect\r\n    const persistences = _getPersistencesFromRedirect(apiKey, appName);\r\n    // If \"self\" is available, add indexedDB\r\n    if (typeof self !== 'undefined' &&\r\n        !persistences.includes(exp.indexedDBLocalPersistence)) {\r\n        persistences.push(exp.indexedDBLocalPersistence);\r\n    }\r\n    // If \"window\" is available, add HTML Storage persistences\r\n    if (typeof window !== 'undefined') {\r\n        for (const persistence of [\r\n            exp.browserLocalPersistence,\r\n            exp.browserSessionPersistence\r\n        ]) {\r\n            if (!persistences.includes(persistence)) {\r\n                persistences.push(persistence);\r\n            }\r\n        }\r\n    }\r\n    // Add in-memory as a final fallback\r\n    if (!persistences.includes(exp.inMemoryPersistence)) {\r\n        persistences.push(exp.inMemoryPersistence);\r\n    }\r\n    return persistences;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PhoneAuthProvider {\r\n    constructor() {\r\n        this.providerId = 'phone';\r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth()));\r\n    }\r\n    static credential(verificationId, verificationCode) {\r\n        return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\r\n    }\r\n    verifyPhoneNumber(phoneInfoOptions, applicationVerifier) {\r\n        return this._delegate.verifyPhoneNumber(\r\n        // The implementation matches but the types are subtly incompatible\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        phoneInfoOptions, applicationVerifier);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n}\r\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\r\nPhoneAuthProvider.PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert = exp._assert;\r\nclass RecaptchaVerifier {\r\n    constructor(container, parameters, app = firebase.app()) {\r\n        var _a;\r\n        // API key is required for web client RPC calls.\r\n        _assert((_a = app.options) === null || _a === void 0 ? void 0 : _a.apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        this._delegate = new exp.RecaptchaVerifier(container, \r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        parameters, \r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        app.auth());\r\n        this.type = this._delegate.type;\r\n    }\r\n    clear() {\r\n        this._delegate.clear();\r\n    }\r\n    render() {\r\n        return this._delegate.render();\r\n    }\r\n    verify() {\r\n        return this._delegate.verify();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst AUTH_TYPE = 'auth-compat';\r\n// Create auth components to register with firebase.\r\n// Provides Auth public APIs.\r\nfunction registerAuthCompat(instance) {\r\n    instance.INTERNAL.registerComponent(new Component(AUTH_TYPE, container => {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        const app = container.getProvider('app-compat').getImmediate();\r\n        const authProvider = container.getProvider('auth');\r\n        return new Auth(app, authProvider);\r\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */)\r\n        .setServiceProps({\r\n        ActionCodeInfo: {\r\n            Operation: {\r\n                EMAIL_SIGNIN: exp.ActionCodeOperation.EMAIL_SIGNIN,\r\n                PASSWORD_RESET: exp.ActionCodeOperation.PASSWORD_RESET,\r\n                RECOVER_EMAIL: exp.ActionCodeOperation.RECOVER_EMAIL,\r\n                REVERT_SECOND_FACTOR_ADDITION: exp.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\r\n                VERIFY_AND_CHANGE_EMAIL: exp.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\r\n                VERIFY_EMAIL: exp.ActionCodeOperation.VERIFY_EMAIL\r\n            }\r\n        },\r\n        EmailAuthProvider: exp.EmailAuthProvider,\r\n        FacebookAuthProvider: exp.FacebookAuthProvider,\r\n        GithubAuthProvider: exp.GithubAuthProvider,\r\n        GoogleAuthProvider: exp.GoogleAuthProvider,\r\n        OAuthProvider: exp.OAuthProvider,\r\n        SAMLAuthProvider: exp.SAMLAuthProvider,\r\n        PhoneAuthProvider: PhoneAuthProvider,\r\n        PhoneMultiFactorGenerator: exp.PhoneMultiFactorGenerator,\r\n        RecaptchaVerifier: RecaptchaVerifier,\r\n        TwitterAuthProvider: exp.TwitterAuthProvider,\r\n        Auth,\r\n        AuthCredential: exp.AuthCredential,\r\n        Error: FirebaseError\r\n    })\r\n        .setInstantiationMode(\"LAZY\" /* InstantiationMode.LAZY */)\r\n        .setMultipleInstances(false));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterAuthCompat(firebase);\n//# sourceMappingURL=index.esm2017.js.map\n","import firebase from '@firebase/app-compat';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { _validatePathString, onChildMoved, onChildChanged, onChildRemoved, onChildAdded, onValue, off, get, query, limitToFirst, limitToLast, orderByChild, orderByKey, orderByPriority, orderByValue, startAt, startAfter, endAt, endBefore, equalTo, _ReferenceImpl, _QueryImpl, _QueryParams, child, set, _validateWritablePath, update, setWithPriority, remove, runTransaction, setPriority, push, OnDisconnect as OnDisconnect$1, forceWebSockets, forceLongPolling, connectDatabaseEmulator, refFromURL, ref, goOffline, goOnline, serverTimestamp, increment, _setSDKVersion, _repoManagerDatabaseFromApp, enableLogging } from '@firebase/database';\nimport { errorPrefix, validateArgCount, validateCallback, validateContextObject, Deferred } from '@firebase/util';\nimport { Logger } from '@firebase/logger';\n\nconst name = \"@firebase/database-compat\";\nconst version = \"0.3.4\";\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logClient = new Logger('@firebase/database-compat');\r\nconst warn = function (msg) {\r\n    const message = 'FIREBASE WARNING: ' + msg;\r\n    logClient.warn(message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst validateBoolean = function (fnName, argumentName, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\r\n    }\r\n};\r\nconst validateEventType = function (fnName, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(errorPrefix(fnName, 'eventType') +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass OnDisconnect {\r\n    constructor(_delegate) {\r\n        this._delegate = _delegate;\r\n    }\r\n    cancel(onComplete) {\r\n        validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\r\n        const result = this._delegate.cancel();\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    remove(onComplete) {\r\n        validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\r\n        const result = this._delegate.remove();\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    set(value, onComplete) {\r\n        validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\r\n        const result = this._delegate.set(value);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    setWithPriority(value, priority, onComplete) {\r\n        validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\r\n        const result = this._delegate.setWithPriority(value, priority);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    update(objectToMerge, onComplete) {\r\n        validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        if (Array.isArray(objectToMerge)) {\r\n            const newObjectToMerge = {};\r\n            for (let i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\r\n        const result = this._delegate.update(objectToMerge);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass TransactionResult {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     */\r\n    constructor(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    toJSON() {\r\n        validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nclass DataSnapshot {\r\n    constructor(_database, _delegate) {\r\n        this._database = _database;\r\n        this._delegate = _delegate;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    val() {\r\n        validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this._delegate.val();\r\n    }\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    exportVal() {\r\n        validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this._delegate.exportVal();\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    toJSON() {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    }\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @returns Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    exists() {\r\n        validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return this._delegate.exists();\r\n    }\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns DataSnapshot for child node.\r\n     */\r\n    child(path) {\r\n        validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        path = String(path);\r\n        _validatePathString('DataSnapshot.child', 'path', path, false);\r\n        return new DataSnapshot(this._database, this._delegate.child(path));\r\n    }\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns Whether the child exists.\r\n     */\r\n    hasChild(path) {\r\n        validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        _validatePathString('DataSnapshot.hasChild', 'path', path, false);\r\n        return this._delegate.hasChild(path);\r\n    }\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @returns The priority.\r\n     */\r\n    getPriority() {\r\n        validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        return this._delegate.priority;\r\n    }\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each child.\r\n     * @returns True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    forEach(action) {\r\n        validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        validateCallback('DataSnapshot.forEach', 'action', action, false);\r\n        return this._delegate.forEach(expDataSnapshot => action(new DataSnapshot(this._database, expDataSnapshot)));\r\n    }\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    hasChildren() {\r\n        validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        return this._delegate.hasChildren();\r\n    }\r\n    get key() {\r\n        return this._delegate.key;\r\n    }\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @returns The number of children that this DataSnapshot contains.\r\n     */\r\n    numChildren() {\r\n        validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this._delegate.size;\r\n    }\r\n    /**\r\n     * @returns The Firebase reference for the location this snapshot's data came\r\n     * from.\r\n     */\r\n    getRef() {\r\n        validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return new Reference(this._database, this._delegate.ref);\r\n    }\r\n    get ref() {\r\n        return this.getRef();\r\n    }\r\n}\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nclass Query {\r\n    constructor(database, _delegate) {\r\n        this.database = database;\r\n        this._delegate = _delegate;\r\n    }\r\n    on(eventType, callback, cancelCallbackOrContext, context) {\r\n        var _a;\r\n        validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateCallback('Query.on', 'callback', callback, false);\r\n        const ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        const valueCallback = (expSnapshot, previousChildName) => {\r\n            callback.call(ret.context, new DataSnapshot(this.database, expSnapshot), previousChildName);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        const cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            default:\r\n                throw new Error(errorPrefix('Query.on', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n    }\r\n    off(eventType, callback, context) {\r\n        validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', eventType, true);\r\n        validateCallback('Query.off', 'callback', callback, true);\r\n        validateContextObject('Query.off', 'context', context, true);\r\n        if (callback) {\r\n            const valueCallback = () => { };\r\n            valueCallback.userCallback = callback;\r\n            valueCallback.context = context;\r\n            off(this._delegate, eventType, valueCallback);\r\n        }\r\n        else {\r\n            off(this._delegate, eventType);\r\n        }\r\n    }\r\n    /**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */\r\n    get() {\r\n        return get(this._delegate).then(expSnapshot => {\r\n            return new DataSnapshot(this.database, expSnapshot);\r\n        });\r\n    }\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     */\r\n    once(eventType, callback, failureCallbackOrContext, context) {\r\n        validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateCallback('Query.once', 'callback', callback, true);\r\n        const ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        const deferred = new Deferred();\r\n        const valueCallback = (expSnapshot, previousChildName) => {\r\n            const result = new DataSnapshot(this.database, expSnapshot);\r\n            if (callback) {\r\n                callback.call(ret.context, result, previousChildName);\r\n            }\r\n            deferred.resolve(result);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        const cancelCallback = (error) => {\r\n            if (ret.cancel) {\r\n                ret.cancel.call(ret.context, error);\r\n            }\r\n            deferred.reject(error);\r\n        };\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            default:\r\n                throw new Error(errorPrefix('Query.once', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     */\r\n    limitToFirst(limit) {\r\n        validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToFirst(limit)));\r\n    }\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     */\r\n    limitToLast(limit) {\r\n        validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToLast(limit)));\r\n    }\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     */\r\n    orderByChild(path) {\r\n        validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByChild(path)));\r\n    }\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     */\r\n    orderByKey() {\r\n        validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByKey()));\r\n    }\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     */\r\n    orderByPriority() {\r\n        validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByPriority()));\r\n    }\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     */\r\n    orderByValue() {\r\n        validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByValue()));\r\n    }\r\n    startAt(value = null, name) {\r\n        validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAt(value, name)));\r\n    }\r\n    startAfter(value = null, name) {\r\n        validateArgCount('Query.startAfter', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAfter(value, name)));\r\n    }\r\n    endAt(value = null, name) {\r\n        validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endAt(value, name)));\r\n    }\r\n    endBefore(value = null, name) {\r\n        validateArgCount('Query.endBefore', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endBefore(value, name)));\r\n    }\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     */\r\n    equalTo(value, name) {\r\n        validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, equalTo(value, name)));\r\n    }\r\n    /**\r\n     * @returns URL for this location.\r\n     */\r\n    toString() {\r\n        validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this._delegate.toString();\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    toJSON() {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    }\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     */\r\n    isEqual(other) {\r\n        validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            const error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        return this._delegate.isEqual(other._delegate);\r\n    }\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param fnName - The function name (on or once)\r\n     *\r\n     */\r\n    static getCancelAndContextArgs_(fnName, cancelOrContext, context) {\r\n        const ret = { cancel: undefined, context: undefined };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            validateCallback(fnName, 'cancel', ret.cancel, true);\r\n            ret.context = context;\r\n            validateContextObject(fnName, 'context', ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(errorPrefix(fnName, 'cancelOrContext') +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    get ref() {\r\n        return new Reference(this.database, new _ReferenceImpl(this._delegate._repo, this._delegate._path));\r\n    }\r\n}\r\nclass Reference extends Query {\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     */\r\n    constructor(database, _delegate) {\r\n        super(database, new _QueryImpl(_delegate._repo, _delegate._path, new _QueryParams(), false));\r\n        this.database = database;\r\n        this._delegate = _delegate;\r\n    }\r\n    /** @returns {?string} */\r\n    getKey() {\r\n        validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        return this._delegate.key;\r\n    }\r\n    child(pathString) {\r\n        validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        return new Reference(this.database, child(this._delegate, pathString));\r\n    }\r\n    /** @returns {?Reference} */\r\n    getParent() {\r\n        validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        const parent = this._delegate.parent;\r\n        return parent ? new Reference(this.database, parent) : null;\r\n    }\r\n    /** @returns {!Reference} */\r\n    getRoot() {\r\n        validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        return new Reference(this.database, this._delegate.root);\r\n    }\r\n    set(newVal, onComplete) {\r\n        validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateCallback('Reference.set', 'onComplete', onComplete, true);\r\n        const result = set(this._delegate, newVal);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    update(values, onComplete) {\r\n        validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        if (Array.isArray(values)) {\r\n            const newObjectToMerge = {};\r\n            for (let i = 0; i < values.length; ++i) {\r\n                newObjectToMerge['' + i] = values[i];\r\n            }\r\n            values = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        _validateWritablePath('Reference.update', this._delegate._path);\r\n        validateCallback('Reference.update', 'onComplete', onComplete, true);\r\n        const result = update(this._delegate, values);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    setWithPriority(newVal, newPriority, onComplete) {\r\n        validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\r\n        const result = setWithPriority(this._delegate, newVal, newPriority);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    remove(onComplete) {\r\n        validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateCallback('Reference.remove', 'onComplete', onComplete, true);\r\n        const result = remove(this._delegate);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    transaction(transactionUpdate, onComplete, applyLocally) {\r\n        validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\r\n        validateCallback('Reference.transaction', 'onComplete', onComplete, true);\r\n        validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\r\n        const result = runTransaction(this._delegate, transactionUpdate, {\r\n            applyLocally\r\n        }).then(transactionResult => new TransactionResult(transactionResult.committed, new DataSnapshot(this.database, transactionResult.snapshot)));\r\n        if (onComplete) {\r\n            result.then(transactionResult => onComplete(null, transactionResult.committed, transactionResult.snapshot), error => onComplete(error, false, null));\r\n        }\r\n        return result;\r\n    }\r\n    setPriority(priority, onComplete) {\r\n        validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\r\n        const result = setPriority(this._delegate, priority);\r\n        if (onComplete) {\r\n            result.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        return result;\r\n    }\r\n    push(value, onComplete) {\r\n        validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateCallback('Reference.push', 'onComplete', onComplete, true);\r\n        const expPromise = push(this._delegate, value);\r\n        const promise = expPromise.then(expRef => new Reference(this.database, expRef));\r\n        if (onComplete) {\r\n            promise.then(() => onComplete(null), error => onComplete(error));\r\n        }\r\n        const result = new Reference(this.database, expPromise);\r\n        result.then = promise.then.bind(promise);\r\n        result.catch = promise.catch.bind(promise, undefined);\r\n        return result;\r\n    }\r\n    onDisconnect() {\r\n        _validateWritablePath('Reference.onDisconnect', this._delegate._path);\r\n        return new OnDisconnect(new OnDisconnect$1(this._delegate._repo, this._delegate._path));\r\n    }\r\n    get key() {\r\n        return this.getKey();\r\n    }\r\n    get parent() {\r\n        return this.getParent();\r\n    }\r\n    get root() {\r\n        return this.getRoot();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n */\r\nclass Database {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     */\r\n    constructor(_delegate, app) {\r\n        this._delegate = _delegate;\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: () => this._delegate._delete(),\r\n            forceWebSockets,\r\n            forceLongPolling\r\n        };\r\n    }\r\n    /**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host - the emulator host (ex: localhost)\r\n     * @param port - the emulator port (ex: 8080)\r\n     * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n     */\r\n    useEmulator(host, port, options = {}) {\r\n        connectDatabaseEmulator(this._delegate, host, port, options);\r\n    }\r\n    ref(path) {\r\n        validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            const childRef = refFromURL(this._delegate, path.toString());\r\n            return new Reference(this, childRef);\r\n        }\r\n        else {\r\n            const childRef = ref(this._delegate, path);\r\n            return new Reference(this, childRef);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @returns Firebase reference.\r\n     */\r\n    refFromURL(url) {\r\n        const apiName = 'database.refFromURL';\r\n        validateArgCount(apiName, 1, 1, arguments.length);\r\n        const childRef = refFromURL(this._delegate, url);\r\n        return new Reference(this, childRef);\r\n    }\r\n    // Make individual repo go offline.\r\n    goOffline() {\r\n        validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        return goOffline(this._delegate);\r\n    }\r\n    goOnline() {\r\n        validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        return goOnline(this._delegate);\r\n    }\r\n}\r\nDatabase.ServerValue = {\r\n    TIMESTAMP: serverTimestamp(),\r\n    increment: (delta) => increment(delta)\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\r\nfunction initStandalone({ app, url, version, customAuthImpl, namespace, nodeAdmin = false }) {\r\n    _setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    const authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\r\n    authProvider.setComponent(new Component('auth-internal', () => customAuthImpl, \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    return {\r\n        instance: new Database(_repoManagerDatabaseFromApp(app, authProvider, \r\n        /* appCheckProvider= */ undefined, url, nodeAdmin), app),\r\n        namespace\r\n    };\r\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    instance.INTERNAL.registerComponent(new Component('database-compat', (container, { instanceIdentifier: url }) => {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        const app = container.getProvider('app-compat').getImmediate();\r\n        const databaseExp = container\r\n            .getProvider('database')\r\n            .getImmediate({ identifier: url });\r\n        return new Database(databaseExp, app);\r\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference,\r\n        Query,\r\n        Database,\r\n        DataSnapshot,\r\n        enableLogging,\r\n        INTERNAL,\r\n        ServerValue\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterDatabase(firebase);\n\nexport { registerDatabase };\n//# sourceMappingURL=index.esm2017.js.map\n"],"names":["_cordovaWindow","window","async","_generateHandlerUrl","auth","event","provider","_a","BuildInfo","sessionId","sessionDigest","bytes","str","test","TextEncoder","encode","buff","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","stringToArrayBuffer","buf","crypto","subtle","digest","Array","from","map","num","toString","padStart","join","computeSha256","additionalParams","packageName","displayName","type","undefined","eventId","SESSION_ID_LENGTH","CordovaAuthEventManager","constructor","super","arguments","this","passiveListeners","Set","initPromise","Promise","resolve","resolveInialized","addPassiveListener","cb","add","removePassiveListener","delete","resetRedirect","queuedRedirectEvent","hasHandledPotentialRedirect","onEvent","forEach","initialized","_getAndRemoveEvent","storage","_get","persistenceKey","_remove","_eventFromPartialAndUrl","partialEvent","url","_b","callbackUrl","params","searchParamsOrEmpty","link","decodeURIComponent","doubleDeepLink","iOSDeepLink","_getDeepLinkFromCallback","includes","errorObject","json","JSON","parse","e","parseJsonOrNull","code","split","error","tenantId","urlResponse","postBody","generateSessionId","chars","allowedChars","idx","Math","floor","random","push","charAt","b","config","apiKey","name","_","rest","cordovaPopupRedirectResolver","_redirectPersistence","_shouldInitProactively","eventManagers","Map","originValidationPromises","_completeRedirectFn","_overrideRedirectResult","_initialize","key","_key","manager","get","set","attachCallbackListeners","_openPopup","_openRedirect","authType","_c","_d","_e","_f","_g","_h","_j","_k","win","universalLinks","subscribe","missingPlugin","cordova","plugins","browsertab","openUrl","isAvailable","InAppBrowser","open","_checkCordovaConfiguration","_originValidation","_generateNewEvent","_set","_savePartialEvent","eventListener","iabRef","cleanup","reject","onCloseTimer","authEventSeen","closeBrowserTab","close","resumed","setTimeout","visibilityChanged","document","visibilityState","addEventListener","removeEventListener","clearTimeout","_waitForAppResume","handlerUrl","browserTabIsAvailable","_performRedirect","_isIframeWebStorageSupported","_auth","_cb","Error","request","iosBundleId","androidPackageName","_validateOrigin","handleOpenURL","noEventTimeout","generateNoEvent","universalLinksCb","eventData","finalEvent","existingHandleOpenURL","packagePrefix","toLowerCase","startsWith","console","_getCurrentScheme","self","location","protocol","_isAndroidOrIosCordovaScheme","ua","match","_isLocalStorageNotSynchronized","documentMode","_isEdge","_isWebStorageSupported","localStorage","_isWorker","g","_isPopupRedirectSupported","_isLikelyCordova","Persistence","LOCAL","NONE","SESSION","_assert$3","PERSISTENCE_KEY","_savePersistenceForRedirect","_initializationPromise","session","getSessionStorageIfAvailable","setItem","_getPersistence","sessionStorage","_assert$2","CompatPopupRedirectResolver","browserResolver","cordovaResolver","underlyingResolver","selectUnderlyingResolver","assertedUnderlyingResolver","isCordova","timeoutId","_isCordova","unwrap","object","credentialFromObject","_tokenResponse","customData","credentialFromResult","providerId","PASSWORD","GOOGLE","FACEBOOK","GITHUB","TWITTER","oauthIdToken","oauthAccessToken","oauthTokenSecret","pendingToken","nonce","_create","_fromParams","signInMethod","idToken","accessToken","credential","rawNonce","credentialFromError","convertCredential","credentialPromise","catch","response","resolver","MultiFactorResolver","credErr","email","phoneNumber","attachExtraErrorFields","then","operationType","user","userCredential","additionalUserInfo","User","getOrCreate","convertConfirmationResult","confirmationResultPromise","confirmationResultExp","verificationId","confirm","verificationCode","wrapped","hints","resolveSignIn","assertion","_delegate","multiFactor","USER_MAP","has","reload","toJSON","getIdTokenResult","forceRefresh","getIdToken","linkAndRetrieveDataWithCredential","linkWithCredential","linkWithPhoneNumber","applicationVerifier","linkWithPopup","linkWithRedirect","reauthenticateAndRetrieveDataWithCredential","reauthenticateWithCredential","reauthenticateWithPhoneNumber","reauthenticateWithPopup","reauthenticateWithRedirect","sendEmailVerification","actionCodeSettings","unlink","updateEmail","newEmail","updatePassword","newPassword","updatePhoneNumber","phoneCredential","updateProfile","profile","verifyBeforeUpdateEmail","emailVerified","isAnonymous","metadata","providerData","refreshToken","photoURL","uid","WeakMap","_assert$1","Auth","app","isInitialized","getImmediate","linkUnderlyingAuth","options","appName","initialize","persistence","buildPersistenceHierarchy","popupRedirectResolver","_updateErrorMap","emulatorConfig","currentUser","languageCode","settings","tid","useDeviceLanguage","signOut","useEmulator","applyActionCode","checkActionCode","confirmPasswordReset","createUserWithEmailAndPassword","password","fetchProvidersForEmail","fetchSignInMethodsForEmail","isSignInWithEmailLink","emailLink","getRedirectResult","addFrameworkForLogging","framework","_logFramework","onAuthStateChanged","nextOrObserver","errorFn","completed","next","complete","wrapObservers","onIdTokenChanged","sendSignInLinkToEmail","sendPasswordResetEmail","setPersistence","converted","Object","values","_validatePersistenceArgument","_isAvailable","signInAndRetrieveDataWithCredential","signInWithCredential","signInAnonymously","signInWithCustomToken","token","signInWithEmailAndPassword","signInWithEmailLink","signInWithPhoneNumber","signInWithPopup","signInWithRedirect","updateCurrentUser","verifyPasswordResetCode","_delete","oldNext","persistences","getItem","_getPersistencesFromRedirect","PhoneAuthProvider","verifyPhoneNumber","phoneInfoOptions","PHONE_SIGN_IN_METHOD","PROVIDER_ID","_assert","RecaptchaVerifier","container","parameters","clear","render","verify","instance","INTERNAL","registerComponent","getProvider","authProvider","setServiceProps","ActionCodeInfo","Operation","EMAIL_SIGNIN","PASSWORD_RESET","RECOVER_EMAIL","REVERT_SECOND_FACTOR_ADDITION","VERIFY_AND_CHANGE_EMAIL","VERIFY_EMAIL","EmailAuthProvider","FacebookAuthProvider","GithubAuthProvider","GoogleAuthProvider","OAuthProvider","SAMLAuthProvider","PhoneMultiFactorGenerator","TwitterAuthProvider","AuthCredential","setInstantiationMode","setMultipleInstances","registerVersion","logClient","warn","msg","message","OnDisconnect","cancel","onComplete","result","remove","value","setWithPriority","priority","update","objectToMerge","isArray","newObjectToMerge","TransactionResult","committed","snapshot","DataSnapshot","_database","val","exportVal","exists","child","path","String","hasChild","getPriority","action","expDataSnapshot","hasChildren","numChildren","size","getRef","Reference","ref","Query","database","on","eventType","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","valueCallback","expSnapshot","previousChildName","call","userCallback","cancelCallback","bind","off","fnName","optional","validateEventType","once","failureCallbackOrContext","deferred","onlyOnce","promise","limitToFirst","limit","limitToLast","orderByChild","orderByKey","orderByPriority","orderByValue","startAt","startAfter","endAt","endBefore","equalTo","isEqual","other","cancelOrContext","_repo","_path","getKey","pathString","getParent","parent","getRoot","root","newVal","newPriority","transaction","transactionUpdate","applyLocally","argumentName","bool","validateBoolean","transactionResult","setPriority","expPromise","expRef","onDisconnect","Database","forceWebSockets","forceLongPolling","host","port","childRef","refFromURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","delta","freeze","__proto__","initStandalone","version","customAuthImpl","namespace","nodeAdmin","setComponent","instanceIdentifier","databaseExp","identifier","enableLogging"],"sourceRoot":""}