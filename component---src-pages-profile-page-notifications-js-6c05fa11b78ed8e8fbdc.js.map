{"version":3,"file":"component---src-pages-profile-page-notifications-js-6c05fa11b78ed8e8fbdc.js","mappings":"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","sources":["webpack://blabzio/./node_modules/primereact/checkbox/checkbox.esm.js","webpack://blabzio/./src/pages/ProfilePage/Notifications.js"],"sourcesContent":["import * as React from 'react';\nimport { useUpdateEffect, useMountEffect } from 'primereact/hooks';\nimport { CheckIcon } from 'primereact/icons/check';\nimport { Tooltip } from 'primereact/tooltip';\nimport { DomHandler, ObjectUtils, classNames, mergeProps, IconUtils } from 'primereact/utils';\nimport { ComponentBase } from 'primereact/componentbase';\nimport { PrimeReactContext } from 'primereact/api';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar CheckboxBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'Checkbox',\n    autoFocus: false,\n    checked: false,\n    className: null,\n    disabled: false,\n    falseValue: false,\n    icon: null,\n    id: null,\n    inputId: null,\n    inputRef: null,\n    name: null,\n    onChange: null,\n    onClick: null,\n    onContextMenu: null,\n    onMouseDown: null,\n    readOnly: false,\n    required: false,\n    style: null,\n    tabIndex: null,\n    tooltip: null,\n    tooltipOptions: null,\n    trueValue: true,\n    value: null,\n    children: undefined\n  }\n});\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar Checkbox = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var context = React.useContext(PrimeReactContext);\n  var props = CheckboxBase.getProps(inProps, context);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    focusedState = _React$useState2[0],\n    setFocusedState = _React$useState2[1];\n  var _CheckboxBase$setMeta = CheckboxBase.setMetaData({\n      props: props,\n      state: {\n        focused: focusedState\n      }\n    }),\n    ptm = _CheckboxBase$setMeta.ptm;\n  var elementRef = React.useRef(null);\n  var inputRef = React.useRef(props.inputRef);\n  var _onClick = function onClick(event) {\n    if (props.disabled || props.readOnly) {\n      return;\n    }\n    if (props.onChange || props.onClick) {\n      var _checked = isChecked();\n      var checkboxClicked = event.target instanceof HTMLDivElement || event.target instanceof HTMLSpanElement || event.target instanceof Object;\n      var isInputToggled = event.target === inputRef.current;\n      var isCheckboxToggled = checkboxClicked && event.target.checked !== _checked;\n      if (isInputToggled || isCheckboxToggled) {\n        var value = _checked ? props.falseValue : props.trueValue;\n        var eventData = {\n          originalEvent: event,\n          value: props.value,\n          checked: value,\n          stopPropagation: function stopPropagation() {\n            event.stopPropagation();\n          },\n          preventDefault: function preventDefault() {\n            event.preventDefault();\n          },\n          target: {\n            type: 'checkbox',\n            name: props.name,\n            id: props.id,\n            value: props.value,\n            checked: value\n          }\n        };\n        props.onClick && props.onClick(eventData);\n\n        // do not continue if the user defined click wants to prevent\n        if (event.defaultPrevented) {\n          return;\n        }\n        props.onChange && props.onChange(eventData);\n      }\n      DomHandler.focus(inputRef.current);\n      event.preventDefault();\n    }\n  };\n  var _onFocus = function onFocus() {\n    setFocusedState(true);\n  };\n  var _onBlur = function onBlur() {\n    setFocusedState(false);\n  };\n  var _onKeyDown = function onKeyDown(event) {\n    if (event.code === 'Space' || event.key === ' ') {\n      // event.key is for Android support\n      _onClick(event);\n    }\n  };\n  var isChecked = function isChecked() {\n    return props.checked === props.trueValue;\n  };\n  React.useImperativeHandle(ref, function () {\n    return {\n      props: props,\n      focus: function focus() {\n        return DomHandler.focus(inputRef.current);\n      },\n      getElement: function getElement() {\n        return elementRef.current;\n      },\n      getInput: function getInput() {\n        return inputRef.current;\n      }\n    };\n  });\n  React.useEffect(function () {\n    ObjectUtils.combinedRefs(inputRef, props.inputRef);\n  }, [inputRef, props.inputRef]);\n  useUpdateEffect(function () {\n    inputRef.current.checked = isChecked();\n  }, [props.checked, props.trueValue]);\n  useMountEffect(function () {\n    if (props.autoFocus) {\n      DomHandler.focus(inputRef.current, props.autoFocus);\n    }\n  });\n  var checked = isChecked();\n  var hasTooltip = ObjectUtils.isNotEmpty(props.tooltip);\n  var otherProps = CheckboxBase.getOtherProps(props);\n  var ariaProps = ObjectUtils.reduceKeys(otherProps, DomHandler.ARIA_PROPS);\n  var className = classNames('p-checkbox p-component', {\n    'p-checkbox-checked': checked,\n    'p-checkbox-disabled': props.disabled,\n    'p-checkbox-focused': focusedState\n  }, props.className);\n  var boxClass = classNames('p-checkbox-box', {\n    'p-highlight': checked,\n    'p-disabled': props.disabled,\n    'p-focus': focusedState\n  });\n  var iconClassName = 'p-checkbox-icon p-c';\n  var iconProps = mergeProps({\n    className: iconClassName\n  }, ptm('icon'));\n  var icon = checked ? props.icon || /*#__PURE__*/React.createElement(CheckIcon, iconProps) : null;\n  var checkboxIcon = IconUtils.getJSXIcon(icon, _objectSpread({}, iconProps), {\n    props: props,\n    checked: checked\n  });\n  var rootProps = mergeProps({\n    ref: elementRef,\n    id: props.id,\n    className: className,\n    style: props.style,\n    onClick: function onClick(e) {\n      return _onClick(e);\n    },\n    onContextMenu: props.onContextMenu,\n    onMouseDown: props.onMouseDown\n  }, otherProps, ptm('root'));\n  var hiddenInputWrapperProps = mergeProps({\n    className: 'p-hidden-accessible'\n  }, ptm('hiddenInputWrapper'));\n  var hiddenInputProps = mergeProps(_objectSpread({\n    id: props.inputId,\n    ref: inputRef,\n    type: 'checkbox',\n    name: props.name,\n    tabIndex: props.tabIndex,\n    defaultChecked: checked,\n    onFocus: function onFocus(e) {\n      return _onFocus();\n    },\n    onBlur: function onBlur(e) {\n      return _onBlur();\n    },\n    onKeyDown: function onKeyDown(e) {\n      return _onKeyDown(e);\n    },\n    disabled: props.disabled,\n    readOnly: props.readOnly,\n    required: props.required\n  }, ariaProps), ptm('hiddenInput'));\n  var inputProps = mergeProps({\n    className: boxClass\n  }, ptm('input'));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", rootProps, /*#__PURE__*/React.createElement(\"div\", hiddenInputWrapperProps, /*#__PURE__*/React.createElement(\"input\", hiddenInputProps)), /*#__PURE__*/React.createElement(\"div\", inputProps, checkboxIcon)), hasTooltip && /*#__PURE__*/React.createElement(Tooltip, _extends({\n    target: elementRef,\n    content: props.tooltip\n  }, props.tooltipOptions, {\n    pt: ptm('tooltip')\n  })));\n}));\nCheckbox.displayName = 'Checkbox';\n\nexport { Checkbox };\n","import React, { useEffect, useState, useRef } from 'react';\nimport * as pro from '../../styles/profile.module.css';\nimport firebase from 'firebase/compat/app';\nimport { useAuth } from '../../Accounts/useAuth';\nimport im from '../../images/proxy.jpeg';\n//import { initializeApp } from \"firebase/app\";\n//import Language from '../Language';\n//import { useTranslation , Trans} from 'react-i18next';\nimport { Link } from 'gatsby';\nimport { Password } from 'primereact/password';\nimport { Toast } from 'primereact/toast';\nimport {confirmDialog, ConfirmDialog} from 'primereact/confirmdialog';\nimport {RadioButton} from \"primereact/radiobutton\";\nimport {Checkbox} from \"primereact/checkbox\";\nimport Navbar from './Navbared';\n\nimport {InputNumber} from \"primereact/inputnumber\";\nimport { event } from 'jquery';\nimport {ProgressSpinner} from 'primereact/progressspinner';\nconst firebaseConfig2 = {\n  apiKey: \"AIzaSyAM5p7O6YuAvCxfDCbR48Duz019qkoVp0Y\",\n\n  authDomain: \"itsmynodezena.firebaseapp.com\",\n\n  databaseURL: \"https://itsmynodezena-default-rtdb.firebaseio.com\",\n\n  projectId: \"itsmynodezena\",\n\n  storageBucket: \"itsmynodezena.appspot.com\",\n\n  messagingSenderId: \"299392955521\",\n\n  appId: \"1:299392955521:web:ef5671ad2702d441304980\"\n  \n  };\n  \n  \n\n\n\nexport default function Notifications() {\n\n    const toast = useRef(null)\n\n    function isActive({ isCurrent }) {\n        return isCurrent ? { classNameName: 'active'} : null;\n      }\n\n\n      firebase.initializeApp(firebaseConfig2, 'app012');\n\n      const app4 = firebase.app('app012');\n      const { user,setUser, loading,signOut } = useAuth();\n      const auth = app4.auth();\n      const database = app4.database();\n\nconst [disable, setdisabled] = useState(true)\nconst [emaildisable, setEmaildisable] = useState(true)\n\n      const [notifications, setNotifications] = useState({\n\n        ChangesMadeToAcc: false,\n        ChangesMadeToGroup: false,\n       SecurityAlert: false,\n\n  somoneComments :false,\n  somoneshares:false,\nUserfollows: false,\nnewPostMadeinGroup:false,\nReciveMessage: false,\n\nAutoSubscribeGroupnotif: false,\nAutoSubscribetonews: false,\nsetSms: 12\n})\n\n\n\nconst handleNotificationsChange = (event) => {\n    const { name, value, checked } = event.target;\n    setNotifications((prevState) => ({\n      ...prevState,\n      [name]: !prevState[name],\n    }));\n\n\n  };\n async function dataIsSet() {\n            if(user && user.uid){\n            const userRef = app4.database().ref('profile/' + user.uid);\n\n            try {\n              await userRef.update({\n                ChangesMadeToAcc: notifications.ChangesMadeToAcc,\n                ChangesMadeToGroup: notifications.ChangesMadeToGroup,\n               SecurityAlert: notifications.SecurityAlert,\n\n          somoneComments :notifications.somoneComments,\n          somoneshares:notifications.somoneshares,\n        Userfollows: notifications.Userfollows,\n        newPostMadeinGroup:notifications.newPostMadeinGroup,\n        ReciveMessage: notifications.ReciveMessage,\n\n        AutoSubscribeGroupnotif:notifications.AutoSubscribeGroupnotif,\n        AutoSubscribetonews: notifications.AutoSubscribetonews,\n              });\n\n            } catch (error) {\n              console.log(error);\n              toast.current.show({\n                severity: 'error',\n                summary: 'Error',\n                detail: 'Error is as: ' + error.message,\n                life: 9000,\n              });\n            }\n        }\n        }\n\n\n\n\n\n    console.log(notifications.Userfollows)\n\n\n\n\n\n\n\n\n\n\n\nuseEffect(() => {\n    dataIsSet()\n\n}, [notifications])\n\nconst  [clear, setClear] = useState(false)\nconst [Darks, setDarks] = useState(false)\n\n\nuseEffect(() => {\n    if (user && user.email) {\n        app4\n        .database()\n        .ref('prof')\n        .orderByChild('email')\n        .equalTo(user.email)\n        .once('value')\n        .then((snapshot) => {\n          if (snapshot.exists()) {\n            const userId = Object.keys(snapshot.val());\n          const snapshotval = snapshot.val()[userId];\nsetClear(true);\nsnapshotval.darkmode && setDarks(snapshotval.darkmode)\n          setNotifications((prevState) => ({\n            ...prevState,\n            ChangesMadeToAcc: snapshotval?.ChangesMadeToAcc || false,\n            ChangesMadeToGroup: snapshotval?.ChangesMadeToGroup || false,\n            SecurityAlert: snapshotval?.SecurityAlert || false,\n            somoneComments: snapshotval?.somoneComments || false,\n            somoneshares: snapshotval?.somoneshares || false,\n            Userfollows: snapshotval?.Userfollows || false,\n            newPostMadeinGroup: snapshotval?.newPostMadeinGroup || false,\n            ReciveMessage: snapshotval?.ReciveMessage || false,\n            AutoSubscribeGroupnotif: snapshotval?.AutoSubscribeGroupnotif || false,\n            AutoSubscribetonews: snapshotval?.AutoSubscribetonews || false,\n            setSms: snapshotval.sms,\n          }));\n\n\n\n            // setSms(snapshotvals.sms); // make sure this function is defined\n          }\n\n        })\n        .catch((error) => {\n          console.log(error);\n          toast.current.show({\n            severity: 'error',\n            summary: 'Error',\n            detail: 'Error: ' + error.message,\n            life: 3000,\n          });\n        });\n    } else {\n      // handle the case where user is not defined or does not have a uid property\n    //  toast.current.show({\n      //  severity: 'info',\n        //summary: 'info',\n        //detail: 'Auto confirm',\n        //life: 6000,\n      //});\n    }\n  }, [user]);\n\n\n\n  useEffect(() => {\n    notifications.somoneshares === true  ? setdisabled(false) : \n\n    notifications.somoneComments === true ? setdisabled(false) :\n    notifications.Userfollows === true ? setdisabled(false) :\n      notifications.newPostMadeinGroup === true  ? setdisabled(false) :\n       notifications.ReciveMessage === true  ? setdisabled(false) : setdisabled(true) \n\n\n\n       notifications.ChangesMadeToAcc === true  ? setButton(false) : \n       notifications.ChangesMadeToGroup === true ? setButton(false) :\n     notifications.SecurityAlert  === true ? setButton(false) :\n\n  notifications.somoneComments === true ? setButton(false) :\n  notifications.somoneshares === true ? setButton(false) :\n   notifications.Userfollows === true ? setButton(false) :\n  notifications.newPostMadeinGroup === true ? setButton(false) :\n  notifications.ReciveMessage === true ? setButton(false) :\n\n  notifications.AutoSubscribeGroupnotif === true ? setButton(false) :\n   notifications.AutoSubscribetonews === true ? setButton(false) :  setButton(true)\n\n\n\n  }, [notifications])\n\nconst [Button, setButton] = useState(false)\nconst Unsub = () => {\n\n\n    setNotifications((prevState) => ({\n        ...prevState,\n        ChangesMadeToAcc: false,\n        ChangesMadeToGroup:  false,\n        SecurityAlert:  false,\n        somoneComments: false,\n        somoneshares:  false,\n        Userfollows: false,\n        newPostMadeinGroup: false,\n        ReciveMessage: false,\n        AutoSubscribeGroupnotif:  false,\n        AutoSubscribetonews:  false,\n\n      }));\n      toast.current.show({\n        severity: 'Success',\n        summary: 'Success',\n        detail: 'You have been successfuly unsubscribed',\n        life: 6000,\n      });\n\n\n\n}\n\n\n\nif(clear){\nreturn(\n    <div style={{alignItems:\"center\", justifyItems: \"center\", paddingTop: \"25%\"}} className='card flex justify-content-center align-content-center '>\n      { /*  <ProgressSpinner className='text-dark'> <h1>zena </h1> </ProgressSpinner>* /}\n{/* style={{width: '50px', height: '50px'}}  strokeWidth=\"8\" fill=\"var(--surface-ground)\" animationDuration= \".5s\" */}\n    </div>\n)\n}\n\n  return (\n\n<div style={{background: Darks && \"#141515\"}}>\n<Toast ref = {toast} />\n\n  <div className={`container-xl px-4 mt-4 ${Darks && 'darken'}`}>\n    <Navbar setDarks={setDarks}/>\n    <div className={`${Darks && 'darken'}row`}>\n        <div className=\"col-lg-8\">\n            {/* Email notifications preferences card */}\n            <div className=\"card card-header-actions mb-4\">\n                <div className=\"card-header\"  style={{background: Darks && \"#141515\"}}>\n\n\n                    <div className=\"form-check form-switch\"   style={{background: Darks && \"#141515\",marginBottom:\"15px\" }}>\n\n\n<label htmlFor=\"emailNotifications\"     style={{color: \"orange\", marginTop:\"-10px\",fontSize:\"-20px\", fontWeight:\"bold\"   }}>Email notifications</label>\n\n                    </div>\n                </div>\n                <div className=\"card-body\"  style={{background: Darks && \"#141515\"}}>\n                    <>\n                        {/* Form Group (default email) */}\n                        <div className=\"mb-3\"  style={{background: Darks && \"#141515\"}}>\n\n                            <label className=\"small mb-1\" htmlFor=\"inputNotificationEmail\">Default notification email</label>\n                            <input className=\"form-control\" id=\"inputNotificationEmail\" type=\"email\" value={user && user.email}  onChange={handleNotificationsChange} disabled={true}/>\n                        </div>\n                        {/* Form Group (email updates checkboxes) */}\n                        <div className=\"mb-0\">\n                            <div className=' mb-3 pb-3'>\n                            <label className=\"small papol\" style={{color: \"purple\"}}>Choose which types of email updates you receive</label>\n                          </div>\n                           <div className=\"form-check mb-6 mt-6\" style={{marginBottom:\"15px\"}}>\n                           <Checkbox  inputId='ChangesMadeToAcc'  name='ChangesMadeToAcc'  value={true} className=\"mr-1  p-success P-button-success p-checkbox-success\" id=\"flexSwitchCheckChecked\"   onChange={handleNotificationsChange }   checked = {notifications.ChangesMadeToAcc === true}/>\n                                <label className=\"form-check-label\" style={{color: Darks && \"silver\"}} htmlFor=\"ChangesMadeToAcc\">Changes made to your account</label>\n                            </div>\n                            <div className=\"form-check mb-4\" style={{marginBottom:\"15px\"}}>\n                            <Checkbox inputId='ChangesMadeToGroup'  name='ChangesMadeToGroup'    value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"   onChange={handleNotificationsChange} checked = {notifications.ChangesMadeToGroup === true}/>\n                                <label className=\"form-check-label\"  style={{color: Darks && \"silver\"}} htmlFor=\"ChangesMadeToGroup\">Changes are made to groups you're part of</label>\n                            </div>\n\n\n\n                            <div className=\"form-check\" style={{marginBottom:\"15px\"}}>\n                            <Checkbox name='SecurityAlert' inputId='checkSecurity'   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  onChange={handleNotificationsChange}   checked = {notifications.SecurityAlert === true}/>\n                                <label  style={{color: Darks && \"silver\"}} className=\"form-check-label\" htmlFor=\"checkSecurity\">Security alerts</label>\n                            </div>\n                        </div>\n                    </>\n                </div>\n            </div>\n            {/* SMS push notifications card */}\n            <div className=\"card card-header-actions mb-4\">\n                <div className=\"card-header\"  style={{background: Darks && \"#141515\"}}>\n\n                    <div className=\"form-check form-switch\"  style={{background: Darks && \"#141515\", marginBottom:\"15px\"}}>\n                        <label  style={{color: \"orange\", marginTop:\"-10px\",fontSize:\"-20px\", fontWeight:\"bold\"   }} className=\"form-check-label ml-4\" htmlFor=\"smsToggleSwitch\"> Push Notifications</label>\n                    </div>\n                </div>\n                <div className=\"card-body\"  style={{background: Darks && \"#141515\"}}>\n                    <form>\n                        {/* Form Group (default SMS number) */}\n                        <div className=\"mb-2\">\n                            <label  style={{color: Darks && \"silver\"}} className=\"small mb-1\" htmlFor=\"inputNotificationSms\">Default SMS number</label>\n                            <InputNumber label='default-sms-Number' disabled={true}   id=\"number-input\" value={notifications.setSms} onValueChange={handleNotificationsChange} />\n                        </div>\n                        {/* Form Group (SMS updates checkboxes) */}\n                        <div className=\"mb-0\">\n                            <div className='mb-5 pb-2'>\n         <label className=\"small mb-2 pupol\"  style={{color: Darks && \"silver\"}}>Choose which types of push notifications you receive</label>\n\n                                       </div>\n                            <div className=\"form-check mb-3\"  style={{background: Darks && \"#141515\", marginBottom:\"15px\"}}>\n                            <Checkbox  inputId='somoneComments'   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  name=\"somoneComments\"  onChange={handleNotificationsChange}  checked = {notifications.somoneComments === true}/>\n                                <label className=\"form-check-label\"  style={{color: Darks && \"silver\"}} htmlFor=\"somoneComments\">Someone comments on your post</label>\n                            </div>\n                            <div className=\"form-check mb-3\" style={{marginBottom:\"15px\"}}>\n                            <Checkbox  inputId='somoneshares'   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  name=\"somoneshares\"  onChange={handleNotificationsChange }  checked = {notifications.somoneshares === true}/>\n                                <label  style={{color: Darks && \"silver\"}} className=\"form-check-label\" htmlFor=\"somoneshares\">Someone shares your post</label>\n                            </div>\n                            <div className=\"form-check mb-3\" style={{marginBottom:\"15px\"}}>\n                            <Checkbox  inputId=\"userfollow\"   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  name=\"Userfollows\"  onChange={handleNotificationsChange}  checked = {notifications.Userfollows === true}/>\n                                <label  style={{color: Darks && \"silver\"}} className=\"form-check-label\" htmlFor=\"userfollow\">A user follows your account</label>\n                            </div>\n                            <div className=\"form-check mb-3\" style={{marginBottom:\"15px\"}}>\n                            <Checkbox  inputId='newPostMadeinGroup'   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  name=\"newPostMadeinGroup\" onChange={handleNotificationsChange}   checked = {notifications.newPostMadeinGroup === true}/>\n                                <label  style={{color: Darks && \"silver\"}} className=\"form-check-label\" htmlFor=\"newPostMadeinGroup\">New posts are made in groups you're part of</label>\n                            </div>\n                            <div className=\"form-check\" style={{marginBottom:\"15px\"}}>\n                            <Checkbox  inputId='ReciveMessage'   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  name=\"ReciveMessage\" onChange={handleNotificationsChange}  checked = {notifications.ReciveMessage === true}/>\n                                <label  style={{color: Darks && \"silver\"}} className=\"form-check-label\" htmlFor=\"ReciveMessage\">You receive a  message</label>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div className=\"col-lg-4\">\n            {/* Notifications preferences card */}\n            <div className=\"card\"  style={{background: Darks && \"#141515\"}}>\n                <div style={{color: \"orange\", fontSize:\"-20px\", fontWeight:\"bold\"   }} className=\"card-header\">Notification Preferences</div>\n                <div className=\"card-body\">\n                    <>\n                        {/* Form Group (notification preference checkboxes) */}\n                        <div className=\"form-chec mb-7 \"  style={{background: Darks && \"#141515\", marginBottom:\"38px\"}}>\n                        <Checkbox  inputId='AutoSubscribeGroupnotif'   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  name=\"AutoSubscribeGroupnotif\" onChange={handleNotificationsChange}   checked = {notifications.AutoSubscribeGroupnotif === true}/>\n                            <label   style={{fontSize:\"1rem\", color: Darks && \"silver\"}} className=\"form-check-label mb-4\" htmlFor=\"AutoSubscribeGroupnotif\">Automatically subscribe to group notifications</label>\n                        </div>\n\n                        <div className=\"form-chec mb-6 mt-7\"  style={{background: Darks && \"#141515\", marginBottom:\"25px\"}}>\n                        <Checkbox  inputId='AutoSubscribetonews'   value={true} className=\"mr-1 \" id=\"flexSwitchCheckChecked\"  name=\"AutoSubscribetonews\" onChange={handleNotificationsChange }   checked = {notifications.AutoSubscribetonews === true}/>\n                            <label  style={{color: Darks && \"silver\"}} className=\"form-check-label mb-4 mt-\" htmlFor=\"AutoSubscribetonews\">Automatically subscribe to new notifications</label>\n                        </div>\n                        {/* Submit button */}\n                        <button disabled={Button} onClick={Unsub} className=\"btn btn-danger-soft btn-dark text-white mb-4 mt-6\">Unsubscribe from all notifications</button>\n                    </>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n   </div>\n  )\n}\n\nexport const Head = () => <title>Notifications</title>\n"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_typeof","obj","Symbol","iterator","constructor","_toPropertyKey","arg","input","hint","prim","toPrimitive","undefined","res","TypeError","String","Number","_toPrimitive","_defineProperty","value","defineProperty","enumerable","configurable","writable","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","_arrayWithHoles","_i","_s","_e","_x","_r","_arr","_n","_d","next","done","push","err","_iterableToArrayLimit","o","minLen","n","toString","slice","name","from","test","_unsupportedIterableToArray","_nonIterableRest","CheckboxBase","extend","defaultProps","__TYPE","autoFocus","checked","className","disabled","falseValue","icon","id","inputId","inputRef","onChange","onClick","onContextMenu","onMouseDown","readOnly","required","style","tabIndex","tooltip","tooltipOptions","trueValue","children","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","Checkbox","inProps","ref","context","props","getProps","_React$useState2","focusedState","setFocusedState","ptm","setMetaData","state","focused","elementRef","_onClick","event","_checked","isChecked","checkboxClicked","HTMLDivElement","HTMLSpanElement","isInputToggled","current","isCheckboxToggled","eventData","originalEvent","stopPropagation","preventDefault","type","defaultPrevented","focus","getElement","getInput","combinedRefs","hasTooltip","isNotEmpty","otherProps","getOtherProps","ariaProps","reduceKeys","ARIA_PROPS","boxClass","iconProps","checkboxIcon","getJSXIcon","rootProps","e","hiddenInputWrapperProps","hiddenInputProps","defaultChecked","onFocus","onBlur","onKeyDown","code","inputProps","content","pt","displayName","firebaseConfig2","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Notifications","toast","useRef","firebase","initializeApp","app4","app","user","setUser","loading","signOut","useAuth","disable","setdisabled","auth","database","useState","emaildisable","setEmaildisable","notifications","setNotifications","ChangesMadeToAcc","ChangesMadeToGroup","SecurityAlert","somoneComments","somoneshares","Userfollows","newPostMadeinGroup","ReciveMessage","AutoSubscribeGroupnotif","AutoSubscribetonews","setSms","handleNotificationsChange","prevState","console","log","useEffect","async","uid","userRef","update","error","show","severity","summary","detail","message","life","dataIsSet","clear","setClear","Darks","setDarks","email","orderByChild","equalTo","once","then","snapshot","exists","userId","val","snapshotval","darkmode","sms","catch","setButton","Button","React","alignItems","justifyItems","paddingTop","background","Toast","Navbar","marginBottom","htmlFor","color","marginTop","fontSize","fontWeight","InputNumber","label","onValueChange","Unsub","Head"],"sourceRoot":""}