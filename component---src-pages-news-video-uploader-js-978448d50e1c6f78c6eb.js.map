{"version":3,"file":"component---src-pages-news-video-uploader-js-978448d50e1c6f78c6eb.js","mappings":"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","sources":["webpack://blabzio/./src/pages/news/VideoUploader.js","webpack://blabzio/./node_modules/nanoid/index.browser.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nimport { nanoid } from 'nanoid';\n\n\n\n\nfunction VideoUploader() {\n  const [videos, setVideos] = useState([]);\n  const [recording, setRecording] = useState(false);\n  const [mediaBlobUrl, setMediaBlobUrl] = useState('');\n  const [commentInput, setCommentInput] = useState('');\n\n  const videoRef = useRef(null);\n  const recorderRef = useRef(null);\n\n  const handleStartRecording = () => {\n    setRecording(true);\n   \n  };\n\n  const handleStopRecording = () => {\n    setRecording(false);\n   \n   \n  };\n\n  const handleLike = (videoId) => {\n    \n  };\n\n  const handleDislike = (videoId) => {\n    \n  };\n\n  const handleComment = (videoId) => {\n    if (commentInput.trim() === '') {\n      return;\n    }\n\n    const newComment = {\n      id: nanoid(),\n      text: commentInput.trim(),\n    };\n\n    setCommentInput('');\n  };\n\n  const handleDelete = (videoId) => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this video?');\n    if (confirmDelete) {\n    \n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"mb-4\">Video Recorder</h1>\n      <div>\n        {recording ? (\n          <button className=\"btn btn-danger mr-2\" onClick={handleStopRecording}>\n            Stop Recording\n          </button>\n        ) : (\n          <button className=\"btn btn-primary mr-2\" onClick={handleStartRecording}>\n            Start Recording\n          </button>\n        )}\n        {recording ? null : (\n          <button\n            className=\"btn btn-success mr-2\"\n            onClick={() => setVideos((prevVideos) => [...prevVideos, mediaBlobUrl])}\n            disabled={!mediaBlobUrl}\n          >\n            Upload\n          </button>\n        )}\n      </div>\n      <video\n        ref={videoRef}\n        src={mediaBlobUrl}\n        style={{ width: '100%', marginBottom: '10px' }}\n        autoPlay\n        controls\n      />\n      <hr />\n      {videos.map((video, index) => (\n        <div key={index} className=\"card mb-3\">\n          <div className=\"card-body\">\n            <video\n              src={video.url}\n              controls\n              style={{ width: '100%', cursor: 'pointer' }}\n              onMouseEnter={(e) => e.target.play()}\n              onMouseLeave={(e) => e.target.pause()}\n            />\n            <div className=\"text-muted mt-2\">\n              Likes: {video.likes || 0} | Dislikes: {video.dislikes || 0}\n            </div>\n            <div className=\"my-3\">\n              <button className=\"btn btn-sm btn-primary mr-2\" onClick={() => handleLike(video.id)}>\n                Like\n              </button>\n              <button className=\"btn btn-sm btn-danger\" onClick={() => handleDislike(video.id)}>\n                Dislike\n              </button>\n            </div>\n            <div>\n              <h5>Comments:</h5>\n              <ul className=\"list-unstyled\">\n                {Object.values(video.comments || []).map((comment) => (\n                  <li key={comment.id}>{comment.text}</li>\n                ))}\n              </ul>\n              <div className=\"input-group mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Add a comment...\"\n                  aria-label=\"Add a comment\"\n                  aria-describedby=\"button-addon2\"\n                  value={commentInput}\n                  onChange={(e) => setCommentInput(e.target.value)}\n                />\n                <div className=\"input-group-append\">\n                  <button\n                    className=\"btn btn-outline-secondary\"\n                    type=\"button\"\n                    id=\"button-addon2\"\n                    onClick={() => handleComment(video.id)}\n                  >\n                    Post\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div>\n              <button className=\"btn btn-danger btn-sm\" onClick={() => handleDelete(video.id)}>\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default VideoUploader;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["videos","setVideos","useState","recording","setRecording","mediaBlobUrl","setMediaBlobUrl","commentInput","setCommentInput","videoRef","useRef","React","className","onClick","handleStopRecording","handleStartRecording","prevVideos","concat","_toConsumableArray","disabled","ref","src","style","width","marginBottom","autoPlay","controls","map","video","index","key","url","cursor","onMouseEnter","e","target","play","onMouseLeave","pause","likes","dislikes","id","Object","values","comments","comment","text","type","placeholder","value","onChange","videoId","trim","nanoid","handleComment","window","confirm","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}