{"version":3,"file":"component---src-pages-news-video-uploader-js-cb9ac6c1712ec93d9617.js","mappings":"6HA4CA,UA1CsBA,KACpB,MAAM,EAACC,EAAsB,EAACC,IAA4BC,EAAAA,EAAAA,UAAS,MASnE,IAPAC,EAAAA,EAAAA,YAAU,KAER,oCAA+BC,MAAMC,IACnCJ,EAAyBI,EAAOL,sBAAsB,GACtD,GACD,KAEEA,EACH,OAAOM,EAAAA,cAAA,WAAK,cAKd,MAMM,OACJC,EAAM,eACNC,EAAc,cACdC,EAAa,aACbC,GACEV,EAAsB,CACxBW,OAAO,EACPC,WAAY,CAAEC,MAAO,iBAGvB,OACEP,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAIC,GACJD,EAAAA,cAAA,UAAQQ,QAASN,GAAgB,mBACjCF,EAAAA,cAAA,UAAQQ,QAASL,GAAe,kBAChCH,EAAAA,cAAA,SAAOS,IAAKL,EAAcM,UAAQ,EAACC,UAAQ,EAACC,MAAI,IAC5C,C","sources":["webpack://blabzio/./src/pages/news/VideoUploader.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst VideoUploader = () => {\n  const [useReactMediaRecorder, setUseReactMediaRecorder] = useState(null);\n\n  useEffect(() => {\n    // Dynamically import the module when the component mounts\n    import(\"react-media-recorder\").then((module) => {\n      setUseReactMediaRecorder(module.useReactMediaRecorder);\n    });\n  }, []);\n\n  if (!useReactMediaRecorder) {\n    return <div>Loading...</div>; // Or any placeholder while loading the module\n  }\n\n  // Once the module is loaded, continue with the rest of your code\n  // (the code from your original implementation)\n  const OPTIONS = {\n    filename: \"test-filename\",\n    fileType: \"mp4\",\n    width: 1920,\n    height: 1080,\n  };\n  const {\n    status,\n    startRecording,\n    stopRecording,\n    mediaBlobUrl,\n  } = useReactMediaRecorder({\n    video: true,\n    facingMode: { exact: \"environment\" },\n  });\n\n  return (\n    <div>\n      <p>{status}</p>\n      <button onClick={startRecording}>Start Recording</button>\n      <button onClick={stopRecording}>Stop Recording</button>\n      <video src={mediaBlobUrl} controls autoPlay loop />\n    </div>\n  );\n};\n\nexport default VideoUploader;\n"],"names":["VideoUploader","useReactMediaRecorder","setUseReactMediaRecorder","useState","useEffect","then","module","React","status","startRecording","stopRecording","mediaBlobUrl","video","facingMode","exact","onClick","src","controls","autoPlay","loop"],"sourceRoot":""}